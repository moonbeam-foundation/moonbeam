name: Moonwall Build Contracts and Run Tests
description: |
  Setup and run moonwall Dev tests against a local moonbeam node.

inputs:
  moonwall_environment:
    description: Name of the moonwall environment to run tests against.
    required: true

runs:
  using: "composite"
  steps:
    - name: Check git ref
      id: check-git-ref
      run: |
        if [[ -n "${{ github.event.pull_request.head.sha }}" ]]; then
          echo "test_dir=pulls/${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
        else
          echo "test_dir=branches/master" >> $GITHUB_OUTPUT
        fi
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: "pnpm"
        cache-dependency-path: test/pnpm-lock.yaml

    - name: Setup Moonbeam PolkadotJS types
      shell: bash
      run: |
        #### Preparing the legacy types
        cd moonbeam-types-bundle
        npm ci
        npm run build

        #### Preparing the typescript api
        cd ../typescript-api
        npm ci

        cd ../test
        pnpm i ../typescript-api

    - name: "Install and run dev test"
      shell: bash
      env:
        DEBUG_COLOURS: "1"
        NODE_OPTIONS: "--max-old-space-size=12288"
      run: |
        chmod uog+x target/release/moonbeam
        cd test
        pnpm install
        pnpm compile-solidity
        pnpm moonwall test ${{ inputs.moonwall_environment }}
    - name: Upload HTML report
      if: always()
      uses: actions/upload-artifact@v3.1.2
      with:
        name: dev-test-report
        path: test/html
    - name: Upload HTML report to s3
      uses: mario-sangar/upload-s3-action@master
      id: S3
      with:
        aws_key_id: ${{ secrets.S3_COVERAGE_ID }}
        aws_secret_access_key: ${{ secrets.S3_COVERAGE_KEY }}
        aws_bucket: ${{ vars.S3_COVERAGE_BUCKET }}
        destination_dir: "${{ steps.check-git-ref.outputs.coverage_dir }}"
        source_dir: "test/html"
        acl: "none"
    - name: Link To Report
      run: echo "${{ vars.S3_COVERAGE_URL }}/${{steps.S3.outputs.object_key}}/index.html"
