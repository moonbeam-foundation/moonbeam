name: Publish Docker

on:
  workflow_dispatch:
    inputs:
      tag:
        description: tag (ex. v0.8.3) to publish on docker
        required: true

jobs:
  docker-moonbeam-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download moonbeam binary from GH release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: "tags/${{ github.event.inputs.tag }}"
          file: "moonbeam"
          target: "build/moonbeam"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=purestake/moonbeam
          TAGS="${DOCKER_IMAGE}:sha-${{ github.event.inputs.tag }},${DOCKER_IMAGE}:latest"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          driver-opts: |
            image=moby/buildkit:master
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push moonbeam
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/moonbeam.Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

      - run: |
          DOCKER_IMAGE=purestake/moonbeam
          VERSION="${{ github.event.inputs.tag }}"
          COMMIT=`git rev-list -n 1 '${{ github.event.inputs.tag }}'`
          SHA=sha-${COMMIT::8}
          echo using "${DOCKER_IMAGE}:${SHA} as base image"

          mkdir -p build 
          wget https://github.com/PureStake/moonbeam/releases/download/$VERSION/moonbeam -O build/moonbeam

          echo building "${DOCKER_IMAGE}:${VERSION}"
          docker build \
            --build-arg DOCKER_IMAGE="$DOCKER_IMAGE" \
            --build-arg SHA="$SHA" \
            -f docker/moonbeam-release.Dockerfile \
            -t "${DOCKER_IMAGE}:${VERSION}" \
            . 

          docker push "${DOCKER_IMAGE}:${VERSION}"

          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            echo tagging "${DOCKER_IMAGE}:${MINOR}"
            docker tag "${DOCKER_IMAGE}:${VERSION}" "${DOCKER_IMAGE}:${MINOR}"
            docker push "${DOCKER_IMAGE}:${MINOR}"

            MAJOR=${MINOR%.*}
            echo tagging "${DOCKER_IMAGE}:${MAJOR}"
            docker tag "${DOCKER_IMAGE}:${VERSION}" "${DOCKER_IMAGE}:${MAJOR}"
            docker push "${DOCKER_IMAGE}:${MAJOR}"

            echo tagging "${DOCKER_IMAGE}:latest"
            docker tag "${DOCKER_IMAGE}:${VERSION}" "${DOCKER_IMAGE}:latest"
            docker push "${DOCKER_IMAGE}:latest"
          fi
