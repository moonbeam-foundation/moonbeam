// SPDX-License-Identifier: GPL-3.0-only
pragma solidity >=0.8.0;

/// The interface through which solidity contracts will interact with Crowdloan Rewards
/// We follow this same interface including four-byte function selectors, in the precompile that
/// wraps the pallet
interface CrowdloanRewards {
    // First some simple accessors
    /// Checks whether the address is a contributor
    function is_contributor(address contributor) external view returns (bool);
    /// Retrieve total reward and claimed reward for an address
    function reward_info(address contributor) external view returns (uint256, uint256);

    // Now the dispatchables
    /// Claim crowdloan rewards
    function claim() external;
    /// Update reward address for crowdloan rewards
    function update_reward_address(address) external;

}

// These are the selectors generated by remix following this advice
// https://ethereum.stackexchange.com/a/73405/9963
// Eventually we will probably want a better way of generating these and copying them to Rust

{ 
    "53440c90": "is_contributor(address)"
    "76f70249": "reward_info(address)"
    "4e71d92d": "claim()" 
    "aaac61d6": "update_reward_address(address)"
}