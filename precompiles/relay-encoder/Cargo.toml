[package]
name = "pallet-evm-precompile-relay-encoder"
authors = { workspace = true }
description = "A Precompile to make relay staking calls encoding accessible to pallet-evm"
edition = "2021"
version = "0.1.0"

[dependencies]
log = { workspace = true }
num_enum = { workspace = true }
rustc-hex = { workspace = true }

# Moonbeam
pallet-xcm-transactor = { workspace = true }
xcm-primitives = { workspace = true }

# Substrate
frame-support = { workspace = true }
frame-system = { workspace = true }
pallet-staking = { workspace = true }
parity-scale-codec = { workspace = true, features = ["derive"] }
sp-core = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

# Frontier
fp-evm = { workspace = true }
pallet-evm = { workspace = true, features = ["forbid-evm-reentrancy"] }
precompile-utils = { workspace = true }

# Cumulus
cumulus-primitives-core = { workspace = true }

[dev-dependencies]
derive_more = { workspace = true }
hex-literal = { workspace = true }
serde = { workspace = true }
sha3 = { workspace = true }

# Moonbeam
precompile-utils = { workspace = true, features = ["std", "testing"] }

# Substrate
pallet-balances = { workspace = true, features = ["std"] }
pallet-timestamp = { workspace = true, features = ["std"] }
pallet-message-queue = { workspace = true, features = ["std"] }
scale-info = { workspace = true, features = ["std", "derive"] }
sp-io = { workspace = true, features = ["std"] }

# Cumulus
cumulus-pallet-parachain-system = { workspace = true, features = ["std"] }

# Polkadot
xcm = { workspace = true, features = ["std"] }
xcm-builder = { workspace = true, features = ["std"] }
xcm-executor = { workspace = true, features = ["std"] }

# ORML
orml-traits = { workspace = true, features = ["std"] }

[features]
default = ["std"]
std = [
	"cumulus-primitives-core/std",
	"fp-evm/std",
	"frame-support/std",
	"frame-system/std",
	"sp-core/std",
	"pallet-evm/std",
	"pallet-staking/std",
	"pallet-xcm-transactor/std",
	"parity-scale-codec/std",
	"precompile-utils/std",
	"sp-runtime/std",
	"sp-std/std",
	"xcm-primitives/std",
]
