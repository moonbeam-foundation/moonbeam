// Copyright 2025 Moonbeam foundation
// This file is part of Moonbeam.

// Moonbeam is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Moonbeam is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Moonbeam.  If not, see <http://www.gnu.org/licenses/>.

//! Autogenerated weights for `pallet_bridge_parachains`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-02-25, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro-de-romarq.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/moonbeam
// benchmark
// pallet
// --runtime=./target/release/wbuild/moonbeam-runtime/moonbeam_runtime.wasm
// --genesis-builder=runtime
// --genesis-builder-preset=development
// --steps=50
// --repeat=20
// --pallet=pallet_bridge_parachains
// --extrinsic=*
// --wasm-execution=compiled
// --header=./file_header.txt
// --template=./benchmarking/frame-weight-template.hbs
// --output=./runtime/moonbeam/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for `pallet_bridge_parachains`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_bridge_parachains::WeightInfo for WeightInfo<T> {
    /// Storage: `BridgePolkadotParachains::PalletOperatingMode` (r:1 w:0)
    /// Proof: `BridgePolkadotParachains::PalletOperatingMode` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotGrandpa::ImportedHeaders` (r:1 w:0)
    /// Proof: `BridgePolkadotGrandpa::ImportedHeaders` (`max_values`: Some(1024), `max_size`: Some(68), added: 1553, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ParasInfo` (r:1 w:1)
    /// Proof: `BridgePolkadotParachains::ParasInfo` (`max_values`: Some(1), `max_size`: Some(60), added: 555, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ImportedParaHashes` (r:1 w:1)
    /// Proof: `BridgePolkadotParachains::ImportedParaHashes` (`max_values`: Some(64), `max_size`: Some(64), added: 1054, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotGrandpa::FreeHeadersRemaining` (r:1 w:1)
    /// Proof: `BridgePolkadotGrandpa::FreeHeadersRemaining` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ImportedParaHeads` (r:0 w:1)
    /// Proof: `BridgePolkadotParachains::ImportedParaHeads` (`max_values`: Some(64), `max_size`: Some(196), added: 1186, mode: `MaxEncodedLen`)
    /// The range of component `p` is `[1, 2]`.
    fn submit_parachain_heads_with_n_parachains(_p: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `592`
        //  Estimated: `2543`
        // Minimum execution time: 30_000_000 picoseconds.
        Weight::from_parts(33_057_142, 2543)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `BridgePolkadotParachains::PalletOperatingMode` (r:1 w:0)
    /// Proof: `BridgePolkadotParachains::PalletOperatingMode` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotGrandpa::ImportedHeaders` (r:1 w:0)
    /// Proof: `BridgePolkadotGrandpa::ImportedHeaders` (`max_values`: Some(1024), `max_size`: Some(68), added: 1553, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ParasInfo` (r:1 w:1)
    /// Proof: `BridgePolkadotParachains::ParasInfo` (`max_values`: Some(1), `max_size`: Some(60), added: 555, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ImportedParaHashes` (r:1 w:1)
    /// Proof: `BridgePolkadotParachains::ImportedParaHashes` (`max_values`: Some(64), `max_size`: Some(64), added: 1054, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotGrandpa::FreeHeadersRemaining` (r:1 w:1)
    /// Proof: `BridgePolkadotGrandpa::FreeHeadersRemaining` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ImportedParaHeads` (r:0 w:1)
    /// Proof: `BridgePolkadotParachains::ImportedParaHeads` (`max_values`: Some(64), `max_size`: Some(196), added: 1186, mode: `MaxEncodedLen`)
    fn submit_parachain_heads_with_1kb_proof() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `592`
        //  Estimated: `2543`
        // Minimum execution time: 31_000_000 picoseconds.
        Weight::from_parts(33_000_000, 2543)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `BridgePolkadotParachains::PalletOperatingMode` (r:1 w:0)
    /// Proof: `BridgePolkadotParachains::PalletOperatingMode` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotGrandpa::ImportedHeaders` (r:1 w:0)
    /// Proof: `BridgePolkadotGrandpa::ImportedHeaders` (`max_values`: Some(1024), `max_size`: Some(68), added: 1553, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ParasInfo` (r:1 w:1)
    /// Proof: `BridgePolkadotParachains::ParasInfo` (`max_values`: Some(1), `max_size`: Some(60), added: 555, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ImportedParaHashes` (r:1 w:1)
    /// Proof: `BridgePolkadotParachains::ImportedParaHashes` (`max_values`: Some(64), `max_size`: Some(64), added: 1054, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotGrandpa::FreeHeadersRemaining` (r:1 w:1)
    /// Proof: `BridgePolkadotGrandpa::FreeHeadersRemaining` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `BridgePolkadotParachains::ImportedParaHeads` (r:0 w:1)
    /// Proof: `BridgePolkadotParachains::ImportedParaHeads` (`max_values`: Some(64), `max_size`: Some(196), added: 1186, mode: `MaxEncodedLen`)
    fn submit_parachain_heads_with_16kb_proof() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `592`
        //  Estimated: `2543`
        // Minimum execution time: 48_000_000 picoseconds.
        Weight::from_parts(56_000_000, 2543)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
}