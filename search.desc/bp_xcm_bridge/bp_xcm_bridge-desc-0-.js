searchState.loadedDescShard("bp_xcm_bridge", 0, "Primitives of the xcm-bridge-hub pallet.\nBridge metadata.\nBridge identifier - used <strong>only</strong> for communicating with …\nLocations of bridge endpoints at both sides of the bridge.\nErrors that may happen when we check bridge locations.\nBridge state.\nChannel status provider that may report whether it is …\nBridge is closed. Associated lanes are also closed. After …\nA structure containing information about from whom the …\nAn alias for the bridge deposit of <code>ThisChain</code>.\nDestination location is within the same global consensus.\nError that may be returned when suspending/resuming the …\nBridge is suspended and new messages are now being …\nBridge destination is not supported (in general).\nBridge origin location is not supported.\nLocal XCM channel manager.\nOrigin or destination locations are not universal.\nBridge is opened. Associated lanes are also opened.\nReceiver metadata.\nBridge is suspended. Associated lanes are opened. <em>suspended</em>…\nDestination network is not the network we are bridged with.\nDestination location is unsupported. We only support …\nThe <code>LaneIdType</code> generator is not supported.\nThe version of XCM location argument is unsupported.\nEncoded XCM blob. We expect the bridge messages pallet to …\nA minimized version of <code>pallet_xcm_bridge::Call</code> that can be …\nAccount with the reserved funds.\nAccount with the reserved funds.\nReserved amount.\nReserved amount.\nGetter for <code>bridge_destination_universal_location</code>\nSee <code>BridgeLocations::bridge_destination_universal_location</code>.\nGetter for <code>bridge_id</code>\nGiven XCM locations, generate lane id and universal …\nGetter for <code>bridge_origin_relative_location</code>\nRelative location of the bridge origin chain. This is …\nGetter for <code>bridge_origin_universal_location</code>\nSee <code>BridgeLocations::bridge_origin_universal_location</code>. …\nGenerates the exact same <code>LaneId</code> on the both bridge hubs.\nCall/extrinsic index.\n<code>pallet_xcm_bridge::Call::close_bridge</code>\nReserved amount on the sovereign account of the sibling …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAccess the inner representation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the channel is currently active and can be …\nMapping to the unique <code>LaneId</code>.\nHolds data about the <code>bridge_origin_relative_location</code> where …\nCreate bridge identifier from two universal locations.\nCreate a new receiver.\nCreate new deposit.\n<code>pallet_xcm_bridge::Call::open_bridge</code>\nPallet index.\nResume the previously suspended bridge, opened by given …\nCurrent bridge state.\nSuspend the bridge, opened by given origin.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nUniversal <code>InteriorLocation</code> from the bridged consensus.\nThe number of messages that we may prune in a single call.\nOptional <code>maybe_notify</code> holds data about the …")