searchState.loadedDescShard("evm_tracing_events", 0, "A Proxy in this context is an environmental trait …\nMain trait to proxy emitted messages. Used 2 times :\nAllow to configure which data of the Step event we want to …\nExecution address.\nApparent value of the EVM.\nCaller of the EVM.\nAccess the global reference and call it’s <code>event</code> method, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllow the runtime to know which data should be discarded …\nCreate scheme of <code>CREATE2</code>.\nCreate at a fixed location.\nLegacy create scheme of <code>CREATE</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSource address.\nTarget address.\nTransfer value.\nCaller of the create.\nCaller of the create.\nCode hash.\nSalt.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ADD</code>\n<code>ADDMOD</code>\n<code>ADDRESS</code>\n<code>AND</code>\n<code>BALANCE</code>\n<code>BASEFEE</code>\n<code>BLOCKHASH</code>\n<code>BYTE</code>\n<code>CALL</code>\n<code>CALLCODE</code>\n<code>CALLDATACOPY</code>\n<code>CALLDATALOAD</code>\n<code>CALLDATASIZE</code>\n<code>CALLER</code>\n<code>CALLVALUE</code>\n<code>CHAINID</code>\n<code>CODECOPY</code>\n<code>CODESIZE</code>\n<code>COINBASE</code>\n<code>CREATE</code>\n<code>CREATE2</code>\nCall stack is too deep (runtime).\nCreate opcode encountered collision (runtime).\nCreate init code exceeds limit (runtime).\nAttempt to create an empty account (runtime, unused).\n<code>DELEGATECALL</code>\n<code>DIFFICULTY</code>\n<code>DIV</code>\n<code>DUPn</code>\nEncountered the designated invalid opcode.\nSee EIP-3541\n<code>EQ</code>\n<code>EXP</code>\n<code>EXTCODECOPY</code>\n<code>EXTCODEHASH</code>\n<code>EXTCODESIZE</code>\nMachine returns a normal EVM error.\nThe machine has exited. It cannot be executed again.\nExit error reason.\nExit reason.\nExit succeed reason.\nMachine encountered an error that is not supposed to be …\n<code>GAS</code>\n<code>GASLIMIT</code>\n<code>GASPRICE</code>\n<code>GT</code>\n<code>INVALID</code>\n<code>ISZERO</code>\nInvalid opcode during execution or starting byte is 0xef. …\nJump destination is invalid.\nAn opcode accesses memory region, but the region is …\n<code>JUMP</code>\n<code>JUMPDEST</code>\n<code>JUMPI</code>\n<code>LOGn</code>\n<code>LT</code>\n<code>MCOPY</code>\n<code>MLOAD</code>\n<code>MOD</code>\n<code>MSIZE</code>\n<code>MSTORE</code>\n<code>MSTORE8</code>\n<code>MUL</code>\n<code>MULMOD</code>\nNonce reached maximum value of 2^64-1 …\n<code>NOT</code>\n<code>NUMBER</code>\n<code>OR</code>\n<code>ORIGIN</code>\nOpcode enum. One-to-one corresponding to an <code>u8</code> value.\nOther normal errors.\nNot enough fund to start the execution (runtime).\nExecution runs out of gas (runtime).\nAn opcode accesses external information, but the request …\n<code>PC</code>\nPC underflowed (unused).\n<code>POP</code>\n<code>PUSHn</code>\n<code>RETURN</code>\n<code>RETURNDATACOPY</code>\n<code>RETURNDATASIZE</code>\n<code>REVERT</code>\nMachine encountered an explicit return.\nMachine encountered an explicit revert.\n<code>SAR</code>\n<code>SDIV</code>\n<code>SELFBALANCE</code>\n<code>SGT</code>\n<code>SHA3</code>\n<code>SHL</code>\n<code>SHR</code>\n<code>SIGNEXTEND</code>\n<code>SLOAD</code>\n<code>SLT</code>\n<code>SMOD</code>\n<code>SSTORE</code>\n<code>STATICCALL</code>\n<code>STOP</code>\n<code>SUB</code>\n<code>SUICIDE</code>\n<code>SWAPn</code>\nTrying to push into a stack over stack limit.\nTrying to pop from an empty stack.\nMachine encountered an explicit stop.\nMachine has succeeded.\nMachine encountered an explicit suicide.\n<code>TIMESTAMP</code>\n<code>TLOAD</code>\n<code>TSTORE</code>\nThe machine has trapped. It is waiting for external …\n<code>XOR</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the exit is error.\nWhether the exit is fatal.\nWhether the opcode is a push opcode.\nWhether the exit is revert.\nWhether the exit is succeeded.\nConverts an Opcode into its name, stored in a <code>Vec&lt;u8&gt;</code>.")