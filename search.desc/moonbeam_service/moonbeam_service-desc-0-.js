searchState.loadedDescShard("moonbeam_service", 0, "This module assembles the Moonbeam service components, …\nConfig that abstracts over all available client …\nSome way of identifying an account on the chain. We …\nBalance of an account.\nBlock Import Pipeline used.\nAn index to a block.\nA client instance of Moonbeam.\nA trait that must be implemented by all moon* runtimes …\nA handle to a Moonbeam client instance.\nUsed in dev mode to import new blocks as best blocks.\nExecute something with the client instance.\nA hash of some data used by the chain.\nBlock header type as expected by this runtime.\nCan be called for a <code>Configuration</code> to check if it is a …\nIndex of a transaction in the chain.\nThe return type when calling this instance.\nUsed in parachain mode.\nA set of APIs that polkadot-like runtimes must implement.\nTrivial enum representing runtime variant\nA chain-specific digest of data useful for light clients …\nExecute the given something with the client.\nExecute whatever should be executed with the given client …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nThe host function ed25519_verify has changed its behavior …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet block hash by number. Returns <code>None</code> if the header is …\nGet block header. Returns <code>None</code> if block is not found.\nThe block header.\nGet blockchain info.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this is a configuration for a dev network.\nReturns <code>true</code> if this is a configuration for the <code>Moonbase</code> …\nReturns <code>true</code> if this is a configuration for the <code>Moonbeam</code> …\nReturns <code>true</code> if this is a configuration for the <code>Moonriver</code> …\nBuilds a new object suitable for chain operations.\nBuilds a new development service. This service uses manual …\nBuilds the PartialComponents for a parachain or …\nGet block number by hash. Returns <code>None</code> if the header is …\nThe block number.\nThe parent hash.\nA collection of node-specific RPC extensions and related …\nStart a normal parachain node.\nThe state trie merkle root\nSome way of identifying an account on the chain. We …\nHelper function to derive <code>num_accounts</code> child pairs from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFunction to generate accounts given a mnemonic and a …\nHelper function to get an <code>AccountId</code> from an ECDSA Key Pair.\nHelper function to generate a crypto pair from seed\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMoonbase Chain Specifications and utilities for building …\nMoonbeam Chain Specifications and utilities for building …\nMoonriver Chain Specifications and utilities for building …\nThe id of the Parachain.\nThe relay chain of the Parachain.\nEmbedded specs for testing purposes, must be compiled with …\nTry to get the extension from the given <code>ChainSpec</code>.\nFake specifications, only a workaround to compile with …\nReturns the argument unchanged.\nParse json file into a <code>ChainSpec</code>\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSpecialized <code>ChainSpec</code>. This is a specialization of the …\nGenerate a chain spec for use with the development service.\nGenerate a default spec for the parachain service. Use …\nSpecialized <code>ChainSpec</code>. This is a specialization of the …\nGenerate a chain spec for use with the development service.\nGenerate a default spec for the parachain service. Use …\nSpecialized <code>ChainSpec</code>. This is a specialization of the …\nGenerate a chain spec for use with the development service.\nGenerate a default spec for the parachain service. Use …\nGenerate testing chain_spec for staking integration tests …\nLazy loading client backend type.\nLazy loading client call executor type.\nLazy loading client type.\nLazy loading parts type.\nBuilds the PartialComponents for a lazy loading node.\nCreate the initial parts of a lazy loading node.\nCreate the initial parts of a lazy loading node.\nBuilds a new lazy loading service. This service uses …\nLazy loading (In-memory) backend. Keeps all states and …\nIn-memory blockchain. Supports concurrent reads.\nDB-backed patricia trie state, transaction type is an …\nA raw iterator over the <code>BenchmarkingState</code>.\nA struct containing arguments for iterating over the …\nGet total number of blocks.\nCompare canonical chain to other canonical chain.\nCheck that genesis storage is valid.\nCompare this blockchain with another in-mem blockchain\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet block hash by number. Returns <code>None</code> if the header is …\nGet block header. Returns <code>None</code> if block is not found.\nGet header hash of given block.\nGet blockchain info.\nInsert a block header and associated data.\nInsert header CHT root.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an instance of a lazy loading memory backend.\nGet block number by hash. Returns <code>None</code> if the header is …\nThe prefix of the keys over which to iterate.\nSet an existing block as head.\nThe prefix from which to start the iteration from.\nIf this is <code>true</code> then the iteration will <em>not</em> include the …\nCall executor that executes methods locally, querying all …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreates new instance of local call executor.\nFull client dependencies.\nBackend.\nCache for Ethereum block data.\nThe client instance to use.\nManual seal command sink\nInstantiate all Full RPC extensions.\nChannels for manual xcm messages (downward, hrmp)\nThe list of optional RPC extensions.\nFee history cache.\nMaximum fee history cache size.\nEthFilterApi pool.\nMandated parent hashes for a given block hash.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFrontier Backend.\nGraph pool instance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Node authority flag\nMaximum block range in a query.\nMaximum number of logs in a query.\nNetwork service\nEthereum data access overrides.\nTransaction pool instance.\nSpawn the tasks that are required to run Moonbeam.\nChain syncing service\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")