searchState.loadedDescShard("pallet_crowdloan_rewards", 0, "Crowdloan Rewards Pallet\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for pallet_crowdloan_rewards\nStorage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …\nUser trying to associate a native identity with a relay …\nTrying to introduce a batch that goes beyond the limits of …\nContains a variant per dispatchable extrinsic that this …\nStorage type is <code>StorageMap</code> with key type …\nConfiguration trait of this pallet.\nType alias for contributor data: (relay_account, …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nFirst claim already done\nCan be used to configure the genesis state of this pallet.\nThe initial payment of InitializationPayment % was paid\nPercentage to be payed at initialization\nStorage type is <code>StorageValue</code> with value type <code>bool</code>.\nChecker for the reward vec, is it initalized already?\nWhen initializing the reward vec an already initialized …\nWhen initializing the reward vec an already initialized …\nUser submitted an unsifficient number of proofs to change …\nUser trying to associate a native identity with a relay …\nUser trying to claim the first free reward provided the …\nThe minimum contribution to which rewards will be paid.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nSomeone has proven they made a contribution and associated …\nUser trying to claim an award did not have an claim …\nUser provided a signature from a non-contributor relay …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe AccountId type contributors used on the relay chain.\nA fraction representing the percentage of proofs that need …\nA contributor has updated the reward address.\nThe currency in which the rewards will be paid (probably …\nStores info about the rewards owed as well as how much has …\nThe contribution is not high enough to be eligible for …\nReward vec has already been initialized\nReward vec has not yet been fully initialized\nUser trying to claim rewards has already claimed all …\nRewards should match funds of the pallet\nA contributor has claimed some rewards. Data is the …\nThe overarching event type\nNetwork Identifier to be appended into the signatures for …\nInitialize_reward_vec received too many contributors\nStorage type is <code>StorageMap</code> with key type …\nThe type that will be used to track vesting progress\nThe notion of time that will be used for vesting. Probably …\nProvided vesting period is not valid\nThe account ID that holds the Crowdloan’s funds\nAn auto-generated getter for <code>AccountsPayable</code>.\nAssociate a native rewards_destination identity with a …\nAssociate a native rewards_destination identity with a …\nChange reward account by submitting proofs from relay …\nChange reward account by submitting proofs from relay …\nCollect whatever portion of your reward are currently …\nCollect whatever portion of your reward are currently …\nAn auto-generated getter for <code>ClaimedRelayChainIds</code>.\nAuto-generated docs-only module listing all defined …\nAn auto-generated getter for <code>EndVestingBlock</code>.\nEnd vesting block number\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nList of contributors with their relay account, optional …\nAn auto-generated getter for <code>InitializedRewardAmount</code>.\nAn auto-generated getter for <code>InitVestingBlock</code>.\nInitial vesting block number\nAn auto-generated getter for <code>Initialized</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>associate_native_identity</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>claim</code>.\nCreate a call with the variant <code>update_reward_address</code>.\nThe Account Id’s balance\nAuto-generated docs-only module listing all (public and …\nAn auto-generated getter for <code>TotalContributors</code>.\nAn auto-generated getter for <code>UnassociatedContributions</code>.\nUpdate reward address, proving that the caller owns the …\nUpdate reward address, proving that the caller owns the …\nAssociate a native rewards_destination identity with a …\nChange reward account by submitting proofs from relay …\nCollect whatever portion of your reward are currently …\nUpdate reward address, proving that the caller owns the …\nWarning: Doc-Only\nWarning: Doc-Only\nVesting block height at the initialization of the pallet\nVesting block height at the initialization of the pallet\nWarning: Doc-Only\nTotal initialized amount so far. We store this to make …\nTotal number of contributors to aid hinting benchmarking\nWarning: Doc-Only\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for pallet_crowdloan_rewards using the Substrate …\nWeight functions needed for pallet_crowdloan_rewards.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")