import "@moonbeam-network/api-augment";
import { beforeAll, describeSuite, expect } from "@moonwall/cli";
import { xxhashAsU8a } from "@polkadot/util-crypto";
import { u8aConcat, u8aToHex } from "@polkadot/util";
import { alith } from "@moonwall/util";
import { PRECOMPILE_ZKAUTH_VERIFIER } from "../../../../helpers";

describeSuite({
  id: "D012893",
  title: "Precompiles - ZkAuth Verifier",
  foundationMethods: "dev",
  testCases: ({ context, it, log }) => {
    it({
      id: "T01",
      title: "Proof verification",
      test: async function () {
        const receipt = u8aToHex(new Uint8Array([
          2, 128, 2, 28, 222, 90, 87, 203, 25, 149, 126, 236, 39, 68, 161, 0, 67, 230, 141, 32, 22,
          170, 18, 83, 154, 37, 248, 226, 188, 182, 211, 255, 184, 213, 105, 0, 29, 230, 190, 3, 64,
          101, 134, 89, 71, 15, 83, 166, 85, 88, 1, 24, 188, 248, 3, 238, 203, 244, 84, 240, 201,
          98, 92, 76, 162, 208, 248, 11, 157, 27, 233, 227, 61, 49, 159, 144, 114, 39, 180, 116,
          239, 222, 0, 158, 98, 135, 123, 118, 134, 251, 111, 76, 35, 104, 245, 15, 79, 26, 56, 15,
          52, 233, 35, 58, 89, 65, 72, 216, 37, 172, 58, 38, 198, 114, 169, 248, 219, 55, 95, 213,
          141, 134, 94, 190, 218, 15, 57, 73, 168, 144, 94, 29, 118, 60, 65, 107, 33, 77, 156, 251,
          0, 124, 130, 205, 235, 38, 29, 184, 13, 94, 254, 132, 193, 67, 107, 197, 131, 150, 17,
          172, 77, 11, 70, 36, 12, 86, 6, 56, 181, 251, 158, 89, 1, 183, 144, 120, 224, 196, 255,
          41, 48, 241, 181, 13, 10, 204, 237, 172, 150, 96, 45, 52, 180, 116, 245, 19, 183, 248,
          162, 26, 143, 3, 146, 176, 50, 6, 10, 144, 221, 21, 12, 209, 185, 50, 177, 151, 241, 129,
          215, 27, 109, 70, 239, 59, 116, 254, 183, 30, 40, 207, 173, 191, 115, 192, 99, 248, 29,
          56, 77, 47, 221, 9, 73, 252, 145, 204, 8, 120, 54, 117, 54, 131, 204, 197, 80, 168, 178,
          134, 183, 0, 0, 252, 227, 128, 1, 244, 166, 132, 138, 9, 128, 192, 230, 152, 10, 208, 246,
          149, 249, 2, 145, 180, 231, 218, 4, 132, 169, 133, 249, 15, 142, 130, 171, 227, 14, 185,
          191, 207, 66, 147, 152, 194, 148, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 1, 0, 168, 4, 1, 0, 0, 0, 29, 2, 0, 0, 101, 121, 74, 48, 101, 88, 65, 105, 79,
          105, 74, 75, 86, 49, 81, 105, 76, 67, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122,
          73, 49, 78, 105, 73, 115, 73, 109, 116, 112, 90, 67, 73, 54, 73, 106, 103, 51, 79, 84, 74,
          108, 78, 50, 77, 121, 89, 84, 74, 105, 78, 50, 77, 120, 89, 87, 73, 53, 77, 106, 82, 108,
          77, 84, 85, 52, 89, 84, 82, 108, 89, 122, 82, 106, 90, 106, 85, 120, 73, 110, 48, 46, 101,
          121, 74, 108, 98, 87, 70, 112, 98, 67, 73, 54, 73, 110, 82, 108, 99, 51, 82, 65, 90, 87,
          49, 104, 97, 87, 119, 117, 89, 50, 57, 116, 73, 105, 119, 105, 98, 109, 57, 117, 89, 50,
          85, 105, 79, 105, 73, 119, 101, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65,
          119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119,
          77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 105, 102,
          81, 46, 84, 80, 85, 114, 109, 83, 116, 119, 89, 50, 105, 117, 113, 77, 76, 88, 110, 51,
          87, 118, 112, 105, 74, 89, 49, 87, 45, 98, 98, 114, 85, 49, 50, 87, 71, 117, 118, 48, 110,
          75, 57, 78, 74, 54, 81, 48, 98, 84, 56, 68, 95, 65, 103, 115, 56, 113, 106, 56, 76, 80,
          79, 71, 71, 69, 49, 67, 100, 72, 110, 50, 105, 115, 66, 99, 72, 103, 83, 120, 97, 69, 98,
          78, 98, 87, 56, 80, 122, 48, 102, 86, 87, 112, 70, 105, 101, 104, 106, 56, 66, 119, 114,
          67, 52, 55, 82, 108, 100, 53, 100, 119, 97, 122, 115, 120, 103, 104, 70, 56, 52, 68, 51,
          113, 50, 83, 111, 53, 90, 66, 81, 115, 108, 87, 113, 113, 49, 80, 82, 71, 69, 70, 75, 102,
          120, 52, 65, 79, 103, 110, 83, 51, 55, 53, 111, 75, 105, 50, 106, 65, 90, 51, 106, 78, 95,
          53, 56, 85, 78, 100, 103, 116, 85, 85, 100, 70, 104, 117, 79, 71, 72, 118, 71, 98, 87,
          110, 114, 95, 102, 69, 87, 73, 98, 114, 69, 99, 102, 78, 70, 73, 87, 97, 104, 110, 103,
          81, 50, 100, 98, 85, 45, 115, 83, 78, 90, 70, 90, 53, 76, 51, 76, 52, 54, 98, 88, 85, 107,
          66, 108, 98, 71, 71, 78, 122, 116, 114, 54, 79, 105, 65, 72, 85, 119, 120, 113, 72, 50,
          65, 48, 50, 104, 49, 69, 99, 101, 85, 111, 108, 50, 109, 54, 95, 71, 84, 118, 80, 102,
          100, 88, 75, 122, 100, 48, 90, 51, 52, 67, 74, 78, 87, 95, 108, 111, 65, 69, 104, 101, 72,
          54, 57, 104, 107, 109, 107, 71, 80, 98, 116, 51, 116, 97, 95, 88, 65, 70, 87, 82, 72, 103,
          109, 86, 78, 55, 103, 70, 106, 69, 114, 82, 109, 80, 105, 66, 56, 49, 56, 89, 103, 65, 70,
          66, 66, 73, 117, 104, 90, 110, 106, 118, 71, 109, 67, 53, 81, 0, 0, 0, 0, 0, 177, 158,
          148, 199, 9, 232, 199, 167, 255, 2, 168, 139, 240, 189, 2, 173, 254, 225, 194, 7, 152,
          247, 174, 196, 6, 196, 171, 223, 158, 9, 141, 241, 146, 220, 10, 170, 237, 133, 231, 5,
          168, 4, 1, 0, 0, 0, 29, 2, 0, 0, 101, 121, 74, 48, 101, 88, 65, 105, 79, 105, 74, 75, 86,
          49, 81, 105, 76, 67, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105,
          73, 115, 73, 109, 116, 112, 90, 67, 73, 54, 73, 106, 103, 51, 79, 84, 74, 108, 78, 50, 77,
          121, 89, 84, 74, 105, 78, 50, 77, 120, 89, 87, 73, 53, 77, 106, 82, 108, 77, 84, 85, 52,
          89, 84, 82, 108, 89, 122, 82, 106, 90, 106, 85, 120, 73, 110, 48, 46, 101, 121, 74, 108,
          98, 87, 70, 112, 98, 67, 73, 54, 73, 110, 82, 108, 99, 51, 82, 65, 90, 87, 49, 104, 97,
          87, 119, 117, 89, 50, 57, 116, 73, 105, 119, 105, 98, 109, 57, 117, 89, 50, 85, 105, 79,
          105, 73, 119, 101, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68,
          65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65,
          119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 119, 77, 68, 65, 105, 102, 81, 46, 84,
          80, 85, 114, 109, 83, 116, 119, 89, 50, 105, 117, 113, 77, 76, 88, 110, 51, 87, 118, 112,
          105, 74, 89, 49, 87, 45, 98, 98, 114, 85, 49, 50, 87, 71, 117, 118, 48, 110, 75, 57, 78,
          74, 54, 81, 48, 98, 84, 56, 68, 95, 65, 103, 115, 56, 113, 106, 56, 76, 80, 79, 71, 71,
          69, 49, 67, 100, 72, 110, 50, 105, 115, 66, 99, 72, 103, 83, 120, 97, 69, 98, 78, 98, 87,
          56, 80, 122, 48, 102, 86, 87, 112, 70, 105, 101, 104, 106, 56, 66, 119, 114, 67, 52, 55,
          82, 108, 100, 53, 100, 119, 97, 122, 115, 120, 103, 104, 70, 56, 52, 68, 51, 113, 50, 83,
          111, 53, 90, 66, 81, 115, 108, 87, 113, 113, 49, 80, 82, 71, 69, 70, 75, 102, 120, 52, 65,
          79, 103, 110, 83, 51, 55, 53, 111, 75, 105, 50, 106, 65, 90, 51, 106, 78, 95, 53, 56, 85,
          78, 100, 103, 116, 85, 85, 100, 70, 104, 117, 79, 71, 72, 118, 71, 98, 87, 110, 114, 95,
          102, 69, 87, 73, 98, 114, 69, 99, 102, 78, 70, 73, 87, 97, 104, 110, 103, 81, 50, 100, 98,
          85, 45, 115, 83, 78, 90, 70, 90, 53, 76, 51, 76, 52, 54, 98, 88, 85, 107, 66, 108, 98, 71,
          71, 78, 122, 116, 114, 54, 79, 105, 65, 72, 85, 119, 120, 113, 72, 50, 65, 48, 50, 104,
          49, 69, 99, 101, 85, 111, 108, 50, 109, 54, 95, 71, 84, 118, 80, 102, 100, 88, 75, 122,
          100, 48, 90, 51, 52, 67, 74, 78, 87, 95, 108, 111, 65, 69, 104, 101, 72, 54, 57, 104, 107,
          109, 107, 71, 80, 98, 116, 51, 116, 97, 95, 88, 65, 70, 87, 82, 72, 103, 109, 86, 78, 55,
          103, 70, 106, 69, 114, 82, 109, 80, 105, 66, 56, 49, 56, 89, 103, 65, 70, 66, 66, 73, 117,
          104, 90, 110, 106, 118, 71, 109, 67, 53, 81, 0, 0, 0, 177, 158, 148, 199, 9, 232, 199,
          167, 255, 2, 168, 139, 240, 189, 2, 173, 254, 225, 194, 7, 152, 247, 174, 196, 6, 196,
          171, 223, 158, 9, 141, 241, 146, 220, 10, 170, 237, 133, 231, 5,
        ]));
        const imageId = [
          1923256869, 654795233, 2887859926, 1709721587, 1196091263, 3916749566, 1248329059,
          610202488,
        ];
        // Set ImageId
        const imageIdStorageKey = u8aToHex(
          u8aConcat(xxhashAsU8a("zkAuth", 128), xxhashAsU8a("ImageId", 128))
        );
        const imageIdStorageValue = u8aToHex(new Uint8Array(new Uint32Array(imageId).buffer));
        const tx = context
          .polkadotJs()
          .tx.system.setStorage([[imageIdStorageKey, imageIdStorageValue]]);
        console.log([imageIdStorageKey, imageIdStorageValue])
        await context.polkadotJs().tx.sudo.sudo(tx).signAndSend(alith);
        await context.createBlock();

        expect(
          await context.readContract!({
            contractAddress: PRECOMPILE_ZKAUTH_VERIFIER,
            contractName: "ZkAuth",
            functionName: "verifyProof",
            args: [receipt],
            gas: "estimate",
          })
        ).toBe(receipt);
      },
    });
  },
});
