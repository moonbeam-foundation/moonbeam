{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "inputs": [
          { "internalType": "bytes32", "name": "nimbusId", "type": "bytes32" }
        ],
        "name": "addAssociation",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "bytes32", "name": "nimbusId", "type": "bytes32" }
        ],
        "name": "clearAssociation",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "removeKeys",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "bytes", "name": "keys", "type": "bytes" }
        ],
        "name": "setKeys",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "oldNimbusId",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "newNimbusId",
            "type": "bytes32"
          }
        ],
        "name": "updateAssociation",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "author": "The Moonbeam Team",
      "custom:address": "0x0000000000000000000000000000000000000807",
      "details": "The interface through which solidity contracts will interact with pallet-author.mapping",
      "kind": "dev",
      "methods": {
        "addAssociation(bytes32)": {
          "custom:selector": "ef8b6cd8",
          "details": "Add association",
          "params": { "nimbusId": "The nimbusId to be associated" }
        },
        "clearAssociation(bytes32)": {
          "custom:selector": "448b54d6",
          "details": "Clear existing association",
          "params": { "nimbusId": "The nimbusId to be cleared" }
        },
        "removeKeys()": {
          "custom:selector": "a36fee17",
          "details": "Remove keys"
        },
        "setKeys(bytes)": {
          "custom:selector": "f1ec919c",
          "details": "Set keys",
          "params": { "keys": "The new session keys" }
        },
        "updateAssociation(bytes32,bytes32)": {
          "custom:selector": "25a39da5",
          "details": "Update existing association",
          "params": {
            "newNimbusId": "The new nimbusId to be associated",
            "oldNimbusId": "The old nimbusId to be replaced"
          }
        }
      },
      "title": "Pallet AuthorMapping Interface",
      "version": 1
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "addAssociation(bytes32)": "ef8b6cd8",
        "clearAssociation(bytes32)": "448b54d6",
        "removeKeys()": "a36fee17",
        "setKeys(bytes)": "f1ec919c",
        "updateAssociation(bytes32,bytes32)": "25a39da5"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nimbusId\",\"type\":\"bytes32\"}],\"name\":\"addAssociation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nimbusId\",\"type\":\"bytes32\"}],\"name\":\"clearAssociation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"keys\",\"type\":\"bytes\"}],\"name\":\"setKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"oldNimbusId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newNimbusId\",\"type\":\"bytes32\"}],\"name\":\"updateAssociation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x0000000000000000000000000000000000000807\",\"details\":\"The interface through which solidity contracts will interact with pallet-author.mapping\",\"kind\":\"dev\",\"methods\":{\"addAssociation(bytes32)\":{\"custom:selector\":\"ef8b6cd8\",\"details\":\"Add association\",\"params\":{\"nimbusId\":\"The nimbusId to be associated\"}},\"clearAssociation(bytes32)\":{\"custom:selector\":\"448b54d6\",\"details\":\"Clear existing association\",\"params\":{\"nimbusId\":\"The nimbusId to be cleared\"}},\"removeKeys()\":{\"custom:selector\":\"a36fee17\",\"details\":\"Remove keys\"},\"setKeys(bytes)\":{\"custom:selector\":\"f1ec919c\",\"details\":\"Set keys\",\"params\":{\"keys\":\"The new session keys\"}},\"updateAssociation(bytes32,bytes32)\":{\"custom:selector\":\"25a39da5\",\"details\":\"Update existing association\",\"params\":{\"newNimbusId\":\"The new nimbusId to be associated\",\"oldNimbusId\":\"The old nimbusId to be replaced\"}}},\"title\":\"Pallet AuthorMapping Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"AuthorMapping\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0xdea0684af597742743af5415a0cb30c3e7000c54c6a27ddc8c675a47bd1dd738\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://8a5a7949a020e796e789f0ec5e31676c0d68240c0dfa0759818e6657230f5170\",\"dweb:/ipfs/QmdM5gJo5GVdLLKXSNahW4PvFvj81bhpYzb37qRFhW2wju\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @author The Moonbeam Team\n/// @title Pallet AuthorMapping Interface\n/// @dev The interface through which solidity contracts will interact with pallet-author.mapping\n/// @custom:address 0x0000000000000000000000000000000000000807\ninterface AuthorMapping {\n    /// @dev Add association\n    /// @custom:selector ef8b6cd8\n    ///\n    /// @param nimbusId The nimbusId to be associated\n    function addAssociation(bytes32 nimbusId) external;\n\n    /// @dev Update existing association\n    /// @custom:selector 25a39da5\n    ///\n    /// @param oldNimbusId The old nimbusId to be replaced\n    /// @param newNimbusId The new nimbusId to be associated\n    function updateAssociation(bytes32 oldNimbusId, bytes32 newNimbusId)\n        external;\n\n    /// @dev Clear existing association\n    /// @custom:selector 448b54d6\n    ///\n    /// @param nimbusId The nimbusId to be cleared\n    function clearAssociation(bytes32 nimbusId) external;\n\n    /// @dev Remove keys\n    /// @custom:selector a36fee17\n    ///\n    function removeKeys() external;\n\n    /// @dev Set keys\n    /// @custom:selector f1ec919c\n    ///\n    /// @param keys The new session keys\n    function setKeys(bytes memory keys) external;\n}\n"
}
