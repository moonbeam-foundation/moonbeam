{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "inputs": [],
        "name": "DOMAIN_SEPARATOR",
        "outputs": [
          { "internalType": "bytes32", "name": "", "type": "bytes32" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "uint256", "name": "value", "type": "uint256" },
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          { "internalType": "uint64", "name": "gaslimit", "type": "uint64" },
          { "internalType": "uint256", "name": "deadline", "type": "uint256" },
          { "internalType": "uint8", "name": "v", "type": "uint8" },
          { "internalType": "bytes32", "name": "r", "type": "bytes32" },
          { "internalType": "bytes32", "name": "s", "type": "bytes32" }
        ],
        "name": "dispatch",
        "outputs": [
          { "internalType": "bytes", "name": "output", "type": "bytes" }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "owner", "type": "address" }
        ],
        "name": "nonces",
        "outputs": [
          { "internalType": "uint256", "name": "", "type": "uint256" }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "DOMAIN_SEPARATOR()": {
          "details": "Returns the EIP712 domain separator. It is used to avoid replay attacks accross assets or other similar EIP712 message structures. Selector: 0x3644e515"
        },
        "dispatch(address,address,uint256,bytes,uint64,uint256,uint8,bytes32,bytes32)": {
          "details": "Dispatch a call on the behalf of an other user with a EIP712 permit. Will revert if the permit is not valid or if the dispatched call reverts or errors (such as out of gas). If successful the EIP712 nonce is increased to prevent this permit to be replayed.",
          "params": {
            "data": "Call data",
            "deadline": "Deadline in UNIX seconds after which the permit will no longer be valid.",
            "from": "Who made the permit and want its call to be dispatched on their behalf.",
            "gaslimit": "Gaslimit the dispatched call requires.     Providing it prevents the dispatcher to manipulate the gaslimit.",
            "r": "R part of the signature.",
            "s": "S part of the signature.",
            "to": "Which address the call is made to.",
            "v": "V part of the signature.",
            "value": "Value being transfered from the \"from\" account."
          },
          "returns": { "output": "Output of the call. Selector: b5ea0966" }
        },
        "nonces(address)": {
          "details": "Returns the current nonce for given owner. A permit must have this nonce to be consumed, which will increase the nonce by one. Selector: 0x7ecebe00"
        }
      },
      "version": 1
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "dispatch(address,address,uint256,bytes,uint64,uint256,uint8,bytes32,bytes32)": "b5ea0966",
        "nonces(address)": "7ecebe00"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gaslimit\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP712 domain separator. It is used to avoid replay attacks accross assets or other similar EIP712 message structures. Selector: 0x3644e515\"},\"dispatch(address,address,uint256,bytes,uint64,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Dispatch a call on the behalf of an other user with a EIP712 permit. Will revert if the permit is not valid or if the dispatched call reverts or errors (such as out of gas). If successful the EIP712 nonce is increased to prevent this permit to be replayed.\",\"params\":{\"data\":\"Call data\",\"deadline\":\"Deadline in UNIX seconds after which the permit will no longer be valid.\",\"from\":\"Who made the permit and want its call to be dispatched on their behalf.\",\"gaslimit\":\"Gaslimit the dispatched call requires.     Providing it prevents the dispatcher to manipulate the gaslimit.\",\"r\":\"R part of the signature.\",\"s\":\"S part of the signature.\",\"to\":\"Which address the call is made to.\",\"v\":\"V part of the signature.\",\"value\":\"Value being transfered from the \\\"from\\\" account.\"},\"returns\":{\"output\":\"Output of the call. Selector: b5ea0966\"}},\"nonces(address)\":{\"details\":\"Returns the current nonce for given owner. A permit must have this nonce to be consumed, which will increase the nonce by one. Selector: 0x7ecebe00\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"CallPermit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x15447da21f2e88d5e714e82cf631a1b5e46903f4dbcc0f0e1b061bd709e5d340\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://5fcd51d9b0f3f9b697eabaaf4ff8300c9e1dd8b52164e31a0c8ef6d031130cdc\",\"dweb:/ipfs/QmWpHxvHMydLyji7rg2cax5vvsxNFP5zRid4j7nPeAvJEb\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.0;\n\ninterface CallPermit {\n    /// @dev Dispatch a call on the behalf of an other user with a EIP712 permit.\n    /// Will revert if the permit is not valid or if the dispatched call reverts or errors (such as\n    /// out of gas).\n    /// If successful the EIP712 nonce is increased to prevent this permit to be replayed.\n    /// @param from Who made the permit and want its call to be dispatched on their behalf.\n    /// @param to Which address the call is made to.\n    /// @param value Value being transfered from the \"from\" account.\n    /// @param data Call data\n    /// @param gaslimit Gaslimit the dispatched call requires.\n    ///     Providing it prevents the dispatcher to manipulate the gaslimit.\n    /// @param deadline Deadline in UNIX seconds after which the permit will no longer be valid.\n    /// @param v V part of the signature.\n    /// @param r R part of the signature.\n    /// @param s S part of the signature.\n    /// @return output Output of the call.\n    /// Selector: b5ea0966\n    function dispatch(\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data,\n        uint64 gaslimit,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (bytes memory output);\n\n    /**\n     * @dev Returns the current nonce for given owner.\n     * A permit must have this nonce to be consumed, which will\n     * increase the nonce by one.\n     * Selector: 0x7ecebe00\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the EIP712 domain separator. It is used to avoid replay\n     * attacks accross assets or other similar EIP712 message structures.\n     * Selector: 0x3644e515\n     */\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
}
