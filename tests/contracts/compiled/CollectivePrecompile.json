{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "proposalHash",
            "type": "bytes32"
          }
        ],
        "name": "Executed",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "who",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint32",
            "name": "proposalIndex",
            "type": "uint32"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "proposalHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint32",
            "name": "threshold",
            "type": "uint32"
          }
        ],
        "name": "Proposed",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "who",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "proposalHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "voted",
            "type": "bool"
          }
        ],
        "name": "Voted",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "proposalHash",
            "type": "bytes32"
          },
          {
            "internalType": "uint32",
            "name": "proposalIndex",
            "type": "uint32"
          },
          {
            "internalType": "uint64",
            "name": "proposalWeightBound",
            "type": "uint64"
          },
          { "internalType": "uint32", "name": "lengthBound", "type": "uint32" }
        ],
        "name": "close",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "bytes", "name": "proposal", "type": "bytes" }
        ],
        "name": "execute",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "bytes", "name": "proposal", "type": "bytes" }
        ],
        "name": "proposalHash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "proposalHash",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint32", "name": "threshold", "type": "uint32" },
          { "internalType": "bytes", "name": "proposal", "type": "bytes" }
        ],
        "name": "propose",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "proposalHash",
            "type": "bytes32"
          },
          {
            "internalType": "uint32",
            "name": "proposalIndex",
            "type": "uint32"
          },
          { "internalType": "bool", "name": "approve", "type": "bool" }
        ],
        "name": "vote",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "close(bytes32,uint32,uint64,uint32)": "638d9d47",
        "execute(bytes)": "09c5eabe",
        "proposalHash(bytes)": "fc379417",
        "propose(uint32,bytes)": "c57f3260",
        "vote(bytes32,uint32,bool)": "73e37688"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"proposalIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"}],\"name\":\"Proposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"proposalIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"proposalWeightBound\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"lengthBound\",\"type\":\"uint32\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proposal\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proposal\",\"type\":\"bytes\"}],\"name\":\"proposalHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"proposal\",\"type\":\"bytes\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"proposalIndex\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"approve\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"CollectivePrecompile\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x805b6497e25a0454e8466c9800c3390a66b7eccdd222adb8dab5328eb7d5095d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://6bc2fe07d30aaaf01f7afc08ffa71ee1cda6a185b770002b839b4e7345172125\",\"dweb:/ipfs/QmbhyvqtarZz4fHhQ6kpuGaiCwnRRw6aTSLJPsjRwPcnus\"]},\"precompiles/collective/Collective.sol\":{\"keccak256\":\"0xdd9aaf4bf652553fd67f52fe4df8f98504c6ce56157eb9e5e2d81193040a12e8\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cc5867dd06e4497de381de345eee36539192b9a8c1ccfbfe5a9ffb9f181568a3\",\"dweb:/ipfs/QmQtGX4mZ3w4Fysk2YD8G7Cxu9zVtWsm7qA4neFuByF3it\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.0;\n\nimport \"../../../precompiles/collective/Collective.sol\";\n\nabstract contract CollectivePrecompile is Collective {}\n"
}
