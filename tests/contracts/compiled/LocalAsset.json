{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "inputs": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "uint256", "name": "value", "type": "uint256" }
        ],
        "name": "burn",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "clearMetadata",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "account", "type": "address" }
        ],
        "name": "freeze",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "freezeAsset",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "uint256", "name": "value", "type": "uint256" }
        ],
        "name": "mint",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "string", "name": "symbol", "type": "string" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" }
        ],
        "name": "setMetadata",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "issuer", "type": "address" },
          { "internalType": "address", "name": "admin", "type": "address" },
          { "internalType": "address", "name": "freezer", "type": "address" }
        ],
        "name": "setTeam",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "account", "type": "address" }
        ],
        "name": "thaw",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "thawAsset",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "owner", "type": "address" }
        ],
        "name": "transferOwnership",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "author": "The Moonbeam Team",
      "details": "Contract to pilot the ERC20 contract.",
      "kind": "dev",
      "methods": {
        "burn(address,uint256)": {
          "custom:selector": "9dc29fac",
          "details": "Burn tokens from an address",
          "params": {
            "from": "address The address from which you want to burn tokens",
            "value": "uint256 the amount of tokens to be burnt"
          }
        },
        "clearMetadata()": {
          "custom:selector": "efb6d432",
          "details": "Clear the name, symbol and decimals of your asset"
        },
        "freeze(address)": {
          "custom:selector": "8d1fdf2f",
          "details": "Freeze an account, preventing it from operating with the asset",
          "params": { "account": "address The address that you want to freeze" }
        },
        "freezeAsset()": {
          "custom:selector": "d4937f51",
          "details": "Freeze the entire asset operations"
        },
        "mint(address,uint256)": {
          "custom:selector": "40c10f19",
          "details": "Mint tokens to an address",
          "params": {
            "to": "address The address to which you want to mint tokens",
            "value": "uint256 the amount of tokens to be minted"
          }
        },
        "setMetadata(string,string,uint8)": {
          "custom:selector": "37d2c2f4",
          "details": "Specify the name, symbol and decimals of your asset",
          "params": {
            "decimals": "uint8 The number of decimals of your asset",
            "name": "string The name of the asset",
            "symbol": "string The symbol of the asset"
          }
        },
        "setTeam(address,address,address)": {
          "custom:selector": "c7d93c59",
          "details": "Specify the issuer, admin and freezer of an asset",
          "params": {
            "admin": "address The address capable of burning tokens and unfreezing accounts/assets",
            "freezer": "address The address capable of freezing accounts/asset",
            "issuer": "address The address capable of issuing tokens"
          }
        },
        "thaw(address)": {
          "custom:selector": "5ea20216",
          "details": "Unfreeze an account, letting it from operating againt with the asset",
          "params": {
            "account": "address The address that you want to unfreeze"
          }
        },
        "thawAsset()": {
          "custom:selector": "51ec2ad7",
          "details": "Unfreeze the entire asset operations"
        },
        "transferOwnership(address)": {
          "custom:selector": "f2fde38b",
          "details": "Transfer the ownership of an asset to a new account",
          "params": { "owner": "address The address of the new owner" }
        }
      },
      "title": "Extension of the ERC20 interface that allows an owner",
      "version": 1
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "burn(address,uint256)": "9dc29fac",
        "clearMetadata()": "efb6d432",
        "freeze(address)": "8d1fdf2f",
        "freezeAsset()": "d4937f51",
        "mint(address,uint256)": "40c10f19",
        "setMetadata(string,string,uint8)": "37d2c2f4",
        "setTeam(address,address,address)": "c7d93c59",
        "thaw(address)": "5ea20216",
        "thawAsset()": "51ec2ad7",
        "transferOwnership(address)": "f2fde38b"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezeAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"setMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"freezer\",\"type\":\"address\"}],\"name\":\"setTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"thaw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thawAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"details\":\"Contract to pilot the ERC20 contract.\",\"kind\":\"dev\",\"methods\":{\"burn(address,uint256)\":{\"custom:selector\":\"9dc29fac\",\"details\":\"Burn tokens from an address\",\"params\":{\"from\":\"address The address from which you want to burn tokens\",\"value\":\"uint256 the amount of tokens to be burnt\"}},\"clearMetadata()\":{\"custom:selector\":\"efb6d432\",\"details\":\"Clear the name, symbol and decimals of your asset\"},\"freeze(address)\":{\"custom:selector\":\"8d1fdf2f\",\"details\":\"Freeze an account, preventing it from operating with the asset\",\"params\":{\"account\":\"address The address that you want to freeze\"}},\"freezeAsset()\":{\"custom:selector\":\"d4937f51\",\"details\":\"Freeze the entire asset operations\"},\"mint(address,uint256)\":{\"custom:selector\":\"40c10f19\",\"details\":\"Mint tokens to an address\",\"params\":{\"to\":\"address The address to which you want to mint tokens\",\"value\":\"uint256 the amount of tokens to be minted\"}},\"setMetadata(string,string,uint8)\":{\"custom:selector\":\"37d2c2f4\",\"details\":\"Specify the name, symbol and decimals of your asset\",\"params\":{\"decimals\":\"uint8 The number of decimals of your asset\",\"name\":\"string The name of the asset\",\"symbol\":\"string The symbol of the asset\"}},\"setTeam(address,address,address)\":{\"custom:selector\":\"c7d93c59\",\"details\":\"Specify the issuer, admin and freezer of an asset\",\"params\":{\"admin\":\"address The address capable of burning tokens and unfreezing accounts/assets\",\"freezer\":\"address The address capable of freezing accounts/asset\",\"issuer\":\"address The address capable of issuing tokens\"}},\"thaw(address)\":{\"custom:selector\":\"5ea20216\",\"details\":\"Unfreeze an account, letting it from operating againt with the asset\",\"params\":{\"account\":\"address The address that you want to unfreeze\"}},\"thawAsset()\":{\"custom:selector\":\"51ec2ad7\",\"details\":\"Unfreeze the entire asset operations\"},\"transferOwnership(address)\":{\"custom:selector\":\"f2fde38b\",\"details\":\"Transfer the ownership of an asset to a new account\",\"params\":{\"owner\":\"address The address of the new owner\"}}},\"title\":\"Extension of the ERC20 interface that allows an owner\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"LocalAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0xee92e1101acdb918e632a36f0870926668ef2e1b2e02eb0caad6ec88ccb7eaf0\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://3cea4dd6151836075818e4fc72f24bff02cea7d6f6c8160f73c12a3cd34240d4\",\"dweb:/ipfs/QmSaNnDhbNrUAvWcgujYbyHAFQ2GS9GYBVLXnNfYxE5m7U\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @author The Moonbeam Team\n/// @title Extension of the ERC20 interface that allows an owner\n/// @dev Contract to pilot the ERC20 contract.\ninterface LocalAsset {\n    /// @dev Mint tokens to an address\n    /// @custom:selector 40c10f19\n    /// @param to address The address to which you want to mint tokens\n    /// @param value uint256 the amount of tokens to be minted\n    function mint(address to, uint256 value) external returns (bool);\n\n    /// @dev Burn tokens from an address\n    /// @custom:selector 9dc29fac\n    /// @param from address The address from which you want to burn tokens\n    /// @param value uint256 the amount of tokens to be burnt\n    function burn(address from, uint256 value) external returns (bool);\n\n    /// @dev Freeze an account, preventing it from operating with the asset\n    /// @custom:selector 8d1fdf2f\n    /// @param account address The address that you want to freeze\n    function freeze(address account) external returns (bool);\n\n    /// @dev Unfreeze an account, letting it from operating againt with the asset\n    /// @custom:selector 5ea20216\n    /// @param account address The address that you want to unfreeze\n    function thaw(address account) external returns (bool);\n\n    /// @dev Freeze the entire asset operations\n    /// @custom:selector d4937f51\n    function freezeAsset() external returns (bool);\n\n    /// @dev Unfreeze the entire asset operations\n    /// @custom:selector 51ec2ad7\n    function thawAsset() external returns (bool);\n\n    /// @dev Transfer the ownership of an asset to a new account\n    /// @custom:selector f2fde38b\n    /// @param owner address The address of the new owner\n    function transferOwnership(address owner) external returns (bool);\n\n    /// @dev Specify the issuer, admin and freezer of an asset\n    /// @custom:selector c7d93c59\n    /// @param issuer address The address capable of issuing tokens\n    /// @param admin address The address capable of burning tokens and unfreezing accounts/assets\n    /// @param freezer address The address capable of freezing accounts/asset\n    function setTeam(\n        address issuer,\n        address admin,\n        address freezer\n    ) external returns (bool);\n\n    /// @dev Specify the name, symbol and decimals of your asset\n    /// @custom:selector 37d2c2f4\n    /// @param name string The name of the asset\n    /// @param symbol string The symbol of the asset\n    /// @param decimals uint8 The number of decimals of your asset\n    function setMetadata(\n        string calldata name,\n        string calldata symbol,\n        uint8 decimals\n    ) external returns (bool);\n\n    /// @dev Clear the name, symbol and decimals of your asset\n    /// @custom:selector efb6d432\n    function clearMetadata() external returns (bool);\n}\n"
}
