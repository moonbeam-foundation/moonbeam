{
  "byteCode": "0x608060405234801561001057600080fd5b50600561002760036005600761005660201b60201c565b1461003157600080fd5b600361004760056007600b61005660201b60201c565b1461005157600080fd5b6100a5565b600060405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c08460006005600019f161009857600080fd5b8051925050509392505050565b610194806100b46000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633148f14f14610030575b600080fd5b61004a600480360381019061004591906100c4565b610060565b6040516100579190610122565b60405180910390f35b600060405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c08460006005600019f16100a257600080fd5b8051925050509392505050565b6000813590506100be81610147565b92915050565b6000806000606084860312156100d957600080fd5b60006100e7868287016100af565b93505060206100f8868287016100af565b9250506040610109868287016100af565b9150509250925092565b61011c8161013d565b82525050565b60006020820190506101376000830184610113565b92915050565b6000819050919050565b6101508161013d565b811461015b57600080fd5b5056fea26469706673582212205f3f19a3a3bb3f56c5da1cf9b7d05e76435904fa7fe3154211cd2f9911af7b2f64736f6c63430008030033",
  "contract": {
    "abi": [
      { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
      {
        "inputs": [
          { "internalType": "uint256", "name": "_b", "type": "uint256" },
          { "internalType": "uint256", "name": "_e", "type": "uint256" },
          { "internalType": "uint256", "name": "_m", "type": "uint256" }
        ],
        "name": "modExp",
        "outputs": [
          { "internalType": "uint256", "name": "result", "type": "uint256" }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"main.sol\":34:1334  contract ModularCheck {... */\n  mstore(0x40, 0x80)\n    /* \"main.sol\":118:230  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"main.sol\":173:174  5 */\n  0x05\n    /* \"main.sol\":154:169  modExp(3, 5, 7) */\n  tag_4\n    /* \"main.sol\":161:162  3 */\n  0x03\n    /* \"main.sol\":164:165  5 */\n  0x05\n    /* \"main.sol\":167:168  7 */\n  0x07\n    /* \"main.sol\":154:160  modExp */\n  shl(0x20, tag_5)\n    /* \"main.sol\":154:169  modExp(3, 5, 7) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"main.sol\":154:174  modExp(3, 5, 7) == 5 */\n  eq\n    /* \"main.sol\":146:175  require(modExp(3, 5, 7) == 5) */\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n    /* \"main.sol\":217:218  3 */\n  0x03\n    /* \"main.sol\":197:213  modExp(5, 7, 11) */\n  tag_7\n    /* \"main.sol\":204:205  5 */\n  0x05\n    /* \"main.sol\":207:208  7 */\n  0x07\n    /* \"main.sol\":210:212  11 */\n  0x0b\n    /* \"main.sol\":197:203  modExp */\n  shl(0x20, tag_5)\n    /* \"main.sol\":197:213  modExp(5, 7, 11) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"main.sol\":197:218  modExp(5, 7, 11) == 3 */\n  eq\n    /* \"main.sol\":189:219  require(modExp(5, 7, 11) == 3) */\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n    /* \"main.sol\":34:1334  contract ModularCheck {... */\n  jump(tag_9)\n    /* \"main.sol\":364:1328  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\ntag_5:\n    /* \"main.sol\":432:446  uint256 result */\n  0x00\n    /* \"main.sol\":549:553  0x40 */\n  0x40\n    /* \"main.sol\":543:554  mload(0x40) */\n  mload\n    /* \"main.sol\":672:676  0x20 */\n  0x20\n    /* \"main.sol\":663:670  pointer */\n  dup2\n    /* \"main.sol\":656:677  mstore(pointer, 0x20) */\n  mstore\n    /* \"main.sol\":721:725  0x20 */\n  0x20\n    /* \"main.sol\":714:718  0x20 */\n  dup1\n    /* \"main.sol\":705:712  pointer */\n  dup3\n    /* \"main.sol\":701:719  add(pointer, 0x20) */\n  add\n    /* \"main.sol\":694:726  mstore(add(pointer, 0x20), 0x20) */\n  mstore\n    /* \"main.sol\":770:774  0x20 */\n  0x20\n    /* \"main.sol\":763:767  0x40 */\n  0x40\n    /* \"main.sol\":754:761  pointer */\n  dup3\n    /* \"main.sol\":750:768  add(pointer, 0x40) */\n  add\n    /* \"main.sol\":743:775  mstore(add(pointer, 0x40), 0x20) */\n  mstore\n    /* \"main.sol\":886:888  _b */\n  dup5\n    /* \"main.sol\":879:883  0x60 */\n  0x60\n    /* \"main.sol\":870:877  pointer */\n  dup3\n    /* \"main.sol\":866:884  add(pointer, 0x60) */\n  add\n    /* \"main.sol\":859:889  mstore(add(pointer, 0x60), _b) */\n  mstore\n    /* \"main.sol\":933:935  _e */\n  dup4\n    /* \"main.sol\":926:930  0x80 */\n  0x80\n    /* \"main.sol\":917:924  pointer */\n  dup3\n    /* \"main.sol\":913:931  add(pointer, 0x80) */\n  add\n    /* \"main.sol\":906:936  mstore(add(pointer, 0x80), _e) */\n  mstore\n    /* \"main.sol\":981:983  _m */\n  dup3\n    /* \"main.sol\":974:978  0xa0 */\n  0xa0\n    /* \"main.sol\":965:972  pointer */\n  dup3\n    /* \"main.sol\":961:979  add(pointer, 0xa0) */\n  add\n    /* \"main.sol\":954:984  mstore(add(pointer, 0xa0), _m) */\n  mstore\n    /* \"main.sol\":1056:1060  0xc0 */\n  0xc0\n    /* \"main.sol\":1050:1061  mload(0xc0) */\n  mload\n    /* \"main.sol\":1202:1206  0x20 */\n  0x20\n    /* \"main.sol\":1195:1200  value */\n  dup2\n    /* \"main.sol\":1189:1193  0xc0 */\n  0xc0\n    /* \"main.sol\":1180:1187  pointer */\n  dup5\n    /* \"main.sol\":1177:1178  0 */\n  0x00\n    /* \"main.sol\":1171:1175  0x05 */\n  0x05\n    /* \"main.sol\":1167:1168  0 */\n  0x00\n    /* \"main.sol\":1163:1169  not(0) */\n  not\n    /* \"main.sol\":1158:1207  call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20) */\n  call\n    /* \"main.sol\":1148:1150  if */\n  tag_11\n  jumpi\n    /* \"main.sol\":1241:1242  0 */\n  0x00\n    /* \"main.sol\":1238:1239  0 */\n  dup1\n    /* \"main.sol\":1231:1243  revert(0, 0) */\n  revert\n    /* \"main.sol\":1148:1150  if */\ntag_11:\n    /* \"main.sol\":1298:1303  value */\n  dup1\n    /* \"main.sol\":1292:1304  mload(value) */\n  mload\n    /* \"main.sol\":1282:1304  result := mload(value) */\n  swap3\n  pop\n    /* \"main.sol\":471:1318  {... */\n  pop\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"main.sol\":34:1334  contract ModularCheck {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":34:1334  contract ModularCheck {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3148f14f\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"main.sol\":364:1328  function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"main.sol\":432:446  uint256 result */\n      0x00\n        /* \"main.sol\":549:553  0x40 */\n      0x40\n        /* \"main.sol\":543:554  mload(0x40) */\n      mload\n        /* \"main.sol\":672:676  0x20 */\n      0x20\n        /* \"main.sol\":663:670  pointer */\n      dup2\n        /* \"main.sol\":656:677  mstore(pointer, 0x20) */\n      mstore\n        /* \"main.sol\":721:725  0x20 */\n      0x20\n        /* \"main.sol\":714:718  0x20 */\n      dup1\n        /* \"main.sol\":705:712  pointer */\n      dup3\n        /* \"main.sol\":701:719  add(pointer, 0x20) */\n      add\n        /* \"main.sol\":694:726  mstore(add(pointer, 0x20), 0x20) */\n      mstore\n        /* \"main.sol\":770:774  0x20 */\n      0x20\n        /* \"main.sol\":763:767  0x40 */\n      0x40\n        /* \"main.sol\":754:761  pointer */\n      dup3\n        /* \"main.sol\":750:768  add(pointer, 0x40) */\n      add\n        /* \"main.sol\":743:775  mstore(add(pointer, 0x40), 0x20) */\n      mstore\n        /* \"main.sol\":886:888  _b */\n      dup5\n        /* \"main.sol\":879:883  0x60 */\n      0x60\n        /* \"main.sol\":870:877  pointer */\n      dup3\n        /* \"main.sol\":866:884  add(pointer, 0x60) */\n      add\n        /* \"main.sol\":859:889  mstore(add(pointer, 0x60), _b) */\n      mstore\n        /* \"main.sol\":933:935  _e */\n      dup4\n        /* \"main.sol\":926:930  0x80 */\n      0x80\n        /* \"main.sol\":917:924  pointer */\n      dup3\n        /* \"main.sol\":913:931  add(pointer, 0x80) */\n      add\n        /* \"main.sol\":906:936  mstore(add(pointer, 0x80), _e) */\n      mstore\n        /* \"main.sol\":981:983  _m */\n      dup3\n        /* \"main.sol\":974:978  0xa0 */\n      0xa0\n        /* \"main.sol\":965:972  pointer */\n      dup3\n        /* \"main.sol\":961:979  add(pointer, 0xa0) */\n      add\n        /* \"main.sol\":954:984  mstore(add(pointer, 0xa0), _m) */\n      mstore\n        /* \"main.sol\":1056:1060  0xc0 */\n      0xc0\n        /* \"main.sol\":1050:1061  mload(0xc0) */\n      mload\n        /* \"main.sol\":1202:1206  0x20 */\n      0x20\n        /* \"main.sol\":1195:1200  value */\n      dup2\n        /* \"main.sol\":1189:1193  0xc0 */\n      0xc0\n        /* \"main.sol\":1180:1187  pointer */\n      dup5\n        /* \"main.sol\":1177:1178  0 */\n      0x00\n        /* \"main.sol\":1171:1175  0x05 */\n      0x05\n        /* \"main.sol\":1167:1168  0 */\n      0x00\n        /* \"main.sol\":1163:1169  not(0) */\n      not\n        /* \"main.sol\":1158:1207  call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20) */\n      call\n        /* \"main.sol\":1148:1150  if */\n      tag_11\n      jumpi\n        /* \"main.sol\":1241:1242  0 */\n      0x00\n        /* \"main.sol\":1238:1239  0 */\n      dup1\n        /* \"main.sol\":1231:1243  revert(0, 0) */\n      revert\n        /* \"main.sol\":1148:1150  if */\n    tag_11:\n        /* \"main.sol\":1298:1303  value */\n      dup1\n        /* \"main.sol\":1292:1304  mload(value) */\n      mload\n        /* \"main.sol\":1282:1304  result := mload(value) */\n      swap3\n      pop\n        /* \"main.sol\":471:1318  {... */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_15\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:704   */\n    tag_6:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":294:296   */\n      0x60\n        /* \"#utility.yul\":282:291   */\n      dup5\n        /* \"#utility.yul\":273:280   */\n      dup7\n        /* \"#utility.yul\":269:292   */\n      sub\n        /* \"#utility.yul\":265:297   */\n      slt\n        /* \"#utility.yul\":262:264   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":310:311   */\n      0x00\n        /* \"#utility.yul\":307:308   */\n      dup1\n        /* \"#utility.yul\":300:312   */\n      revert\n        /* \"#utility.yul\":262:264   */\n    tag_18:\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":378:431   */\n      tag_19\n        /* \"#utility.yul\":423:430   */\n      dup7\n        /* \"#utility.yul\":414:420   */\n      dup3\n        /* \"#utility.yul\":403:412   */\n      dup8\n        /* \"#utility.yul\":399:421   */\n      add\n        /* \"#utility.yul\":378:431   */\n      tag_13\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":368:431   */\n      swap4\n      pop\n        /* \"#utility.yul\":324:441   */\n      pop\n        /* \"#utility.yul\":480:482   */\n      0x20\n        /* \"#utility.yul\":506:559   */\n      tag_20\n        /* \"#utility.yul\":551:558   */\n      dup7\n        /* \"#utility.yul\":542:548   */\n      dup3\n        /* \"#utility.yul\":531:540   */\n      dup8\n        /* \"#utility.yul\":527:549   */\n      add\n        /* \"#utility.yul\":506:559   */\n      tag_13\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":496:559   */\n      swap3\n      pop\n        /* \"#utility.yul\":451:569   */\n      pop\n        /* \"#utility.yul\":608:610   */\n      0x40\n        /* \"#utility.yul\":634:687   */\n      tag_21\n        /* \"#utility.yul\":679:686   */\n      dup7\n        /* \"#utility.yul\":670:676   */\n      dup3\n        /* \"#utility.yul\":659:668   */\n      dup8\n        /* \"#utility.yul\":655:677   */\n      add\n        /* \"#utility.yul\":634:687   */\n      tag_13\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":624:687   */\n      swap2\n      pop\n        /* \"#utility.yul\":579:697   */\n      pop\n        /* \"#utility.yul\":252:704   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":710:828   */\n    tag_22:\n        /* \"#utility.yul\":797:821   */\n      tag_24\n        /* \"#utility.yul\":815:820   */\n      dup2\n        /* \"#utility.yul\":797:821   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":792:795   */\n      dup3\n        /* \"#utility.yul\":785:822   */\n      mstore\n        /* \"#utility.yul\":775:828   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":834:1056   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":965:967   */\n      0x20\n        /* \"#utility.yul\":954:963   */\n      dup3\n        /* \"#utility.yul\":950:968   */\n      add\n        /* \"#utility.yul\":942:968   */\n      swap1\n      pop\n        /* \"#utility.yul\":978:1049   */\n      tag_27\n        /* \"#utility.yul\":1046:1047   */\n      0x00\n        /* \"#utility.yul\":1035:1044   */\n      dup4\n        /* \"#utility.yul\":1031:1048   */\n      add\n        /* \"#utility.yul\":1022:1028   */\n      dup5\n        /* \"#utility.yul\":978:1049   */\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":932:1056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1062:1139   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":1128:1133   */\n      dup2\n        /* \"#utility.yul\":1117:1133   */\n      swap1\n      pop\n        /* \"#utility.yul\":1107:1139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1145:1267   */\n    tag_16:\n        /* \"#utility.yul\":1218:1242   */\n      tag_30\n        /* \"#utility.yul\":1236:1241   */\n      dup2\n        /* \"#utility.yul\":1218:1242   */\n      tag_25\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":1211:1216   */\n      dup2\n        /* \"#utility.yul\":1208:1243   */\n      eq\n        /* \"#utility.yul\":1198:1200   */\n      tag_31\n      jumpi\n        /* \"#utility.yul\":1257:1258   */\n      0x00\n        /* \"#utility.yul\":1254:1255   */\n      dup1\n        /* \"#utility.yul\":1247:1259   */\n      revert\n        /* \"#utility.yul\":1198:1200   */\n    tag_31:\n        /* \"#utility.yul\":1188:1267   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205f3f19a3a3bb3f56c5da1cf9b7d05e76435904fa7fe3154211cd2f9911af7b2f64736f6c63430008030033\n}\n",
      "bytecode": {
        "generatedSources": [],
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b50600561002760036005600761005660201b60201c565b1461003157600080fd5b600361004760056007600b61005660201b60201c565b1461005157600080fd5b6100a5565b600060405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c08460006005600019f161009857600080fd5b8051925050509392505050565b610194806100b46000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633148f14f14610030575b600080fd5b61004a600480360381019061004591906100c4565b610060565b6040516100579190610122565b60405180910390f35b600060405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c08460006005600019f16100a257600080fd5b8051925050509392505050565b6000813590506100be81610147565b92915050565b6000806000606084860312156100d957600080fd5b60006100e7868287016100af565b93505060206100f8868287016100af565b9250506040610109868287016100af565b9150509250925092565b61011c8161013d565b82525050565b60006020820190506101376000830184610113565b92915050565b6000819050919050565b6101508161013d565b811461015b57600080fd5b5056fea26469706673582212205f3f19a3a3bb3f56c5da1cf9b7d05e76435904fa7fe3154211cd2f9911af7b2f64736f6c63430008030033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 PUSH2 0x27 PUSH1 0x3 PUSH1 0x5 PUSH1 0x7 PUSH2 0x56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST EQ PUSH2 0x31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH2 0x47 PUSH1 0x5 PUSH1 0x7 PUSH1 0xB PUSH2 0x56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST EQ PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 NOT CALL PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x194 DUP1 PUSH2 0xB4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3148F14F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xC4 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 NOT CALL PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE DUP2 PUSH2 0x147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE7 DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF8 DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x109 DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x11C DUP2 PUSH2 0x13D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150 DUP2 PUSH2 0x13D JUMP JUMPDEST DUP2 EQ PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F EXTCODEHASH NOT LOG3 LOG3 0xBB EXTCODEHASH JUMP 0xC5 0xDA SHR 0xF9 0xB7 0xD0 0x5E PUSH23 0x435904FA7FE3154211CD2F9911AF7B2F64736F6C634300 ADDMOD SUB STOP CALLER ",
        "sourceMap": "34:1300:0:-:0;;;118:112;;;;;;;;;;173:1;154:15;161:1;164;167;154:6;;;:15;;:::i;:::-;:20;146:29;;;;;;217:1;197:16;204:1;207;210:2;197:6;;;:16;;:::i;:::-;:21;189:30;;;;;;34:1300;;364:964;432:14;549:4;543:11;672:4;663:7;656:21;721:4;714;705:7;701:18;694:32;770:4;763;754:7;750:18;743:32;886:2;879:4;870:7;866:18;859:30;933:2;926:4;917:7;913:18;906:30;981:2;974:4;965:7;961:18;954:30;1056:4;1050:11;1202:4;1195:5;1189:4;1180:7;1177:1;1171:4;1167:1;1163:6;1158:49;1148:2;;1241:1;1238;1231:12;1148:2;1298:5;1292:12;1282:22;;471:847;;;;;;;:::o;34:1300::-;;;;;;;"
      },
      "deployedBytecode": {
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:1270:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "59:87:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "69:29:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "91:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "78:12:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "78:20:1"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "69:5:1"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "134:5:1"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "107:26:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "107:33:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "107:33:1"
                      }
                    ]
                  },
                  "name": "abi_decode_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "37:6:1",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "45:3:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "53:5:1",
                      "type": ""
                    }
                  ],
                  "src": "7:139:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "252:452:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "298:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "307:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "310:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "300:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "300:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "300:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "273:7:1"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "269:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "269:23:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "294:2:1",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "265:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "265:32:1"
                        },
                        "nodeType": "YulIf",
                        "src": "262:2:1"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "324:117:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "339:15:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "353:1:1",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "343:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "368:63:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "403:9:1"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "414:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:22:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "423:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "378:20:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "378:53:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "368:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "451:118:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "466:16:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "480:2:1",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "470:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "496:63:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "531:9:1"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "542:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "527:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "527:22:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "506:20:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "506:53:1"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "496:6:1"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "579:118:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "594:16:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "608:2:1",
                              "type": "",
                              "value": "64"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "598:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "624:63:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "659:9:1"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "655:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "655:22:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "679:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "634:20:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "634:53:1"
                            },
                            "variableNames": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "624:6:1"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "206:9:1",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "217:7:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "229:6:1",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "237:6:1",
                      "type": ""
                    },
                    {
                      "name": "value2",
                      "nodeType": "YulTypedName",
                      "src": "245:6:1",
                      "type": ""
                    }
                  ],
                  "src": "152:552:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "775:53:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "792:3:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "797:17:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "797:24:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "785:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "785:37:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "785:37:1"
                      }
                    ]
                  },
                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "763:5:1",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "770:3:1",
                      "type": ""
                    }
                  ],
                  "src": "710:118:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "932:124:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "942:26:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "954:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "965:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "950:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "950:18:1"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "942:4:1"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1022:6:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1035:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1046:1:1",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1031:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1031:17:1"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "978:43:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "978:71:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "978:71:1"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "904:9:1",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "916:6:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "927:4:1",
                      "type": ""
                    }
                  ],
                  "src": "834:222:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1107:32:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1117:16:1",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "1128:5:1"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "1117:7:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1089:5:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "1099:7:1",
                      "type": ""
                    }
                  ],
                  "src": "1062:77:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1188:79:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1245:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1254:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1257:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1247:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1247:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1247:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1211:5:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "1236:5:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "1218:17:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1218:24:1"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "1208:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1208:35:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1201:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1201:43:1"
                        },
                        "nodeType": "YulIf",
                        "src": "1198:2:1"
                      }
                    ]
                  },
                  "name": "validator_revert_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1181:5:1",
                      "type": ""
                    }
                  ],
                  "src": "1145:122:1"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
            "id": 1,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80633148f14f14610030575b600080fd5b61004a600480360381019061004591906100c4565b610060565b6040516100579190610122565b60405180910390f35b600060405160208152602080820152602060408201528460608201528360808201528260a082015260c05160208160c08460006005600019f16100a257600080fd5b8051925050509392505050565b6000813590506100be81610147565b92915050565b6000806000606084860312156100d957600080fd5b60006100e7868287016100af565b93505060206100f8868287016100af565b9250506040610109868287016100af565b9150509250925092565b61011c8161013d565b82525050565b60006020820190506101376000830184610113565b92915050565b6000819050919050565b6101508161013d565b811461015b57600080fd5b5056fea26469706673582212205f3f19a3a3bb3f56c5da1cf9b7d05e76435904fa7fe3154211cd2f9911af7b2f64736f6c63430008030033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3148F14F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xC4 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 NOT CALL PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE DUP2 PUSH2 0x147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE7 DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF8 DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x109 DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x11C DUP2 PUSH2 0x13D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150 DUP2 PUSH2 0x13D JUMP JUMPDEST DUP2 EQ PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F EXTCODEHASH NOT LOG3 LOG3 0xBB EXTCODEHASH JUMP 0xC5 0xDA SHR 0xF9 0xB7 0xD0 0x5E PUSH23 0x435904FA7FE3154211CD2F9911AF7B2F64736F6C634300 ADDMOD SUB STOP CALLER ",
        "sourceMap": "34:1300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:964;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;432:14;549:4;543:11;672:4;663:7;656:21;721:4;714;705:7;701:18;694:32;770:4;763;754:7;750:18;743:32;886:2;879:4;870:7;866:18;859:30;933:2;926:4;917:7;913:18;906:30;981:2;974:4;965:7;961:18;954:30;1056:4;1050:11;1202:4;1195:5;1189:4;1180:7;1177:1;1171:4;1167:1;1163:6;1158:49;1148:2;;1241:1;1238;1231:12;1148:2;1298:5;1292:12;1282:22;;471:847;;;;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:552::-;;;;294:2;282:9;273:7;269:23;265:32;262:2;;;310:1;307;300:12;262:2;353:1;378:53;423:7;414:6;403:9;399:22;378:53;:::i;:::-;368:63;;324:117;480:2;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;451:118;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;252:452;;;;;:::o;710:118::-;797:24;815:5;797:24;:::i;:::-;792:3;785:37;775:53;;:::o;834:222::-;;965:2;954:9;950:18;942:26;;978:71;1046:1;1035:9;1031:17;1022:6;978:71;:::i;:::-;932:124;;;;:::o;1062:77::-;;1128:5;1117:16;;1107:32;;;:::o;1145:122::-;1218:24;1236:5;1218:24;:::i;:::-;1211:5;1208:35;1198:2;;1257:1;1254;1247:12;1198:2;1188:79;:::o"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "80800",
          "executionCost": "infinite",
          "totalCost": "infinite"
        },
        "external": { "modExp(uint256,uint256,uint256)": "infinite" }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 34,
            "end": 1334,
            "name": "PUSH",
            "source": 0,
            "value": "80"
          },
          {
            "begin": 34,
            "end": 1334,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 34, "end": 1334, "name": "MSTORE", "source": 0 },
          { "begin": 118, "end": 230, "name": "CALLVALUE", "source": 0 },
          { "begin": 118, "end": 230, "name": "DUP1", "source": 0 },
          { "begin": 118, "end": 230, "name": "ISZERO", "source": 0 },
          {
            "begin": 118,
            "end": 230,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "1"
          },
          { "begin": 118, "end": 230, "name": "JUMPI", "source": 0 },
          {
            "begin": 118,
            "end": 230,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 118, "end": 230, "name": "DUP1", "source": 0 },
          { "begin": 118, "end": 230, "name": "REVERT", "source": 0 },
          {
            "begin": 118,
            "end": 230,
            "name": "tag",
            "source": 0,
            "value": "1"
          },
          { "begin": 118, "end": 230, "name": "JUMPDEST", "source": 0 },
          { "begin": 118, "end": 230, "name": "POP", "source": 0 },
          {
            "begin": 173,
            "end": 174,
            "name": "PUSH",
            "source": 0,
            "value": "5"
          },
          {
            "begin": 154,
            "end": 169,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "4"
          },
          {
            "begin": 161,
            "end": 162,
            "name": "PUSH",
            "source": 0,
            "value": "3"
          },
          {
            "begin": 164,
            "end": 165,
            "name": "PUSH",
            "source": 0,
            "value": "5"
          },
          {
            "begin": 167,
            "end": 168,
            "name": "PUSH",
            "source": 0,
            "value": "7"
          },
          {
            "begin": 154,
            "end": 160,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "5"
          },
          {
            "begin": 154,
            "end": 160,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 154, "end": 160, "name": "SHL", "source": 0 },
          {
            "begin": 154,
            "end": 169,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 154, "end": 169, "name": "SHR", "source": 0 },
          {
            "begin": 154,
            "end": 169,
            "name": "JUMP",
            "source": 0,
            "value": "[in]"
          },
          {
            "begin": 154,
            "end": 169,
            "name": "tag",
            "source": 0,
            "value": "4"
          },
          { "begin": 154, "end": 169, "name": "JUMPDEST", "source": 0 },
          { "begin": 154, "end": 174, "name": "EQ", "source": 0 },
          {
            "begin": 146,
            "end": 175,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "6"
          },
          { "begin": 146, "end": 175, "name": "JUMPI", "source": 0 },
          {
            "begin": 146,
            "end": 175,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 175, "name": "DUP1", "source": 0 },
          { "begin": 146, "end": 175, "name": "REVERT", "source": 0 },
          {
            "begin": 146,
            "end": 175,
            "name": "tag",
            "source": 0,
            "value": "6"
          },
          { "begin": 146, "end": 175, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 217,
            "end": 218,
            "name": "PUSH",
            "source": 0,
            "value": "3"
          },
          {
            "begin": 197,
            "end": 213,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "7"
          },
          {
            "begin": 204,
            "end": 205,
            "name": "PUSH",
            "source": 0,
            "value": "5"
          },
          {
            "begin": 207,
            "end": 208,
            "name": "PUSH",
            "source": 0,
            "value": "7"
          },
          {
            "begin": 210,
            "end": 212,
            "name": "PUSH",
            "source": 0,
            "value": "B"
          },
          {
            "begin": 197,
            "end": 203,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "5"
          },
          {
            "begin": 197,
            "end": 203,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 197, "end": 203, "name": "SHL", "source": 0 },
          {
            "begin": 197,
            "end": 213,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 197, "end": 213, "name": "SHR", "source": 0 },
          {
            "begin": 197,
            "end": 213,
            "name": "JUMP",
            "source": 0,
            "value": "[in]"
          },
          {
            "begin": 197,
            "end": 213,
            "name": "tag",
            "source": 0,
            "value": "7"
          },
          { "begin": 197, "end": 213, "name": "JUMPDEST", "source": 0 },
          { "begin": 197, "end": 218, "name": "EQ", "source": 0 },
          {
            "begin": 189,
            "end": 219,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "8"
          },
          { "begin": 189, "end": 219, "name": "JUMPI", "source": 0 },
          {
            "begin": 189,
            "end": 219,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 189, "end": 219, "name": "DUP1", "source": 0 },
          { "begin": 189, "end": 219, "name": "REVERT", "source": 0 },
          {
            "begin": 189,
            "end": 219,
            "name": "tag",
            "source": 0,
            "value": "8"
          },
          { "begin": 189, "end": 219, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 34,
            "end": 1334,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "9"
          },
          { "begin": 34, "end": 1334, "name": "JUMP", "source": 0 },
          {
            "begin": 364,
            "end": 1328,
            "name": "tag",
            "source": 0,
            "value": "5"
          },
          { "begin": 364, "end": 1328, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 432,
            "end": 446,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          {
            "begin": 549,
            "end": 553,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 543, "end": 554, "name": "MLOAD", "source": 0 },
          {
            "begin": 672,
            "end": 676,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 663, "end": 670, "name": "DUP2", "source": 0 },
          { "begin": 656, "end": 677, "name": "MSTORE", "source": 0 },
          {
            "begin": 721,
            "end": 725,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 714, "end": 718, "name": "DUP1", "source": 0 },
          { "begin": 705, "end": 712, "name": "DUP3", "source": 0 },
          { "begin": 701, "end": 719, "name": "ADD", "source": 0 },
          { "begin": 694, "end": 726, "name": "MSTORE", "source": 0 },
          {
            "begin": 770,
            "end": 774,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          {
            "begin": 763,
            "end": 767,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 754, "end": 761, "name": "DUP3", "source": 0 },
          { "begin": 750, "end": 768, "name": "ADD", "source": 0 },
          { "begin": 743, "end": 775, "name": "MSTORE", "source": 0 },
          { "begin": 886, "end": 888, "name": "DUP5", "source": 0 },
          {
            "begin": 879,
            "end": 883,
            "name": "PUSH",
            "source": 0,
            "value": "60"
          },
          { "begin": 870, "end": 877, "name": "DUP3", "source": 0 },
          { "begin": 866, "end": 884, "name": "ADD", "source": 0 },
          { "begin": 859, "end": 889, "name": "MSTORE", "source": 0 },
          { "begin": 933, "end": 935, "name": "DUP4", "source": 0 },
          {
            "begin": 926,
            "end": 930,
            "name": "PUSH",
            "source": 0,
            "value": "80"
          },
          { "begin": 917, "end": 924, "name": "DUP3", "source": 0 },
          { "begin": 913, "end": 931, "name": "ADD", "source": 0 },
          { "begin": 906, "end": 936, "name": "MSTORE", "source": 0 },
          { "begin": 981, "end": 983, "name": "DUP3", "source": 0 },
          {
            "begin": 974,
            "end": 978,
            "name": "PUSH",
            "source": 0,
            "value": "A0"
          },
          { "begin": 965, "end": 972, "name": "DUP3", "source": 0 },
          { "begin": 961, "end": 979, "name": "ADD", "source": 0 },
          { "begin": 954, "end": 984, "name": "MSTORE", "source": 0 },
          {
            "begin": 1056,
            "end": 1060,
            "name": "PUSH",
            "source": 0,
            "value": "C0"
          },
          { "begin": 1050, "end": 1061, "name": "MLOAD", "source": 0 },
          {
            "begin": 1202,
            "end": 1206,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 1195, "end": 1200, "name": "DUP2", "source": 0 },
          {
            "begin": 1189,
            "end": 1193,
            "name": "PUSH",
            "source": 0,
            "value": "C0"
          },
          { "begin": 1180, "end": 1187, "name": "DUP5", "source": 0 },
          {
            "begin": 1177,
            "end": 1178,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          {
            "begin": 1171,
            "end": 1175,
            "name": "PUSH",
            "source": 0,
            "value": "5"
          },
          {
            "begin": 1167,
            "end": 1168,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 1163, "end": 1169, "name": "NOT", "source": 0 },
          { "begin": 1158, "end": 1207, "name": "CALL", "source": 0 },
          {
            "begin": 1148,
            "end": 1150,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "11"
          },
          { "begin": 1148, "end": 1150, "name": "JUMPI", "source": 0 },
          {
            "begin": 1241,
            "end": 1242,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 1238, "end": 1239, "name": "DUP1", "source": 0 },
          { "begin": 1231, "end": 1243, "name": "REVERT", "source": 0 },
          {
            "begin": 1148,
            "end": 1150,
            "name": "tag",
            "source": 0,
            "value": "11"
          },
          { "begin": 1148, "end": 1150, "name": "JUMPDEST", "source": 0 },
          { "begin": 1298, "end": 1303, "name": "DUP1", "source": 0 },
          { "begin": 1292, "end": 1304, "name": "MLOAD", "source": 0 },
          { "begin": 1282, "end": 1304, "name": "SWAP3", "source": 0 },
          { "begin": 1282, "end": 1304, "name": "POP", "source": 0 },
          { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
          { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
          { "begin": 471, "end": 1318, "name": "SWAP4", "source": 0 },
          { "begin": 471, "end": 1318, "name": "SWAP3", "source": 0 },
          { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
          { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
          { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
          {
            "begin": 471,
            "end": 1318,
            "name": "JUMP",
            "source": 0,
            "value": "[out]"
          },
          {
            "begin": 34,
            "end": 1334,
            "name": "tag",
            "source": 0,
            "value": "9"
          },
          { "begin": 34, "end": 1334, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 34,
            "end": 1334,
            "name": "PUSH #[$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 34, "end": 1334, "name": "DUP1", "source": 0 },
          {
            "begin": 34,
            "end": 1334,
            "name": "PUSH [$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 34,
            "end": 1334,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 34, "end": 1334, "name": "CODECOPY", "source": 0 },
          {
            "begin": 34,
            "end": 1334,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 34, "end": 1334, "name": "RETURN", "source": 0 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a26469706673582212205f3f19a3a3bb3f56c5da1cf9b7d05e76435904fa7fe3154211cd2f9911af7b2f64736f6c63430008030033",
            ".code": [
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 34, "end": 1334, "name": "MSTORE", "source": 0 },
              { "begin": 34, "end": 1334, "name": "CALLVALUE", "source": 0 },
              { "begin": 34, "end": 1334, "name": "DUP1", "source": 0 },
              { "begin": 34, "end": 1334, "name": "ISZERO", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "1"
              },
              { "begin": 34, "end": 1334, "name": "JUMPI", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 34, "end": 1334, "name": "DUP1", "source": 0 },
              { "begin": 34, "end": 1334, "name": "REVERT", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "tag",
                "source": 0,
                "value": "1"
              },
              { "begin": 34, "end": 1334, "name": "JUMPDEST", "source": 0 },
              { "begin": 34, "end": 1334, "name": "POP", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              { "begin": 34, "end": 1334, "name": "CALLDATASIZE", "source": 0 },
              { "begin": 34, "end": 1334, "name": "LT", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "2"
              },
              { "begin": 34, "end": 1334, "name": "JUMPI", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 34, "end": 1334, "name": "CALLDATALOAD", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "E0"
              },
              { "begin": 34, "end": 1334, "name": "SHR", "source": 0 },
              { "begin": 34, "end": 1334, "name": "DUP1", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "3148F14F"
              },
              { "begin": 34, "end": 1334, "name": "EQ", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "3"
              },
              { "begin": 34, "end": 1334, "name": "JUMPI", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "tag",
                "source": 0,
                "value": "2"
              },
              { "begin": 34, "end": 1334, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 34,
                "end": 1334,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 34, "end": 1334, "name": "DUP1", "source": 0 },
              { "begin": 34, "end": 1334, "name": "REVERT", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "tag",
                "source": 0,
                "value": "3"
              },
              { "begin": 364, "end": 1328, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "4"
              },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              { "begin": 364, "end": 1328, "name": "DUP1", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "CALLDATASIZE",
                "source": 0
              },
              { "begin": 364, "end": 1328, "name": "SUB", "source": 0 },
              { "begin": 364, "end": 1328, "name": "DUP2", "source": 0 },
              { "begin": 364, "end": 1328, "name": "ADD", "source": 0 },
              { "begin": 364, "end": 1328, "name": "SWAP1", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "5"
              },
              { "begin": 364, "end": 1328, "name": "SWAP2", "source": 0 },
              { "begin": 364, "end": 1328, "name": "SWAP1", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "6"
              },
              {
                "begin": 364,
                "end": 1328,
                "name": "JUMP",
                "source": 0,
                "value": "[in]"
              },
              {
                "begin": 364,
                "end": 1328,
                "name": "tag",
                "source": 0,
                "value": "5"
              },
              { "begin": 364, "end": 1328, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "7"
              },
              {
                "begin": 364,
                "end": 1328,
                "name": "JUMP",
                "source": 0,
                "value": "[in]"
              },
              {
                "begin": 364,
                "end": 1328,
                "name": "tag",
                "source": 0,
                "value": "4"
              },
              { "begin": 364, "end": 1328, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 364, "end": 1328, "name": "MLOAD", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "8"
              },
              { "begin": 364, "end": 1328, "name": "SWAP2", "source": 0 },
              { "begin": 364, "end": 1328, "name": "SWAP1", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "9"
              },
              {
                "begin": 364,
                "end": 1328,
                "name": "JUMP",
                "source": 0,
                "value": "[in]"
              },
              {
                "begin": 364,
                "end": 1328,
                "name": "tag",
                "source": 0,
                "value": "8"
              },
              { "begin": 364, "end": 1328, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 364, "end": 1328, "name": "MLOAD", "source": 0 },
              { "begin": 364, "end": 1328, "name": "DUP1", "source": 0 },
              { "begin": 364, "end": 1328, "name": "SWAP2", "source": 0 },
              { "begin": 364, "end": 1328, "name": "SUB", "source": 0 },
              { "begin": 364, "end": 1328, "name": "SWAP1", "source": 0 },
              { "begin": 364, "end": 1328, "name": "RETURN", "source": 0 },
              {
                "begin": 364,
                "end": 1328,
                "name": "tag",
                "source": 0,
                "value": "7"
              },
              { "begin": 364, "end": 1328, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 432,
                "end": 446,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 549,
                "end": 553,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 543, "end": 554, "name": "MLOAD", "source": 0 },
              {
                "begin": 672,
                "end": 676,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              { "begin": 663, "end": 670, "name": "DUP2", "source": 0 },
              { "begin": 656, "end": 677, "name": "MSTORE", "source": 0 },
              {
                "begin": 721,
                "end": 725,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              { "begin": 714, "end": 718, "name": "DUP1", "source": 0 },
              { "begin": 705, "end": 712, "name": "DUP3", "source": 0 },
              { "begin": 701, "end": 719, "name": "ADD", "source": 0 },
              { "begin": 694, "end": 726, "name": "MSTORE", "source": 0 },
              {
                "begin": 770,
                "end": 774,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 763,
                "end": 767,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 754, "end": 761, "name": "DUP3", "source": 0 },
              { "begin": 750, "end": 768, "name": "ADD", "source": 0 },
              { "begin": 743, "end": 775, "name": "MSTORE", "source": 0 },
              { "begin": 886, "end": 888, "name": "DUP5", "source": 0 },
              {
                "begin": 879,
                "end": 883,
                "name": "PUSH",
                "source": 0,
                "value": "60"
              },
              { "begin": 870, "end": 877, "name": "DUP3", "source": 0 },
              { "begin": 866, "end": 884, "name": "ADD", "source": 0 },
              { "begin": 859, "end": 889, "name": "MSTORE", "source": 0 },
              { "begin": 933, "end": 935, "name": "DUP4", "source": 0 },
              {
                "begin": 926,
                "end": 930,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              { "begin": 917, "end": 924, "name": "DUP3", "source": 0 },
              { "begin": 913, "end": 931, "name": "ADD", "source": 0 },
              { "begin": 906, "end": 936, "name": "MSTORE", "source": 0 },
              { "begin": 981, "end": 983, "name": "DUP3", "source": 0 },
              {
                "begin": 974,
                "end": 978,
                "name": "PUSH",
                "source": 0,
                "value": "A0"
              },
              { "begin": 965, "end": 972, "name": "DUP3", "source": 0 },
              { "begin": 961, "end": 979, "name": "ADD", "source": 0 },
              { "begin": 954, "end": 984, "name": "MSTORE", "source": 0 },
              {
                "begin": 1056,
                "end": 1060,
                "name": "PUSH",
                "source": 0,
                "value": "C0"
              },
              { "begin": 1050, "end": 1061, "name": "MLOAD", "source": 0 },
              {
                "begin": 1202,
                "end": 1206,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              { "begin": 1195, "end": 1200, "name": "DUP2", "source": 0 },
              {
                "begin": 1189,
                "end": 1193,
                "name": "PUSH",
                "source": 0,
                "value": "C0"
              },
              { "begin": 1180, "end": 1187, "name": "DUP5", "source": 0 },
              {
                "begin": 1177,
                "end": 1178,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 1171,
                "end": 1175,
                "name": "PUSH",
                "source": 0,
                "value": "5"
              },
              {
                "begin": 1167,
                "end": 1168,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1163, "end": 1169, "name": "NOT", "source": 0 },
              { "begin": 1158, "end": 1207, "name": "CALL", "source": 0 },
              {
                "begin": 1148,
                "end": 1150,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "11"
              },
              { "begin": 1148, "end": 1150, "name": "JUMPI", "source": 0 },
              {
                "begin": 1241,
                "end": 1242,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1238, "end": 1239, "name": "DUP1", "source": 0 },
              { "begin": 1231, "end": 1243, "name": "REVERT", "source": 0 },
              {
                "begin": 1148,
                "end": 1150,
                "name": "tag",
                "source": 0,
                "value": "11"
              },
              { "begin": 1148, "end": 1150, "name": "JUMPDEST", "source": 0 },
              { "begin": 1298, "end": 1303, "name": "DUP1", "source": 0 },
              { "begin": 1292, "end": 1304, "name": "MLOAD", "source": 0 },
              { "begin": 1282, "end": 1304, "name": "SWAP3", "source": 0 },
              { "begin": 1282, "end": 1304, "name": "POP", "source": 0 },
              { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
              { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
              { "begin": 471, "end": 1318, "name": "SWAP4", "source": 0 },
              { "begin": 471, "end": 1318, "name": "SWAP3", "source": 0 },
              { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
              { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
              { "begin": 471, "end": 1318, "name": "POP", "source": 0 },
              {
                "begin": 471,
                "end": 1318,
                "name": "JUMP",
                "source": 0,
                "value": "[out]"
              },
              {
                "begin": 7,
                "end": 146,
                "name": "tag",
                "source": 1,
                "value": "13"
              },
              { "begin": 7, "end": 146, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 7,
                "end": 146,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 91, "end": 97, "name": "DUP2", "source": 1 },
              { "begin": 78, "end": 98, "name": "CALLDATALOAD", "source": 1 },
              { "begin": 69, "end": 98, "name": "SWAP1", "source": 1 },
              { "begin": 69, "end": 98, "name": "POP", "source": 1 },
              {
                "begin": 107,
                "end": 140,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "15"
              },
              { "begin": 134, "end": 139, "name": "DUP2", "source": 1 },
              {
                "begin": 107,
                "end": 140,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "16"
              },
              {
                "begin": 107,
                "end": 140,
                "name": "JUMP",
                "source": 1,
                "value": "[in]"
              },
              {
                "begin": 107,
                "end": 140,
                "name": "tag",
                "source": 1,
                "value": "15"
              },
              { "begin": 107, "end": 140, "name": "JUMPDEST", "source": 1 },
              { "begin": 59, "end": 146, "name": "SWAP3", "source": 1 },
              { "begin": 59, "end": 146, "name": "SWAP2", "source": 1 },
              { "begin": 59, "end": 146, "name": "POP", "source": 1 },
              { "begin": 59, "end": 146, "name": "POP", "source": 1 },
              {
                "begin": 59,
                "end": 146,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              },
              {
                "begin": 152,
                "end": 704,
                "name": "tag",
                "source": 1,
                "value": "6"
              },
              { "begin": 152, "end": 704, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 152,
                "end": 704,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 152, "end": 704, "name": "DUP1", "source": 1 },
              {
                "begin": 152,
                "end": 704,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 294,
                "end": 296,
                "name": "PUSH",
                "source": 1,
                "value": "60"
              },
              { "begin": 282, "end": 291, "name": "DUP5", "source": 1 },
              { "begin": 273, "end": 280, "name": "DUP7", "source": 1 },
              { "begin": 269, "end": 292, "name": "SUB", "source": 1 },
              { "begin": 265, "end": 297, "name": "SLT", "source": 1 },
              { "begin": 262, "end": 264, "name": "ISZERO", "source": 1 },
              {
                "begin": 262,
                "end": 264,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "18"
              },
              { "begin": 262, "end": 264, "name": "JUMPI", "source": 1 },
              {
                "begin": 310,
                "end": 311,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 307, "end": 308, "name": "DUP1", "source": 1 },
              { "begin": 300, "end": 312, "name": "REVERT", "source": 1 },
              {
                "begin": 262,
                "end": 264,
                "name": "tag",
                "source": 1,
                "value": "18"
              },
              { "begin": 262, "end": 264, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 353,
                "end": 354,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 378,
                "end": 431,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "19"
              },
              { "begin": 423, "end": 430, "name": "DUP7", "source": 1 },
              { "begin": 414, "end": 420, "name": "DUP3", "source": 1 },
              { "begin": 403, "end": 412, "name": "DUP8", "source": 1 },
              { "begin": 399, "end": 421, "name": "ADD", "source": 1 },
              {
                "begin": 378,
                "end": 431,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "13"
              },
              {
                "begin": 378,
                "end": 431,
                "name": "JUMP",
                "source": 1,
                "value": "[in]"
              },
              {
                "begin": 378,
                "end": 431,
                "name": "tag",
                "source": 1,
                "value": "19"
              },
              { "begin": 378, "end": 431, "name": "JUMPDEST", "source": 1 },
              { "begin": 368, "end": 431, "name": "SWAP4", "source": 1 },
              { "begin": 368, "end": 431, "name": "POP", "source": 1 },
              { "begin": 324, "end": 441, "name": "POP", "source": 1 },
              {
                "begin": 480,
                "end": 482,
                "name": "PUSH",
                "source": 1,
                "value": "20"
              },
              {
                "begin": 506,
                "end": 559,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "20"
              },
              { "begin": 551, "end": 558, "name": "DUP7", "source": 1 },
              { "begin": 542, "end": 548, "name": "DUP3", "source": 1 },
              { "begin": 531, "end": 540, "name": "DUP8", "source": 1 },
              { "begin": 527, "end": 549, "name": "ADD", "source": 1 },
              {
                "begin": 506,
                "end": 559,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "13"
              },
              {
                "begin": 506,
                "end": 559,
                "name": "JUMP",
                "source": 1,
                "value": "[in]"
              },
              {
                "begin": 506,
                "end": 559,
                "name": "tag",
                "source": 1,
                "value": "20"
              },
              { "begin": 506, "end": 559, "name": "JUMPDEST", "source": 1 },
              { "begin": 496, "end": 559, "name": "SWAP3", "source": 1 },
              { "begin": 496, "end": 559, "name": "POP", "source": 1 },
              { "begin": 451, "end": 569, "name": "POP", "source": 1 },
              {
                "begin": 608,
                "end": 610,
                "name": "PUSH",
                "source": 1,
                "value": "40"
              },
              {
                "begin": 634,
                "end": 687,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "21"
              },
              { "begin": 679, "end": 686, "name": "DUP7", "source": 1 },
              { "begin": 670, "end": 676, "name": "DUP3", "source": 1 },
              { "begin": 659, "end": 668, "name": "DUP8", "source": 1 },
              { "begin": 655, "end": 677, "name": "ADD", "source": 1 },
              {
                "begin": 634,
                "end": 687,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "13"
              },
              {
                "begin": 634,
                "end": 687,
                "name": "JUMP",
                "source": 1,
                "value": "[in]"
              },
              {
                "begin": 634,
                "end": 687,
                "name": "tag",
                "source": 1,
                "value": "21"
              },
              { "begin": 634, "end": 687, "name": "JUMPDEST", "source": 1 },
              { "begin": 624, "end": 687, "name": "SWAP2", "source": 1 },
              { "begin": 624, "end": 687, "name": "POP", "source": 1 },
              { "begin": 579, "end": 697, "name": "POP", "source": 1 },
              { "begin": 252, "end": 704, "name": "SWAP3", "source": 1 },
              { "begin": 252, "end": 704, "name": "POP", "source": 1 },
              { "begin": 252, "end": 704, "name": "SWAP3", "source": 1 },
              { "begin": 252, "end": 704, "name": "POP", "source": 1 },
              { "begin": 252, "end": 704, "name": "SWAP3", "source": 1 },
              {
                "begin": 252,
                "end": 704,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              },
              {
                "begin": 710,
                "end": 828,
                "name": "tag",
                "source": 1,
                "value": "22"
              },
              { "begin": 710, "end": 828, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 797,
                "end": 821,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "24"
              },
              { "begin": 815, "end": 820, "name": "DUP2", "source": 1 },
              {
                "begin": 797,
                "end": 821,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "25"
              },
              {
                "begin": 797,
                "end": 821,
                "name": "JUMP",
                "source": 1,
                "value": "[in]"
              },
              {
                "begin": 797,
                "end": 821,
                "name": "tag",
                "source": 1,
                "value": "24"
              },
              { "begin": 797, "end": 821, "name": "JUMPDEST", "source": 1 },
              { "begin": 792, "end": 795, "name": "DUP3", "source": 1 },
              { "begin": 785, "end": 822, "name": "MSTORE", "source": 1 },
              { "begin": 775, "end": 828, "name": "POP", "source": 1 },
              { "begin": 775, "end": 828, "name": "POP", "source": 1 },
              {
                "begin": 775,
                "end": 828,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              },
              {
                "begin": 834,
                "end": 1056,
                "name": "tag",
                "source": 1,
                "value": "9"
              },
              { "begin": 834, "end": 1056, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 834,
                "end": 1056,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 965,
                "end": 967,
                "name": "PUSH",
                "source": 1,
                "value": "20"
              },
              { "begin": 954, "end": 963, "name": "DUP3", "source": 1 },
              { "begin": 950, "end": 968, "name": "ADD", "source": 1 },
              { "begin": 942, "end": 968, "name": "SWAP1", "source": 1 },
              { "begin": 942, "end": 968, "name": "POP", "source": 1 },
              {
                "begin": 978,
                "end": 1049,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "27"
              },
              {
                "begin": 1046,
                "end": 1047,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 1035, "end": 1044, "name": "DUP4", "source": 1 },
              { "begin": 1031, "end": 1048, "name": "ADD", "source": 1 },
              { "begin": 1022, "end": 1028, "name": "DUP5", "source": 1 },
              {
                "begin": 978,
                "end": 1049,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "22"
              },
              {
                "begin": 978,
                "end": 1049,
                "name": "JUMP",
                "source": 1,
                "value": "[in]"
              },
              {
                "begin": 978,
                "end": 1049,
                "name": "tag",
                "source": 1,
                "value": "27"
              },
              { "begin": 978, "end": 1049, "name": "JUMPDEST", "source": 1 },
              { "begin": 932, "end": 1056, "name": "SWAP3", "source": 1 },
              { "begin": 932, "end": 1056, "name": "SWAP2", "source": 1 },
              { "begin": 932, "end": 1056, "name": "POP", "source": 1 },
              { "begin": 932, "end": 1056, "name": "POP", "source": 1 },
              {
                "begin": 932,
                "end": 1056,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              },
              {
                "begin": 1062,
                "end": 1139,
                "name": "tag",
                "source": 1,
                "value": "25"
              },
              { "begin": 1062, "end": 1139, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1062,
                "end": 1139,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 1128, "end": 1133, "name": "DUP2", "source": 1 },
              { "begin": 1117, "end": 1133, "name": "SWAP1", "source": 1 },
              { "begin": 1117, "end": 1133, "name": "POP", "source": 1 },
              { "begin": 1107, "end": 1139, "name": "SWAP2", "source": 1 },
              { "begin": 1107, "end": 1139, "name": "SWAP1", "source": 1 },
              { "begin": 1107, "end": 1139, "name": "POP", "source": 1 },
              {
                "begin": 1107,
                "end": 1139,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              },
              {
                "begin": 1145,
                "end": 1267,
                "name": "tag",
                "source": 1,
                "value": "16"
              },
              { "begin": 1145, "end": 1267, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1218,
                "end": 1242,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "30"
              },
              { "begin": 1236, "end": 1241, "name": "DUP2", "source": 1 },
              {
                "begin": 1218,
                "end": 1242,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "25"
              },
              {
                "begin": 1218,
                "end": 1242,
                "name": "JUMP",
                "source": 1,
                "value": "[in]"
              },
              {
                "begin": 1218,
                "end": 1242,
                "name": "tag",
                "source": 1,
                "value": "30"
              },
              { "begin": 1218, "end": 1242, "name": "JUMPDEST", "source": 1 },
              { "begin": 1211, "end": 1216, "name": "DUP2", "source": 1 },
              { "begin": 1208, "end": 1243, "name": "EQ", "source": 1 },
              {
                "begin": 1198,
                "end": 1200,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "31"
              },
              { "begin": 1198, "end": 1200, "name": "JUMPI", "source": 1 },
              {
                "begin": 1257,
                "end": 1258,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 1254, "end": 1255, "name": "DUP1", "source": 1 },
              { "begin": 1247, "end": 1259, "name": "REVERT", "source": 1 },
              {
                "begin": 1198,
                "end": 1200,
                "name": "tag",
                "source": 1,
                "value": "31"
              },
              { "begin": 1198, "end": 1200, "name": "JUMPDEST", "source": 1 },
              { "begin": 1188, "end": 1267, "name": "POP", "source": 1 },
              {
                "begin": 1188,
                "end": 1267,
                "name": "JUMP",
                "source": 1,
                "value": "[out]"
              }
            ]
          }
        }
      },
      "methodIdentifiers": { "modExp(uint256,uint256,uint256)": "3148f14f" }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_e\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_m\",\"type\":\"uint256\"}],\"name\":\"modExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"ModularCheck\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x097512cf9987b49bfe8f0a182553ada97250dc01d384db9cdcaed8ad64079749\",\"urls\":[\"bzz-raw://58b5775c60ddc5d903527600fcd1730275d92f25d2cbe4155407d1dcf1409268\",\"dweb:/ipfs/QmYGYVSziwMp5tgyj6R6WxDScMUSdLTBNuzgjU1DwFHiN5\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "\n    pragma solidity >=0.8.0;\n    contract ModularCheck {\n            // Verify simple modular exponentiation\n        constructor() {\n            require(modExp(3, 5, 7) == 5);\n            require(modExp(5, 7, 11) == 3);\n        }\n            // Wrapper function to use the precompile.\n        // Taken from https://ethereum.stackexchange.com/a/71590/9963\n        function modExp(uint256 _b, uint256 _e, uint256 _m) public returns (uint256 result) {\n            assembly {\n                // Free memory pointer\n                let pointer := mload(0x40)\n                    // Define length of base, exponent and modulus. 0x20 == 32 bytes\n                mstore(pointer, 0x20)\n                mstore(add(pointer, 0x20), 0x20)\n                mstore(add(pointer, 0x40), 0x20)\n                    // Define variables base, exponent and modulus\n                mstore(add(pointer, 0x60), _b)\n                mstore(add(pointer, 0x80), _e)\n\n                mstore(add(pointer, 0xa0), _m)\n                // Store the result\n                let value := mload(0xc0)\n                    // Call the precompiled contract 0x05 = bigModExp\n                if iszero(call(not(0), 0x05, 0, pointer, 0xc0, value, 0x20)) {\n                    revert(0, 0)\n                }\n                    result := mload(value)\n            }\n        }\n    }"
}
