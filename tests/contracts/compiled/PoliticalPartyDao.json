{
  "byteCode": "0x608060405234801561001057600080fd5b5060405161035338038061035383398181016040528101906100329190610073565b506100a0565b600080fd5b6000819050919050565b6100508161003d565b811461005b57600080fd5b50565b60008151905061006d81610047565b92915050565b60006020828403121561008957610088610038565b5b60006100978482850161005e565b91505092915050565b6102a4806100af6000396000f3fe60806040526004361061004a5760003560e01c80632fc54f731461004f5780633ccfd60b14610066578063406569631461007d57806342e94c9014610099578063bc55efbf146100d7575b600080fd5b34801561005b57600080fd5b506100646100ee565b005b34801561007257600080fd5b5061007b6100f0565b005b61009760048036038101906100929190610165565b6100f2565b005b3480156100a557600080fd5b506100c060048036038101906100bb91906101f0565b6100f5565b6040516100ce929190610245565b60405180910390f35b3480156100e357600080fd5b506100ec610126565b005b565b565b50565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b565b600080fd5b60008115159050919050565b6101428161012d565b811461014d57600080fd5b50565b60008135905061015f81610139565b92915050565b60006020828403121561017b5761017a610128565b5b600061018984828501610150565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bd82610192565b9050919050565b6101cd816101b2565b81146101d857600080fd5b50565b6000813590506101ea816101c4565b92915050565b60006020828403121561020657610205610128565b5b6000610214848285016101db565b91505092915050565b6000819050919050565b6102308161021d565b82525050565b61023f8161012d565b82525050565b600060408201905061025a6000830185610227565b6102676020830184610236565b939250505056fea2646970667358221220f614311d8b55cf968278e5d6843c7081ffbdc2b721c0f5715cd2e2ea7c0172df64736f6c63430008110033",
  "contract": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "proposalHash",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "changeVote",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [{ "internalType": "bool", "name": "vote", "type": "bool" }],
        "name": "contribute",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "", "type": "address" }
        ],
        "name": "contributions",
        "outputs": [
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          { "internalType": "bool", "name": "vote", "type": "bool" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "withdrawEarly",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "changeVote()": {
          "custom:selector": "bc55efbf",
          "details": "Change your currently registered vote in the contract"
        },
        "contribute(bool)": {
          "custom:selector": "40656963",
          "details": "Contribute funds to the dao and specify your initial vote",
          "params": { "vote": "Whether you support the referendum (true)." }
        },
        "withdraw()": {
          "custom:selector": "3ccfd60b",
          "details": "Withdraw your tokens after the referendum finishes."
        },
        "withdrawEarly()": {
          "custom:selector": "2fc54f73",
          "details": "Allows a user who is unhappy with the status of the internal party vote to withdraw tokens. However there is a 10% penalty for being fickle. The 10% of tokens that remain in the DAO are jsut locked here forever. A real-life impl could explicitly burn or redistribute."
        }
      },
      "version": 1
    },
    "evm": {
      "assembly": "    /* \"main.sol\":1173:2332  contract PoliticalPartyDao {... */\n  mstore(0x40, 0x80)\n    /* \"main.sol\":1266:1348  constructor(uint256 proposalHash) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n  pop\n    /* \"main.sol\":1173:2332  contract PoliticalPartyDao {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_11:\n    /* \"#utility.yul\":490:514   */\n  tag_19\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_20:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_12:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_22\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_25\n  tag_8\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":781:900   */\ntag_24:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_26\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"main.sol\":1173:2332  contract PoliticalPartyDao {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":1173:2332  contract PoliticalPartyDao {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2fc54f73\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x40656963\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x42e94c90\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc55efbf\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"main.sol\":2193:2330  function withdrawEarly() external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"main.sol\":1825:1856  function withdraw() external {} */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"main.sol\":1530:1580  function contribute(bool vote) external payable {} */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"main.sol\":1206:1259  mapping(address => Contribution) public contributions */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":1687:1720  function changeVote() external {} */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"main.sol\":2193:2330  function withdrawEarly() external {... */\n    tag_9:\n      jump\t// out\n        /* \"main.sol\":1825:1856  function withdraw() external {} */\n    tag_12:\n      jump\t// out\n        /* \"main.sol\":1530:1580  function contribute(bool vote) external payable {} */\n    tag_16:\n      pop\n      jump\t// out\n        /* \"main.sol\":1206:1259  mapping(address => Contribution) public contributions */\n    tag_21:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"main.sol\":1687:1720  function changeVote() external {} */\n    tag_26:\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_32:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_34:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_35:\n        /* \"#utility.yul\":500:521   */\n      tag_50\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_34\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_51:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_36:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_53\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_15:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_56\n      tag_32\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":764:883   */\n    tag_55:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_57\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_36\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1146   */\n    tag_37:\n        /* \"#utility.yul\":1057:1064   */\n      0x00\n        /* \"#utility.yul\":1097:1139   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1090:1095   */\n      dup3\n        /* \"#utility.yul\":1086:1140   */\n      and\n        /* \"#utility.yul\":1075:1140   */\n      swap1\n      pop\n        /* \"#utility.yul\":1020:1146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1248   */\n    tag_38:\n        /* \"#utility.yul\":1189:1196   */\n      0x00\n        /* \"#utility.yul\":1218:1242   */\n      tag_60\n        /* \"#utility.yul\":1236:1241   */\n      dup3\n        /* \"#utility.yul\":1218:1242   */\n      tag_37\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1207:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1254:1376   */\n    tag_39:\n        /* \"#utility.yul\":1327:1351   */\n      tag_62\n        /* \"#utility.yul\":1345:1350   */\n      dup2\n        /* \"#utility.yul\":1327:1351   */\n      tag_38\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1320:1325   */\n      dup2\n        /* \"#utility.yul\":1317:1352   */\n      eq\n        /* \"#utility.yul\":1307:1370   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1366:1367   */\n      0x00\n        /* \"#utility.yul\":1363:1364   */\n      dup1\n        /* \"#utility.yul\":1356:1368   */\n      revert\n        /* \"#utility.yul\":1307:1370   */\n    tag_63:\n        /* \"#utility.yul\":1254:1376   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1382:1521   */\n    tag_40:\n        /* \"#utility.yul\":1428:1433   */\n      0x00\n        /* \"#utility.yul\":1466:1472   */\n      dup2\n        /* \"#utility.yul\":1453:1473   */\n      calldataload\n        /* \"#utility.yul\":1444:1473   */\n      swap1\n      pop\n        /* \"#utility.yul\":1482:1515   */\n      tag_65\n        /* \"#utility.yul\":1509:1514   */\n      dup2\n        /* \"#utility.yul\":1482:1515   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1382:1521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1527:1856   */\n    tag_20:\n        /* \"#utility.yul\":1586:1592   */\n      0x00\n        /* \"#utility.yul\":1635:1637   */\n      0x20\n        /* \"#utility.yul\":1623:1632   */\n      dup3\n        /* \"#utility.yul\":1614:1621   */\n      dup5\n        /* \"#utility.yul\":1610:1633   */\n      sub\n        /* \"#utility.yul\":1606:1638   */\n      slt\n        /* \"#utility.yul\":1603:1722   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1641:1720   */\n      tag_68\n      tag_32\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1603:1722   */\n    tag_67:\n        /* \"#utility.yul\":1761:1762   */\n      0x00\n        /* \"#utility.yul\":1786:1839   */\n      tag_69\n        /* \"#utility.yul\":1831:1838   */\n      dup5\n        /* \"#utility.yul\":1822:1828   */\n      dup3\n        /* \"#utility.yul\":1811:1820   */\n      dup6\n        /* \"#utility.yul\":1807:1829   */\n      add\n        /* \"#utility.yul\":1786:1839   */\n      tag_40\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1776:1839   */\n      swap2\n      pop\n        /* \"#utility.yul\":1732:1849   */\n      pop\n        /* \"#utility.yul\":1527:1856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:1939   */\n    tag_41:\n        /* \"#utility.yul\":1899:1906   */\n      0x00\n        /* \"#utility.yul\":1928:1933   */\n      dup2\n        /* \"#utility.yul\":1917:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1862:1939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1945:2063   */\n    tag_42:\n        /* \"#utility.yul\":2032:2056   */\n      tag_72\n        /* \"#utility.yul\":2050:2055   */\n      dup2\n        /* \"#utility.yul\":2032:2056   */\n      tag_41\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2027:2030   */\n      dup3\n        /* \"#utility.yul\":2020:2057   */\n      mstore\n        /* \"#utility.yul\":1945:2063   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2069:2178   */\n    tag_43:\n        /* \"#utility.yul\":2150:2171   */\n      tag_74\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2150:2171   */\n      tag_34\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2145:2148   */\n      dup3\n        /* \"#utility.yul\":2138:2172   */\n      mstore\n        /* \"#utility.yul\":2069:2178   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2504   */\n    tag_23:\n        /* \"#utility.yul\":2299:2303   */\n      0x00\n        /* \"#utility.yul\":2337:2339   */\n      0x40\n        /* \"#utility.yul\":2326:2335   */\n      dup3\n        /* \"#utility.yul\":2322:2340   */\n      add\n        /* \"#utility.yul\":2314:2340   */\n      swap1\n      pop\n        /* \"#utility.yul\":2350:2421   */\n      tag_76\n        /* \"#utility.yul\":2418:2419   */\n      0x00\n        /* \"#utility.yul\":2407:2416   */\n      dup4\n        /* \"#utility.yul\":2403:2420   */\n      add\n        /* \"#utility.yul\":2394:2400   */\n      dup6\n        /* \"#utility.yul\":2350:2421   */\n      tag_42\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2431:2497   */\n      tag_77\n        /* \"#utility.yul\":2493:2495   */\n      0x20\n        /* \"#utility.yul\":2482:2491   */\n      dup4\n        /* \"#utility.yul\":2478:2496   */\n      add\n        /* \"#utility.yul\":2469:2475   */\n      dup5\n        /* \"#utility.yul\":2431:2497   */\n      tag_43\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2184:2504   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f614311d8b55cf968278e5d6843c7081ffbdc2b721c0f5715cd2e2ea7c0172df64736f6c63430008110033\n}\n",
      "bytecode": {
        "functionDebugData": {
          "@_13": {
            "entryPoint": null,
            "id": 13,
            "parameterSlots": 1,
            "returnSlots": 0
          },
          "abi_decode_t_uint256_fromMemory": {
            "entryPoint": 94,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_uint256_fromMemory": {
            "entryPoint": 115,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "allocate_unbounded": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "cleanup_t_uint256": {
            "entryPoint": 61,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
            "entryPoint": 56,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "validator_revert_t_uint256": {
            "entryPoint": 71,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 0
          }
        },
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:1048:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "47:35:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "57:19:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "73:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "67:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "67:9:1"
                        },
                        "variableNames": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "57:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "allocate_unbounded",
                  "nodeType": "YulFunctionDefinition",
                  "returnVariables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "40:6:1",
                      "type": ""
                    }
                  ],
                  "src": "7:75:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "177:28:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "194:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "187:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "187:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "187:12:1"
                      }
                    ]
                  },
                  "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                  "nodeType": "YulFunctionDefinition",
                  "src": "88:117:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "300:28:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:1"
                      }
                    ]
                  },
                  "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                  "nodeType": "YulFunctionDefinition",
                  "src": "211:117:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "379:32:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:16:1",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "400:5:1"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "361:5:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "371:7:1",
                      "type": ""
                    }
                  ],
                  "src": "334:77:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "460:79:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "517:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "526:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "529:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "519:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "519:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "519:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:5:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:5:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "490:17:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "490:24:1"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "480:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "480:35:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "473:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "473:43:1"
                        },
                        "nodeType": "YulIf",
                        "src": "470:63:1"
                      }
                    ]
                  },
                  "name": "validator_revert_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "453:5:1",
                      "type": ""
                    }
                  ],
                  "src": "417:122:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "608:80:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "618:22:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "633:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "627:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "627:13:1"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "618:5:1"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "676:5:1"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "649:26:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "649:33:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "649:33:1"
                      }
                    ]
                  },
                  "name": "abi_decode_t_uint256_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "586:6:1",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "594:3:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "602:5:1",
                      "type": ""
                    }
                  ],
                  "src": "545:143:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "771:274:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "817:83:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                  "nodeType": "YulIdentifier",
                                  "src": "819:77:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "819:79:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "819:79:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "792:7:1"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "801:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "788:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "788:23:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "813:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "784:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "784:32:1"
                        },
                        "nodeType": "YulIf",
                        "src": "781:119:1"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "910:128:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "925:15:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:1",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "929:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "954:74:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1000:9:1"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1011:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "996:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "996:22:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1020:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "964:31:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "964:64:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "954:6:1"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_uint256_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "741:9:1",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "752:7:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "764:6:1",
                      "type": ""
                    }
                  ],
                  "src": "694:351:1"
                }
              ]
            },
            "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
            "id": 1,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b5060405161035338038061035383398181016040528101906100329190610073565b506100a0565b600080fd5b6000819050919050565b6100508161003d565b811461005b57600080fd5b50565b60008151905061006d81610047565b92915050565b60006020828403121561008957610088610038565b5b60006100978482850161005e565b91505092915050565b6102a4806100af6000396000f3fe60806040526004361061004a5760003560e01c80632fc54f731461004f5780633ccfd60b14610066578063406569631461007d57806342e94c9014610099578063bc55efbf146100d7575b600080fd5b34801561005b57600080fd5b506100646100ee565b005b34801561007257600080fd5b5061007b6100f0565b005b61009760048036038101906100929190610165565b6100f2565b005b3480156100a557600080fd5b506100c060048036038101906100bb91906101f0565b6100f5565b6040516100ce929190610245565b60405180910390f35b3480156100e357600080fd5b506100ec610126565b005b565b565b50565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b565b600080fd5b60008115159050919050565b6101428161012d565b811461014d57600080fd5b50565b60008135905061015f81610139565b92915050565b60006020828403121561017b5761017a610128565b5b600061018984828501610150565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bd82610192565b9050919050565b6101cd816101b2565b81146101d857600080fd5b50565b6000813590506101ea816101c4565b92915050565b60006020828403121561020657610205610128565b5b6000610214848285016101db565b91505092915050565b6000819050919050565b6102308161021d565b82525050565b61023f8161012d565b82525050565b600060408201905061025a6000830185610227565b6102676020830184610236565b939250505056fea2646970667358221220f614311d8b55cf968278e5d6843c7081ffbdc2b721c0f5715cd2e2ea7c0172df64736f6c63430008110033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x353 CODESIZE SUB DUP1 PUSH2 0x353 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x73 JUMP JUMPDEST POP PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50 DUP2 PUSH2 0x3D JUMP JUMPDEST DUP2 EQ PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D DUP2 PUSH2 0x47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89 JUMPI PUSH2 0x88 PUSH2 0x38 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x97 DUP5 DUP3 DUP6 ADD PUSH2 0x5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A4 DUP1 PUSH2 0xAF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FC54F73 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x40656963 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xBC55EFBF EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x165 JUMP JUMPDEST PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP3 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x12D JUMP JUMPDEST DUP2 EQ PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F DUP2 PUSH2 0x139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B JUMPI PUSH2 0x17A PUSH2 0x128 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP5 DUP3 DUP6 ADD PUSH2 0x150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD DUP3 PUSH2 0x192 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x1B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA DUP2 PUSH2 0x1C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0x128 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214 DUP5 DUP3 DUP6 ADD PUSH2 0x1DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x12D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x267 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 EQ BALANCE SAR DUP12 SSTORE 0xCF SWAP7 DUP3 PUSH25 0xE5D6843C7081FFBDC2B721C0F5715CD2E2EA7C0172DF64736F PUSH13 0x63430008110033000000000000 ",
        "sourceMap": "1173:1159:0:-:0;;;1266:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1173:1159;;88:117:1;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1173:1159:0:-;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {
          "@changeVote_25": {
            "entryPoint": 294,
            "id": 25,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "@contribute_20": {
            "entryPoint": 242,
            "id": 20,
            "parameterSlots": 1,
            "returnSlots": 0
          },
          "@contributions_7": {
            "entryPoint": 245,
            "id": 7,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "@withdrawEarly_35": {
            "entryPoint": 238,
            "id": 35,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "@withdraw_30": {
            "entryPoint": 240,
            "id": 30,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "abi_decode_t_address": {
            "entryPoint": 475,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_t_bool": {
            "entryPoint": 336,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_address": {
            "entryPoint": 496,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_bool": {
            "entryPoint": 357,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_t_bool_to_t_bool_fromStack": {
            "entryPoint": 566,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 0
          },
          "abi_encode_t_uint256_to_t_uint256_fromStack": {
            "entryPoint": 551,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 0
          },
          "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
            "entryPoint": 581,
            "id": null,
            "parameterSlots": 3,
            "returnSlots": 1
          },
          "allocate_unbounded": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "cleanup_t_address": {
            "entryPoint": 434,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "cleanup_t_bool": {
            "entryPoint": 301,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "cleanup_t_uint160": {
            "entryPoint": 402,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "cleanup_t_uint256": {
            "entryPoint": 541,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
            "entryPoint": 296,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "validator_revert_t_address": {
            "entryPoint": 452,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 0
          },
          "validator_revert_t_bool": {
            "entryPoint": 313,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 0
          }
        },
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:2507:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "47:35:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "57:19:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "73:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "67:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "67:9:1"
                        },
                        "variableNames": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "57:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "allocate_unbounded",
                  "nodeType": "YulFunctionDefinition",
                  "returnVariables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "40:6:1",
                      "type": ""
                    }
                  ],
                  "src": "7:75:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "177:28:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "194:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "187:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "187:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "187:12:1"
                      }
                    ]
                  },
                  "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                  "nodeType": "YulFunctionDefinition",
                  "src": "88:117:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "300:28:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:1"
                      }
                    ]
                  },
                  "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                  "nodeType": "YulFunctionDefinition",
                  "src": "211:117:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "376:48:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "386:32:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "404:6:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "404:13:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "397:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "397:21:1"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "386:7:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "358:5:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "368:7:1",
                      "type": ""
                    }
                  ],
                  "src": "334:90:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "470:76:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "524:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "533:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "536:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "526:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "526:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "526:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "493:5:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "515:5:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_bool",
                                    "nodeType": "YulIdentifier",
                                    "src": "500:14:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "500:21:1"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "490:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "490:32:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "483:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "483:40:1"
                        },
                        "nodeType": "YulIf",
                        "src": "480:60:1"
                      }
                    ]
                  },
                  "name": "validator_revert_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "463:5:1",
                      "type": ""
                    }
                  ],
                  "src": "430:116:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "601:84:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "611:29:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "633:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "620:12:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "620:20:1"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "611:5:1"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "673:5:1"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_bool",
                            "nodeType": "YulIdentifier",
                            "src": "649:23:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "649:30:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "649:30:1"
                      }
                    ]
                  },
                  "name": "abi_decode_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "579:6:1",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "587:3:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "595:5:1",
                      "type": ""
                    }
                  ],
                  "src": "552:133:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "754:260:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "800:83:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                  "nodeType": "YulIdentifier",
                                  "src": "802:77:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "802:79:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "802:79:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "775:7:1"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "784:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "771:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "771:23:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "796:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "767:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "767:32:1"
                        },
                        "nodeType": "YulIf",
                        "src": "764:119:1"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "893:114:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "908:15:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "922:1:1",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "912:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "937:60:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "969:9:1"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "980:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "965:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "965:22:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "989:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_bool",
                                "nodeType": "YulIdentifier",
                                "src": "947:17:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "947:50:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "937:6:1"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "724:9:1",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "735:7:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "747:6:1",
                      "type": ""
                    }
                  ],
                  "src": "691:323:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1065:81:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1075:65:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1090:5:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1097:42:1",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1086:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1086:54:1"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "1075:7:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1047:5:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "1057:7:1",
                      "type": ""
                    }
                  ],
                  "src": "1020:126:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1197:51:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1207:35:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1236:5:1"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "1218:17:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1218:24:1"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "1207:7:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1179:5:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "1189:7:1",
                      "type": ""
                    }
                  ],
                  "src": "1152:96:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1297:79:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1354:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1363:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1366:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1356:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1356:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1356:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1320:5:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "1345:5:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nodeType": "YulIdentifier",
                                    "src": "1327:17:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1327:24:1"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "1317:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1317:35:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1310:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1310:43:1"
                        },
                        "nodeType": "YulIf",
                        "src": "1307:63:1"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1290:5:1",
                      "type": ""
                    }
                  ],
                  "src": "1254:122:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1434:87:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1444:29:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "1466:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "1453:12:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1453:20:1"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1444:5:1"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1509:5:1"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1482:26:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1482:33:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1482:33:1"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1412:6:1",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "1420:3:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1428:5:1",
                      "type": ""
                    }
                  ],
                  "src": "1382:139:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1593:263:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1639:83:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                  "nodeType": "YulIdentifier",
                                  "src": "1641:77:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1641:79:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1641:79:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1614:7:1"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1623:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1610:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1610:23:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1635:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1606:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1606:32:1"
                        },
                        "nodeType": "YulIf",
                        "src": "1603:119:1"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1732:117:1",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1747:15:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1761:1:1",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1751:6:1",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1776:63:1",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1811:9:1"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1822:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1807:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1807:22:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1831:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "1786:20:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1786:53:1"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1776:6:1"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1563:9:1",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "1574:7:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1586:6:1",
                      "type": ""
                    }
                  ],
                  "src": "1527:329:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1907:32:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1917:16:1",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "1928:5:1"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "1917:7:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1889:5:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "1899:7:1",
                      "type": ""
                    }
                  ],
                  "src": "1862:77:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2010:53:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2027:3:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2050:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "2032:17:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2032:24:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2020:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2020:37:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2020:37:1"
                      }
                    ]
                  },
                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1998:5:1",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2005:3:1",
                      "type": ""
                    }
                  ],
                  "src": "1945:118:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2128:50:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2145:3:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2165:5:1"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_bool",
                                "nodeType": "YulIdentifier",
                                "src": "2150:14:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2150:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2138:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2138:34:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2138:34:1"
                      }
                    ]
                  },
                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2116:5:1",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2123:3:1",
                      "type": ""
                    }
                  ],
                  "src": "2069:109:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2304:200:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2314:26:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2326:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2337:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2322:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2322:18:1"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2314:4:1"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2394:6:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2407:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2418:1:1",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2403:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2403:17:1"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2350:43:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:71:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:71:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2469:6:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2482:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2493:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2478:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2478:18:1"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_bool_to_t_bool_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2431:37:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2431:66:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2431:66:1"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2268:9:1",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "2280:6:1",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2288:6:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2299:4:1",
                      "type": ""
                    }
                  ],
                  "src": "2184:320:1"
                }
              ]
            },
            "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
            "id": 1,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "60806040526004361061004a5760003560e01c80632fc54f731461004f5780633ccfd60b14610066578063406569631461007d57806342e94c9014610099578063bc55efbf146100d7575b600080fd5b34801561005b57600080fd5b506100646100ee565b005b34801561007257600080fd5b5061007b6100f0565b005b61009760048036038101906100929190610165565b6100f2565b005b3480156100a557600080fd5b506100c060048036038101906100bb91906101f0565b6100f5565b6040516100ce929190610245565b60405180910390f35b3480156100e357600080fd5b506100ec610126565b005b565b565b50565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b565b600080fd5b60008115159050919050565b6101428161012d565b811461014d57600080fd5b50565b60008135905061015f81610139565b92915050565b60006020828403121561017b5761017a610128565b5b600061018984828501610150565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bd82610192565b9050919050565b6101cd816101b2565b81146101d857600080fd5b50565b6000813590506101ea816101c4565b92915050565b60006020828403121561020657610205610128565b5b6000610214848285016101db565b91505092915050565b6000819050919050565b6102308161021d565b82525050565b61023f8161012d565b82525050565b600060408201905061025a6000830185610227565b6102676020830184610236565b939250505056fea2646970667358221220f614311d8b55cf968278e5d6843c7081ffbdc2b721c0f5715cd2e2ea7c0172df64736f6c63430008110033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FC54F73 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x40656963 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xBC55EFBF EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x165 JUMP JUMPDEST PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP3 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x12D JUMP JUMPDEST DUP2 EQ PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F DUP2 PUSH2 0x139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B JUMPI PUSH2 0x17A PUSH2 0x128 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP5 DUP3 DUP6 ADD PUSH2 0x150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD DUP3 PUSH2 0x192 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x1B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA DUP2 PUSH2 0x1C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0x128 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214 DUP5 DUP3 DUP6 ADD PUSH2 0x1DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x12D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x267 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 EQ BALANCE SAR DUP12 SSTORE 0xCF SWAP7 DUP3 PUSH25 0xE5D6843C7081FFBDC2B721C0F5715CD2E2EA7C0172DF64736F PUSH13 0x63430008110033000000000000 ",
        "sourceMap": "1173:1159:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:137;;;;;;;;;;;;;:::i;:::-;;1825:31;;;;;;;;;;;;;:::i;:::-;;1530:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1206:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1687:33;;;;;;;;;;;;;:::i;:::-;;2193:137;:::o;1825:31::-;:::o;1530:50::-;;:::o;1206:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1687:33::-;:::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:126::-;1057:7;1097:42;1090:5;1086:54;1075:65;;1020:126;;;:::o;1152:96::-;1189:7;1218:24;1236:5;1218:24;:::i;:::-;1207:35;;1152:96;;;:::o;1254:122::-;1327:24;1345:5;1327:24;:::i;:::-;1320:5;1317:35;1307:63;;1366:1;1363;1356:12;1307:63;1254:122;:::o;1382:139::-;1428:5;1466:6;1453:20;1444:29;;1482:33;1509:5;1482:33;:::i;:::-;1382:139;;;;:::o;1527:329::-;1586:6;1635:2;1623:9;1614:7;1610:23;1606:32;1603:119;;;1641:79;;:::i;:::-;1603:119;1761:1;1786:53;1831:7;1822:6;1811:9;1807:22;1786:53;:::i;:::-;1776:63;;1732:117;1527:329;;;;:::o;1862:77::-;1899:7;1928:5;1917:16;;1862:77;;;:::o;1945:118::-;2032:24;2050:5;2032:24;:::i;:::-;2027:3;2020:37;1945:118;;:::o;2069:109::-;2150:21;2165:5;2150:21;:::i;:::-;2145:3;2138:34;2069:109;;:::o;2184:320::-;2299:4;2337:2;2326:9;2322:18;2314:26;;2350:71;2418:1;2407:9;2403:17;2394:6;2350:71;:::i;:::-;2431:66;2493:2;2482:9;2478:18;2469:6;2431:66;:::i;:::-;2184:320;;;;;:::o"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "135200",
          "executionCost": "infinite",
          "totalCost": "infinite"
        },
        "external": {
          "changeVote()": "210",
          "contribute(bool)": "410",
          "contributions(address)": "5126",
          "withdraw()": "144",
          "withdrawEarly()": "122"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 1173,
            "end": 2332,
            "name": "PUSH",
            "source": 0,
            "value": "80"
          },
          {
            "begin": 1173,
            "end": 2332,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 1173, "end": 2332, "name": "MSTORE", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "CALLVALUE", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "DUP1", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "ISZERO", "source": 0 },
          {
            "begin": 1266,
            "end": 1348,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "1"
          },
          { "begin": 1266, "end": 1348, "name": "JUMPI", "source": 0 },
          {
            "begin": 1266,
            "end": 1348,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 1266, "end": 1348, "name": "DUP1", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "REVERT", "source": 0 },
          {
            "begin": 1266,
            "end": 1348,
            "name": "tag",
            "source": 0,
            "value": "1"
          },
          { "begin": 1266, "end": 1348, "name": "JUMPDEST", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "POP", "source": 0 },
          {
            "begin": 1266,
            "end": 1348,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 1266, "end": 1348, "name": "MLOAD", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "PUSHSIZE", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "CODESIZE", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "SUB", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "DUP1", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "PUSHSIZE", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "DUP4", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "CODECOPY", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "DUP2", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "DUP2", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "ADD", "source": 0 },
          {
            "begin": 1266,
            "end": 1348,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 1266, "end": 1348, "name": "MSTORE", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "DUP2", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "ADD", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "SWAP1", "source": 0 },
          {
            "begin": 1266,
            "end": 1348,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "2"
          },
          { "begin": 1266, "end": 1348, "name": "SWAP2", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "SWAP1", "source": 0 },
          {
            "begin": 1266,
            "end": 1348,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "3"
          },
          {
            "begin": 1266,
            "end": 1348,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 1266,
            "end": 1348,
            "name": "tag",
            "source": 0,
            "value": "2"
          },
          { "begin": 1266, "end": 1348, "name": "JUMPDEST", "source": 0 },
          { "begin": 1266, "end": 1348, "name": "POP", "source": 0 },
          {
            "begin": 1173,
            "end": 2332,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "6"
          },
          { "begin": 1173, "end": 2332, "name": "JUMP", "source": 0 },
          { "begin": 88, "end": 205, "name": "tag", "source": 1, "value": "8" },
          { "begin": 88, "end": 205, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 197,
            "end": 198,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 194, "end": 195, "name": "DUP1", "source": 1 },
          { "begin": 187, "end": 199, "name": "REVERT", "source": 1 },
          {
            "begin": 334,
            "end": 411,
            "name": "tag",
            "source": 1,
            "value": "10"
          },
          { "begin": 334, "end": 411, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 371,
            "end": 378,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 400, "end": 405, "name": "DUP2", "source": 1 },
          { "begin": 389, "end": 405, "name": "SWAP1", "source": 1 },
          { "begin": 389, "end": 405, "name": "POP", "source": 1 },
          { "begin": 334, "end": 411, "name": "SWAP2", "source": 1 },
          { "begin": 334, "end": 411, "name": "SWAP1", "source": 1 },
          { "begin": 334, "end": 411, "name": "POP", "source": 1 },
          {
            "begin": 334,
            "end": 411,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 417,
            "end": 539,
            "name": "tag",
            "source": 1,
            "value": "11"
          },
          { "begin": 417, "end": 539, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 490,
            "end": 514,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "19"
          },
          { "begin": 508, "end": 513, "name": "DUP2", "source": 1 },
          {
            "begin": 490,
            "end": 514,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "10"
          },
          {
            "begin": 490,
            "end": 514,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 490,
            "end": 514,
            "name": "tag",
            "source": 1,
            "value": "19"
          },
          { "begin": 490, "end": 514, "name": "JUMPDEST", "source": 1 },
          { "begin": 483, "end": 488, "name": "DUP2", "source": 1 },
          { "begin": 480, "end": 515, "name": "EQ", "source": 1 },
          {
            "begin": 470,
            "end": 533,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "20"
          },
          { "begin": 470, "end": 533, "name": "JUMPI", "source": 1 },
          {
            "begin": 529,
            "end": 530,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 526, "end": 527, "name": "DUP1", "source": 1 },
          { "begin": 519, "end": 531, "name": "REVERT", "source": 1 },
          {
            "begin": 470,
            "end": 533,
            "name": "tag",
            "source": 1,
            "value": "20"
          },
          { "begin": 470, "end": 533, "name": "JUMPDEST", "source": 1 },
          { "begin": 417, "end": 539, "name": "POP", "source": 1 },
          {
            "begin": 417,
            "end": 539,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 545,
            "end": 688,
            "name": "tag",
            "source": 1,
            "value": "12"
          },
          { "begin": 545, "end": 688, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 602,
            "end": 607,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 633, "end": 639, "name": "DUP2", "source": 1 },
          { "begin": 627, "end": 640, "name": "MLOAD", "source": 1 },
          { "begin": 618, "end": 640, "name": "SWAP1", "source": 1 },
          { "begin": 618, "end": 640, "name": "POP", "source": 1 },
          {
            "begin": 649,
            "end": 682,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "22"
          },
          { "begin": 676, "end": 681, "name": "DUP2", "source": 1 },
          {
            "begin": 649,
            "end": 682,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "11"
          },
          {
            "begin": 649,
            "end": 682,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 649,
            "end": 682,
            "name": "tag",
            "source": 1,
            "value": "22"
          },
          { "begin": 649, "end": 682, "name": "JUMPDEST", "source": 1 },
          { "begin": 545, "end": 688, "name": "SWAP3", "source": 1 },
          { "begin": 545, "end": 688, "name": "SWAP2", "source": 1 },
          { "begin": 545, "end": 688, "name": "POP", "source": 1 },
          { "begin": 545, "end": 688, "name": "POP", "source": 1 },
          {
            "begin": 545,
            "end": 688,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 694,
            "end": 1045,
            "name": "tag",
            "source": 1,
            "value": "3"
          },
          { "begin": 694, "end": 1045, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 764,
            "end": 770,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          {
            "begin": 813,
            "end": 815,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 801, "end": 810, "name": "DUP3", "source": 1 },
          { "begin": 792, "end": 799, "name": "DUP5", "source": 1 },
          { "begin": 788, "end": 811, "name": "SUB", "source": 1 },
          { "begin": 784, "end": 816, "name": "SLT", "source": 1 },
          { "begin": 781, "end": 900, "name": "ISZERO", "source": 1 },
          {
            "begin": 781,
            "end": 900,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "24"
          },
          { "begin": 781, "end": 900, "name": "JUMPI", "source": 1 },
          {
            "begin": 819,
            "end": 898,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "25"
          },
          {
            "begin": 819,
            "end": 898,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "8"
          },
          {
            "begin": 819,
            "end": 898,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 819,
            "end": 898,
            "name": "tag",
            "source": 1,
            "value": "25"
          },
          { "begin": 819, "end": 898, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 781,
            "end": 900,
            "name": "tag",
            "source": 1,
            "value": "24"
          },
          { "begin": 781, "end": 900, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 939,
            "end": 940,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          {
            "begin": 964,
            "end": 1028,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "26"
          },
          { "begin": 1020, "end": 1027, "name": "DUP5", "source": 1 },
          { "begin": 1011, "end": 1017, "name": "DUP3", "source": 1 },
          { "begin": 1000, "end": 1009, "name": "DUP6", "source": 1 },
          { "begin": 996, "end": 1018, "name": "ADD", "source": 1 },
          {
            "begin": 964,
            "end": 1028,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "12"
          },
          {
            "begin": 964,
            "end": 1028,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 964,
            "end": 1028,
            "name": "tag",
            "source": 1,
            "value": "26"
          },
          { "begin": 964, "end": 1028, "name": "JUMPDEST", "source": 1 },
          { "begin": 954, "end": 1028, "name": "SWAP2", "source": 1 },
          { "begin": 954, "end": 1028, "name": "POP", "source": 1 },
          { "begin": 910, "end": 1038, "name": "POP", "source": 1 },
          { "begin": 694, "end": 1045, "name": "SWAP3", "source": 1 },
          { "begin": 694, "end": 1045, "name": "SWAP2", "source": 1 },
          { "begin": 694, "end": 1045, "name": "POP", "source": 1 },
          { "begin": 694, "end": 1045, "name": "POP", "source": 1 },
          {
            "begin": 694,
            "end": 1045,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 1173,
            "end": 2332,
            "name": "tag",
            "source": 0,
            "value": "6"
          },
          { "begin": 1173, "end": 2332, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 1173,
            "end": 2332,
            "name": "PUSH #[$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 1173, "end": 2332, "name": "DUP1", "source": 0 },
          {
            "begin": 1173,
            "end": 2332,
            "name": "PUSH [$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 1173,
            "end": 2332,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 1173, "end": 2332, "name": "CODECOPY", "source": 0 },
          {
            "begin": 1173,
            "end": 2332,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 1173, "end": 2332, "name": "RETURN", "source": 0 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a2646970667358221220f614311d8b55cf968278e5d6843c7081ffbdc2b721c0f5715cd2e2ea7c0172df64736f6c63430008110033",
            ".code": [
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 1173, "end": 2332, "name": "MSTORE", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              {
                "begin": 1173,
                "end": 2332,
                "name": "CALLDATASIZE",
                "source": 0
              },
              { "begin": 1173, "end": 2332, "name": "LT", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "1"
              },
              { "begin": 1173, "end": 2332, "name": "JUMPI", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 1173,
                "end": 2332,
                "name": "CALLDATALOAD",
                "source": 0
              },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "E0"
              },
              { "begin": 1173, "end": 2332, "name": "SHR", "source": 0 },
              { "begin": 1173, "end": 2332, "name": "DUP1", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "2FC54F73"
              },
              { "begin": 1173, "end": 2332, "name": "EQ", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "2"
              },
              { "begin": 1173, "end": 2332, "name": "JUMPI", "source": 0 },
              { "begin": 1173, "end": 2332, "name": "DUP1", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "3CCFD60B"
              },
              { "begin": 1173, "end": 2332, "name": "EQ", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "3"
              },
              { "begin": 1173, "end": 2332, "name": "JUMPI", "source": 0 },
              { "begin": 1173, "end": 2332, "name": "DUP1", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "40656963"
              },
              { "begin": 1173, "end": 2332, "name": "EQ", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "4"
              },
              { "begin": 1173, "end": 2332, "name": "JUMPI", "source": 0 },
              { "begin": 1173, "end": 2332, "name": "DUP1", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "42E94C90"
              },
              { "begin": 1173, "end": 2332, "name": "EQ", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "5"
              },
              { "begin": 1173, "end": 2332, "name": "JUMPI", "source": 0 },
              { "begin": 1173, "end": 2332, "name": "DUP1", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "BC55EFBF"
              },
              { "begin": 1173, "end": 2332, "name": "EQ", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "6"
              },
              { "begin": 1173, "end": 2332, "name": "JUMPI", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "tag",
                "source": 0,
                "value": "1"
              },
              { "begin": 1173, "end": 2332, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1173,
                "end": 2332,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1173, "end": 2332, "name": "DUP1", "source": 0 },
              { "begin": 1173, "end": 2332, "name": "REVERT", "source": 0 },
              {
                "begin": 2193,
                "end": 2330,
                "name": "tag",
                "source": 0,
                "value": "2"
              },
              { "begin": 2193, "end": 2330, "name": "JUMPDEST", "source": 0 },
              { "begin": 2193, "end": 2330, "name": "CALLVALUE", "source": 0 },
              { "begin": 2193, "end": 2330, "name": "DUP1", "source": 0 },
              { "begin": 2193, "end": 2330, "name": "ISZERO", "source": 0 },
              {
                "begin": 2193,
                "end": 2330,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "7"
              },
              { "begin": 2193, "end": 2330, "name": "JUMPI", "source": 0 },
              {
                "begin": 2193,
                "end": 2330,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 2193, "end": 2330, "name": "DUP1", "source": 0 },
              { "begin": 2193, "end": 2330, "name": "REVERT", "source": 0 },
              {
                "begin": 2193,
                "end": 2330,
                "name": "tag",
                "source": 0,
                "value": "7"
              },
              { "begin": 2193, "end": 2330, "name": "JUMPDEST", "source": 0 },
              { "begin": 2193, "end": 2330, "name": "POP", "source": 0 },
              {
                "begin": 2193,
                "end": 2330,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "8"
              },
              {
                "begin": 2193,
                "end": 2330,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "9"
              },
              {
                "begin": 2193,
                "end": 2330,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 2193,
                "end": 2330,
                "name": "tag",
                "source": 0,
                "value": "8"
              },
              { "begin": 2193, "end": 2330, "name": "JUMPDEST", "source": 0 },
              { "begin": 2193, "end": 2330, "name": "STOP", "source": 0 },
              {
                "begin": 1825,
                "end": 1856,
                "name": "tag",
                "source": 0,
                "value": "3"
              },
              { "begin": 1825, "end": 1856, "name": "JUMPDEST", "source": 0 },
              { "begin": 1825, "end": 1856, "name": "CALLVALUE", "source": 0 },
              { "begin": 1825, "end": 1856, "name": "DUP1", "source": 0 },
              { "begin": 1825, "end": 1856, "name": "ISZERO", "source": 0 },
              {
                "begin": 1825,
                "end": 1856,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "10"
              },
              { "begin": 1825, "end": 1856, "name": "JUMPI", "source": 0 },
              {
                "begin": 1825,
                "end": 1856,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1825, "end": 1856, "name": "DUP1", "source": 0 },
              { "begin": 1825, "end": 1856, "name": "REVERT", "source": 0 },
              {
                "begin": 1825,
                "end": 1856,
                "name": "tag",
                "source": 0,
                "value": "10"
              },
              { "begin": 1825, "end": 1856, "name": "JUMPDEST", "source": 0 },
              { "begin": 1825, "end": 1856, "name": "POP", "source": 0 },
              {
                "begin": 1825,
                "end": 1856,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "11"
              },
              {
                "begin": 1825,
                "end": 1856,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "12"
              },
              {
                "begin": 1825,
                "end": 1856,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1825,
                "end": 1856,
                "name": "tag",
                "source": 0,
                "value": "11"
              },
              { "begin": 1825, "end": 1856, "name": "JUMPDEST", "source": 0 },
              { "begin": 1825, "end": 1856, "name": "STOP", "source": 0 },
              {
                "begin": 1530,
                "end": 1580,
                "name": "tag",
                "source": 0,
                "value": "4"
              },
              { "begin": 1530, "end": 1580, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1530,
                "end": 1580,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "13"
              },
              {
                "begin": 1530,
                "end": 1580,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              { "begin": 1530, "end": 1580, "name": "DUP1", "source": 0 },
              {
                "begin": 1530,
                "end": 1580,
                "name": "CALLDATASIZE",
                "source": 0
              },
              { "begin": 1530, "end": 1580, "name": "SUB", "source": 0 },
              { "begin": 1530, "end": 1580, "name": "DUP2", "source": 0 },
              { "begin": 1530, "end": 1580, "name": "ADD", "source": 0 },
              { "begin": 1530, "end": 1580, "name": "SWAP1", "source": 0 },
              {
                "begin": 1530,
                "end": 1580,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "14"
              },
              { "begin": 1530, "end": 1580, "name": "SWAP2", "source": 0 },
              { "begin": 1530, "end": 1580, "name": "SWAP1", "source": 0 },
              {
                "begin": 1530,
                "end": 1580,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "15"
              },
              {
                "begin": 1530,
                "end": 1580,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1530,
                "end": 1580,
                "name": "tag",
                "source": 0,
                "value": "14"
              },
              { "begin": 1530, "end": 1580, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1530,
                "end": 1580,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "16"
              },
              {
                "begin": 1530,
                "end": 1580,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1530,
                "end": 1580,
                "name": "tag",
                "source": 0,
                "value": "13"
              },
              { "begin": 1530, "end": 1580, "name": "JUMPDEST", "source": 0 },
              { "begin": 1530, "end": 1580, "name": "STOP", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "tag",
                "source": 0,
                "value": "5"
              },
              { "begin": 1206, "end": 1259, "name": "JUMPDEST", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "CALLVALUE", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DUP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "ISZERO", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "17"
              },
              { "begin": 1206, "end": 1259, "name": "JUMPI", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1206, "end": 1259, "name": "DUP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "REVERT", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "tag",
                "source": 0,
                "value": "17"
              },
              { "begin": 1206, "end": 1259, "name": "JUMPDEST", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "POP", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "18"
              },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              { "begin": 1206, "end": 1259, "name": "DUP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "CALLDATASIZE",
                "source": 0
              },
              { "begin": 1206, "end": 1259, "name": "SUB", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DUP2", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "ADD", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "19"
              },
              { "begin": 1206, "end": 1259, "name": "SWAP2", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 1206,
                "end": 1259,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1206,
                "end": 1259,
                "name": "tag",
                "source": 0,
                "value": "19"
              },
              { "begin": 1206, "end": 1259, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "21"
              },
              {
                "begin": 1206,
                "end": 1259,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1206,
                "end": 1259,
                "name": "tag",
                "source": 0,
                "value": "18"
              },
              { "begin": 1206, "end": 1259, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 1206, "end": 1259, "name": "MLOAD", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "22"
              },
              { "begin": 1206, "end": 1259, "name": "SWAP3", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP2", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "23"
              },
              {
                "begin": 1206,
                "end": 1259,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1206,
                "end": 1259,
                "name": "tag",
                "source": 0,
                "value": "22"
              },
              { "begin": 1206, "end": 1259, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 1206, "end": 1259, "name": "MLOAD", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DUP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP2", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SUB", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "RETURN", "source": 0 },
              {
                "begin": 1687,
                "end": 1720,
                "name": "tag",
                "source": 0,
                "value": "6"
              },
              { "begin": 1687, "end": 1720, "name": "JUMPDEST", "source": 0 },
              { "begin": 1687, "end": 1720, "name": "CALLVALUE", "source": 0 },
              { "begin": 1687, "end": 1720, "name": "DUP1", "source": 0 },
              { "begin": 1687, "end": 1720, "name": "ISZERO", "source": 0 },
              {
                "begin": 1687,
                "end": 1720,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "24"
              },
              { "begin": 1687, "end": 1720, "name": "JUMPI", "source": 0 },
              {
                "begin": 1687,
                "end": 1720,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1687, "end": 1720, "name": "DUP1", "source": 0 },
              { "begin": 1687, "end": 1720, "name": "REVERT", "source": 0 },
              {
                "begin": 1687,
                "end": 1720,
                "name": "tag",
                "source": 0,
                "value": "24"
              },
              { "begin": 1687, "end": 1720, "name": "JUMPDEST", "source": 0 },
              { "begin": 1687, "end": 1720, "name": "POP", "source": 0 },
              {
                "begin": 1687,
                "end": 1720,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "25"
              },
              {
                "begin": 1687,
                "end": 1720,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "26"
              },
              {
                "begin": 1687,
                "end": 1720,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1687,
                "end": 1720,
                "name": "tag",
                "source": 0,
                "value": "25"
              },
              { "begin": 1687, "end": 1720, "name": "JUMPDEST", "source": 0 },
              { "begin": 1687, "end": 1720, "name": "STOP", "source": 0 },
              {
                "begin": 2193,
                "end": 2330,
                "name": "tag",
                "source": 0,
                "value": "9"
              },
              { "begin": 2193, "end": 2330, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 2193,
                "end": 2330,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1825,
                "end": 1856,
                "name": "tag",
                "source": 0,
                "value": "12"
              },
              { "begin": 1825, "end": 1856, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1825,
                "end": 1856,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1530,
                "end": 1580,
                "name": "tag",
                "source": 0,
                "value": "16"
              },
              { "begin": 1530, "end": 1580, "name": "JUMPDEST", "source": 0 },
              { "begin": 1530, "end": 1580, "name": "POP", "source": 0 },
              {
                "begin": 1530,
                "end": 1580,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1206,
                "end": 1259,
                "name": "tag",
                "source": 0,
                "value": "21"
              },
              { "begin": 1206, "end": 1259, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              { "begin": 1206, "end": 1259, "name": "MSTORE", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DUP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1206, "end": 1259, "name": "MSTORE", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1206, "end": 1259, "name": "KECCAK256", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1206, "end": 1259, "name": "SWAP2", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "POP", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "POP", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DUP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1206, "end": 1259, "name": "ADD", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SLOAD", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DUP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "1"
              },
              { "begin": 1206, "end": 1259, "name": "ADD", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SLOAD", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "100"
              },
              { "begin": 1206, "end": 1259, "name": "EXP", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DIV", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "name": "PUSH",
                "source": 0,
                "value": "FF"
              },
              { "begin": 1206, "end": 1259, "name": "AND", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "SWAP1", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "POP", "source": 0 },
              { "begin": 1206, "end": 1259, "name": "DUP3", "source": 0 },
              {
                "begin": 1206,
                "end": 1259,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1687,
                "end": 1720,
                "name": "tag",
                "source": 0,
                "value": "26"
              },
              { "begin": 1687, "end": 1720, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1687,
                "end": 1720,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 88,
                "end": 205,
                "name": "tag",
                "source": 1,
                "value": "32"
              },
              { "begin": 88, "end": 205, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 197,
                "end": 198,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 194, "end": 195, "name": "DUP1", "source": 1 },
              { "begin": 187, "end": 199, "name": "REVERT", "source": 1 },
              {
                "begin": 334,
                "end": 424,
                "name": "tag",
                "source": 1,
                "value": "34"
              },
              { "begin": 334, "end": 424, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 368,
                "end": 375,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 411, "end": 416, "name": "DUP2", "source": 1 },
              { "begin": 404, "end": 417, "name": "ISZERO", "source": 1 },
              { "begin": 397, "end": 418, "name": "ISZERO", "source": 1 },
              { "begin": 386, "end": 418, "name": "SWAP1", "source": 1 },
              { "begin": 386, "end": 418, "name": "POP", "source": 1 },
              { "begin": 334, "end": 424, "name": "SWAP2", "source": 1 },
              { "begin": 334, "end": 424, "name": "SWAP1", "source": 1 },
              { "begin": 334, "end": 424, "name": "POP", "source": 1 },
              {
                "begin": 334,
                "end": 424,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 430,
                "end": 546,
                "name": "tag",
                "source": 1,
                "value": "35"
              },
              { "begin": 430, "end": 546, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 500,
                "end": 521,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "50"
              },
              { "begin": 515, "end": 520, "name": "DUP2", "source": 1 },
              {
                "begin": 500,
                "end": 521,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "34"
              },
              {
                "begin": 500,
                "end": 521,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 500,
                "end": 521,
                "name": "tag",
                "source": 1,
                "value": "50"
              },
              { "begin": 500, "end": 521, "name": "JUMPDEST", "source": 1 },
              { "begin": 493, "end": 498, "name": "DUP2", "source": 1 },
              { "begin": 490, "end": 522, "name": "EQ", "source": 1 },
              {
                "begin": 480,
                "end": 540,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "51"
              },
              { "begin": 480, "end": 540, "name": "JUMPI", "source": 1 },
              {
                "begin": 536,
                "end": 537,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 533, "end": 534, "name": "DUP1", "source": 1 },
              { "begin": 526, "end": 538, "name": "REVERT", "source": 1 },
              {
                "begin": 480,
                "end": 540,
                "name": "tag",
                "source": 1,
                "value": "51"
              },
              { "begin": 480, "end": 540, "name": "JUMPDEST", "source": 1 },
              { "begin": 430, "end": 546, "name": "POP", "source": 1 },
              {
                "begin": 430,
                "end": 546,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 552,
                "end": 685,
                "name": "tag",
                "source": 1,
                "value": "36"
              },
              { "begin": 552, "end": 685, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 595,
                "end": 600,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 633, "end": 639, "name": "DUP2", "source": 1 },
              { "begin": 620, "end": 640, "name": "CALLDATALOAD", "source": 1 },
              { "begin": 611, "end": 640, "name": "SWAP1", "source": 1 },
              { "begin": 611, "end": 640, "name": "POP", "source": 1 },
              {
                "begin": 649,
                "end": 679,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "53"
              },
              { "begin": 673, "end": 678, "name": "DUP2", "source": 1 },
              {
                "begin": 649,
                "end": 679,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "35"
              },
              {
                "begin": 649,
                "end": 679,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 649,
                "end": 679,
                "name": "tag",
                "source": 1,
                "value": "53"
              },
              { "begin": 649, "end": 679, "name": "JUMPDEST", "source": 1 },
              { "begin": 552, "end": 685, "name": "SWAP3", "source": 1 },
              { "begin": 552, "end": 685, "name": "SWAP2", "source": 1 },
              { "begin": 552, "end": 685, "name": "POP", "source": 1 },
              { "begin": 552, "end": 685, "name": "POP", "source": 1 },
              {
                "begin": 552,
                "end": 685,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 691,
                "end": 1014,
                "name": "tag",
                "source": 1,
                "value": "15"
              },
              { "begin": 691, "end": 1014, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 747,
                "end": 753,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 796,
                "end": 798,
                "name": "PUSH",
                "source": 1,
                "value": "20"
              },
              { "begin": 784, "end": 793, "name": "DUP3", "source": 1 },
              { "begin": 775, "end": 782, "name": "DUP5", "source": 1 },
              { "begin": 771, "end": 794, "name": "SUB", "source": 1 },
              { "begin": 767, "end": 799, "name": "SLT", "source": 1 },
              { "begin": 764, "end": 883, "name": "ISZERO", "source": 1 },
              {
                "begin": 764,
                "end": 883,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "55"
              },
              { "begin": 764, "end": 883, "name": "JUMPI", "source": 1 },
              {
                "begin": 802,
                "end": 881,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "56"
              },
              {
                "begin": 802,
                "end": 881,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "32"
              },
              {
                "begin": 802,
                "end": 881,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 802,
                "end": 881,
                "name": "tag",
                "source": 1,
                "value": "56"
              },
              { "begin": 802, "end": 881, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 764,
                "end": 883,
                "name": "tag",
                "source": 1,
                "value": "55"
              },
              { "begin": 764, "end": 883, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 922,
                "end": 923,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 947,
                "end": 997,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "57"
              },
              { "begin": 989, "end": 996, "name": "DUP5", "source": 1 },
              { "begin": 980, "end": 986, "name": "DUP3", "source": 1 },
              { "begin": 969, "end": 978, "name": "DUP6", "source": 1 },
              { "begin": 965, "end": 987, "name": "ADD", "source": 1 },
              {
                "begin": 947,
                "end": 997,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "36"
              },
              {
                "begin": 947,
                "end": 997,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 947,
                "end": 997,
                "name": "tag",
                "source": 1,
                "value": "57"
              },
              { "begin": 947, "end": 997, "name": "JUMPDEST", "source": 1 },
              { "begin": 937, "end": 997, "name": "SWAP2", "source": 1 },
              { "begin": 937, "end": 997, "name": "POP", "source": 1 },
              { "begin": 893, "end": 1007, "name": "POP", "source": 1 },
              { "begin": 691, "end": 1014, "name": "SWAP3", "source": 1 },
              { "begin": 691, "end": 1014, "name": "SWAP2", "source": 1 },
              { "begin": 691, "end": 1014, "name": "POP", "source": 1 },
              { "begin": 691, "end": 1014, "name": "POP", "source": 1 },
              {
                "begin": 691,
                "end": 1014,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1020,
                "end": 1146,
                "name": "tag",
                "source": 1,
                "value": "37"
              },
              { "begin": 1020, "end": 1146, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1057,
                "end": 1064,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 1097,
                "end": 1139,
                "name": "PUSH",
                "source": 1,
                "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
              },
              { "begin": 1090, "end": 1095, "name": "DUP3", "source": 1 },
              { "begin": 1086, "end": 1140, "name": "AND", "source": 1 },
              { "begin": 1075, "end": 1140, "name": "SWAP1", "source": 1 },
              { "begin": 1075, "end": 1140, "name": "POP", "source": 1 },
              { "begin": 1020, "end": 1146, "name": "SWAP2", "source": 1 },
              { "begin": 1020, "end": 1146, "name": "SWAP1", "source": 1 },
              { "begin": 1020, "end": 1146, "name": "POP", "source": 1 },
              {
                "begin": 1020,
                "end": 1146,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1152,
                "end": 1248,
                "name": "tag",
                "source": 1,
                "value": "38"
              },
              { "begin": 1152, "end": 1248, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1189,
                "end": 1196,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 1218,
                "end": 1242,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "60"
              },
              { "begin": 1236, "end": 1241, "name": "DUP3", "source": 1 },
              {
                "begin": 1218,
                "end": 1242,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "37"
              },
              {
                "begin": 1218,
                "end": 1242,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1218,
                "end": 1242,
                "name": "tag",
                "source": 1,
                "value": "60"
              },
              { "begin": 1218, "end": 1242, "name": "JUMPDEST", "source": 1 },
              { "begin": 1207, "end": 1242, "name": "SWAP1", "source": 1 },
              { "begin": 1207, "end": 1242, "name": "POP", "source": 1 },
              { "begin": 1152, "end": 1248, "name": "SWAP2", "source": 1 },
              { "begin": 1152, "end": 1248, "name": "SWAP1", "source": 1 },
              { "begin": 1152, "end": 1248, "name": "POP", "source": 1 },
              {
                "begin": 1152,
                "end": 1248,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1254,
                "end": 1376,
                "name": "tag",
                "source": 1,
                "value": "39"
              },
              { "begin": 1254, "end": 1376, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1327,
                "end": 1351,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "62"
              },
              { "begin": 1345, "end": 1350, "name": "DUP2", "source": 1 },
              {
                "begin": 1327,
                "end": 1351,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "38"
              },
              {
                "begin": 1327,
                "end": 1351,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1327,
                "end": 1351,
                "name": "tag",
                "source": 1,
                "value": "62"
              },
              { "begin": 1327, "end": 1351, "name": "JUMPDEST", "source": 1 },
              { "begin": 1320, "end": 1325, "name": "DUP2", "source": 1 },
              { "begin": 1317, "end": 1352, "name": "EQ", "source": 1 },
              {
                "begin": 1307,
                "end": 1370,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "63"
              },
              { "begin": 1307, "end": 1370, "name": "JUMPI", "source": 1 },
              {
                "begin": 1366,
                "end": 1367,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 1363, "end": 1364, "name": "DUP1", "source": 1 },
              { "begin": 1356, "end": 1368, "name": "REVERT", "source": 1 },
              {
                "begin": 1307,
                "end": 1370,
                "name": "tag",
                "source": 1,
                "value": "63"
              },
              { "begin": 1307, "end": 1370, "name": "JUMPDEST", "source": 1 },
              { "begin": 1254, "end": 1376, "name": "POP", "source": 1 },
              {
                "begin": 1254,
                "end": 1376,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1382,
                "end": 1521,
                "name": "tag",
                "source": 1,
                "value": "40"
              },
              { "begin": 1382, "end": 1521, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1428,
                "end": 1433,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 1466, "end": 1472, "name": "DUP2", "source": 1 },
              {
                "begin": 1453,
                "end": 1473,
                "name": "CALLDATALOAD",
                "source": 1
              },
              { "begin": 1444, "end": 1473, "name": "SWAP1", "source": 1 },
              { "begin": 1444, "end": 1473, "name": "POP", "source": 1 },
              {
                "begin": 1482,
                "end": 1515,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "65"
              },
              { "begin": 1509, "end": 1514, "name": "DUP2", "source": 1 },
              {
                "begin": 1482,
                "end": 1515,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "39"
              },
              {
                "begin": 1482,
                "end": 1515,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1482,
                "end": 1515,
                "name": "tag",
                "source": 1,
                "value": "65"
              },
              { "begin": 1482, "end": 1515, "name": "JUMPDEST", "source": 1 },
              { "begin": 1382, "end": 1521, "name": "SWAP3", "source": 1 },
              { "begin": 1382, "end": 1521, "name": "SWAP2", "source": 1 },
              { "begin": 1382, "end": 1521, "name": "POP", "source": 1 },
              { "begin": 1382, "end": 1521, "name": "POP", "source": 1 },
              {
                "begin": 1382,
                "end": 1521,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1527,
                "end": 1856,
                "name": "tag",
                "source": 1,
                "value": "20"
              },
              { "begin": 1527, "end": 1856, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1586,
                "end": 1592,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 1635,
                "end": 1637,
                "name": "PUSH",
                "source": 1,
                "value": "20"
              },
              { "begin": 1623, "end": 1632, "name": "DUP3", "source": 1 },
              { "begin": 1614, "end": 1621, "name": "DUP5", "source": 1 },
              { "begin": 1610, "end": 1633, "name": "SUB", "source": 1 },
              { "begin": 1606, "end": 1638, "name": "SLT", "source": 1 },
              { "begin": 1603, "end": 1722, "name": "ISZERO", "source": 1 },
              {
                "begin": 1603,
                "end": 1722,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "67"
              },
              { "begin": 1603, "end": 1722, "name": "JUMPI", "source": 1 },
              {
                "begin": 1641,
                "end": 1720,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "68"
              },
              {
                "begin": 1641,
                "end": 1720,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "32"
              },
              {
                "begin": 1641,
                "end": 1720,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1641,
                "end": 1720,
                "name": "tag",
                "source": 1,
                "value": "68"
              },
              { "begin": 1641, "end": 1720, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1603,
                "end": 1722,
                "name": "tag",
                "source": 1,
                "value": "67"
              },
              { "begin": 1603, "end": 1722, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1761,
                "end": 1762,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 1786,
                "end": 1839,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "69"
              },
              { "begin": 1831, "end": 1838, "name": "DUP5", "source": 1 },
              { "begin": 1822, "end": 1828, "name": "DUP3", "source": 1 },
              { "begin": 1811, "end": 1820, "name": "DUP6", "source": 1 },
              { "begin": 1807, "end": 1829, "name": "ADD", "source": 1 },
              {
                "begin": 1786,
                "end": 1839,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "40"
              },
              {
                "begin": 1786,
                "end": 1839,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1786,
                "end": 1839,
                "name": "tag",
                "source": 1,
                "value": "69"
              },
              { "begin": 1786, "end": 1839, "name": "JUMPDEST", "source": 1 },
              { "begin": 1776, "end": 1839, "name": "SWAP2", "source": 1 },
              { "begin": 1776, "end": 1839, "name": "POP", "source": 1 },
              { "begin": 1732, "end": 1849, "name": "POP", "source": 1 },
              { "begin": 1527, "end": 1856, "name": "SWAP3", "source": 1 },
              { "begin": 1527, "end": 1856, "name": "SWAP2", "source": 1 },
              { "begin": 1527, "end": 1856, "name": "POP", "source": 1 },
              { "begin": 1527, "end": 1856, "name": "POP", "source": 1 },
              {
                "begin": 1527,
                "end": 1856,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1862,
                "end": 1939,
                "name": "tag",
                "source": 1,
                "value": "41"
              },
              { "begin": 1862, "end": 1939, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 1899,
                "end": 1906,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 1928, "end": 1933, "name": "DUP2", "source": 1 },
              { "begin": 1917, "end": 1933, "name": "SWAP1", "source": 1 },
              { "begin": 1917, "end": 1933, "name": "POP", "source": 1 },
              { "begin": 1862, "end": 1939, "name": "SWAP2", "source": 1 },
              { "begin": 1862, "end": 1939, "name": "SWAP1", "source": 1 },
              { "begin": 1862, "end": 1939, "name": "POP", "source": 1 },
              {
                "begin": 1862,
                "end": 1939,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 1945,
                "end": 2063,
                "name": "tag",
                "source": 1,
                "value": "42"
              },
              { "begin": 1945, "end": 2063, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 2032,
                "end": 2056,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "72"
              },
              { "begin": 2050, "end": 2055, "name": "DUP2", "source": 1 },
              {
                "begin": 2032,
                "end": 2056,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "41"
              },
              {
                "begin": 2032,
                "end": 2056,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 2032,
                "end": 2056,
                "name": "tag",
                "source": 1,
                "value": "72"
              },
              { "begin": 2032, "end": 2056, "name": "JUMPDEST", "source": 1 },
              { "begin": 2027, "end": 2030, "name": "DUP3", "source": 1 },
              { "begin": 2020, "end": 2057, "name": "MSTORE", "source": 1 },
              { "begin": 1945, "end": 2063, "name": "POP", "source": 1 },
              { "begin": 1945, "end": 2063, "name": "POP", "source": 1 },
              {
                "begin": 1945,
                "end": 2063,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 2069,
                "end": 2178,
                "name": "tag",
                "source": 1,
                "value": "43"
              },
              { "begin": 2069, "end": 2178, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 2150,
                "end": 2171,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "74"
              },
              { "begin": 2165, "end": 2170, "name": "DUP2", "source": 1 },
              {
                "begin": 2150,
                "end": 2171,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "34"
              },
              {
                "begin": 2150,
                "end": 2171,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 2150,
                "end": 2171,
                "name": "tag",
                "source": 1,
                "value": "74"
              },
              { "begin": 2150, "end": 2171, "name": "JUMPDEST", "source": 1 },
              { "begin": 2145, "end": 2148, "name": "DUP3", "source": 1 },
              { "begin": 2138, "end": 2172, "name": "MSTORE", "source": 1 },
              { "begin": 2069, "end": 2178, "name": "POP", "source": 1 },
              { "begin": 2069, "end": 2178, "name": "POP", "source": 1 },
              {
                "begin": 2069,
                "end": 2178,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 2184,
                "end": 2504,
                "name": "tag",
                "source": 1,
                "value": "23"
              },
              { "begin": 2184, "end": 2504, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 2299,
                "end": 2303,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              {
                "begin": 2337,
                "end": 2339,
                "name": "PUSH",
                "source": 1,
                "value": "40"
              },
              { "begin": 2326, "end": 2335, "name": "DUP3", "source": 1 },
              { "begin": 2322, "end": 2340, "name": "ADD", "source": 1 },
              { "begin": 2314, "end": 2340, "name": "SWAP1", "source": 1 },
              { "begin": 2314, "end": 2340, "name": "POP", "source": 1 },
              {
                "begin": 2350,
                "end": 2421,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "76"
              },
              {
                "begin": 2418,
                "end": 2419,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 2407, "end": 2416, "name": "DUP4", "source": 1 },
              { "begin": 2403, "end": 2420, "name": "ADD", "source": 1 },
              { "begin": 2394, "end": 2400, "name": "DUP6", "source": 1 },
              {
                "begin": 2350,
                "end": 2421,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "42"
              },
              {
                "begin": 2350,
                "end": 2421,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 2350,
                "end": 2421,
                "name": "tag",
                "source": 1,
                "value": "76"
              },
              { "begin": 2350, "end": 2421, "name": "JUMPDEST", "source": 1 },
              {
                "begin": 2431,
                "end": 2497,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "77"
              },
              {
                "begin": 2493,
                "end": 2495,
                "name": "PUSH",
                "source": 1,
                "value": "20"
              },
              { "begin": 2482, "end": 2491, "name": "DUP4", "source": 1 },
              { "begin": 2478, "end": 2496, "name": "ADD", "source": 1 },
              { "begin": 2469, "end": 2475, "name": "DUP5", "source": 1 },
              {
                "begin": 2431,
                "end": 2497,
                "name": "PUSH [tag]",
                "source": 1,
                "value": "43"
              },
              {
                "begin": 2431,
                "end": 2497,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 1
              },
              {
                "begin": 2431,
                "end": 2497,
                "name": "tag",
                "source": 1,
                "value": "77"
              },
              { "begin": 2431, "end": 2497, "name": "JUMPDEST", "source": 1 },
              { "begin": 2184, "end": 2504, "name": "SWAP4", "source": 1 },
              { "begin": 2184, "end": 2504, "name": "SWAP3", "source": 1 },
              { "begin": 2184, "end": 2504, "name": "POP", "source": 1 },
              { "begin": 2184, "end": 2504, "name": "POP", "source": 1 },
              { "begin": 2184, "end": 2504, "name": "POP", "source": 1 },
              {
                "begin": 2184,
                "end": 2504,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 1
              }
            ]
          }
        },
        "sourceList": ["main.sol", "#utility.yul"]
      },
      "methodIdentifiers": {
        "changeVote()": "bc55efbf",
        "contribute(bool)": "40656963",
        "contributions(address)": "42e94c90",
        "withdraw()": "3ccfd60b",
        "withdrawEarly()": "2fc54f73"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalHash\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"changeVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEarly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeVote()\":{\"custom:selector\":\"bc55efbf\",\"details\":\"Change your currently registered vote in the contract\"},\"contribute(bool)\":{\"custom:selector\":\"40656963\",\"details\":\"Contribute funds to the dao and specify your initial vote\",\"params\":{\"vote\":\"Whether you support the referendum (true).\"}},\"withdraw()\":{\"custom:selector\":\"3ccfd60b\",\"details\":\"Withdraw your tokens after the referendum finishes.\"},\"withdrawEarly()\":{\"custom:selector\":\"2fc54f73\",\"details\":\"Allows a user who is unhappy with the status of the internal party vote to withdraw tokens. However there is a 10% penalty for being fickle. The 10% of tokens that remain in the DAO are jsut locked here forever. A real-life impl could explicitly burn or redistribute.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Example contract to use and test the democracy interface. A simple DAO where you can contribute eth and vote on a referendum. The DAO holds its own internal vote on a pallet-democracy style referendum, and votes all DAO tokens accordingly. Contributors who lock tokens in the contract are sacrificing the ability to otherwise use the tokens (opportunity cost) as well as sacrificing their freedom to vote with those tokens. They are accepting these costs for the potential of gaining more overall political influence by means of non-member citizens delegating their own votes to the party. This example contract is meant to explore the democracy interface more than innovate in terms of elections and political parties, so there are a few limitations. 1. This DAO is for a _single_ referendum. 2. It uses a simple majority rules mechanism. Definitely not production ready... 3. Early withdrawal penalties are just locked in the contract forever. 4. We just use a simple mapping to store everything. A better idea might be fungible dao tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"PoliticalPartyDao\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0xefd7c8de10d4a8084381d40140b27cd1d64d3785c972295d7f6f817e9ec377c5\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://94f62f020ec17c7515abfe6e6f7983f86b7aeec9c74076df7ac3b72b05c5c10d\",\"dweb:/ipfs/QmSbZZ9o5cRY7dNLcWrUZHPjBBWXFHTzmSFe9yoGrZya1h\"]}},\"version\":1}",
    "storageLayout": {
      "storage": [
        {
          "astId": 7,
          "contract": "main.sol:PoliticalPartyDao",
          "label": "contributions",
          "offset": 0,
          "slot": "0",
          "type": "t_mapping(t_address,t_struct(Contribution)41_storage)"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_mapping(t_address,t_struct(Contribution)41_storage)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => struct Contribution)",
          "numberOfBytes": "32",
          "value": "t_struct(Contribution)41_storage"
        },
        "t_struct(Contribution)41_storage": {
          "encoding": "inplace",
          "label": "struct Contribution",
          "members": [
            {
              "astId": 38,
              "contract": "main.sol:PoliticalPartyDao",
              "label": "amount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256"
            },
            {
              "astId": 40,
              "contract": "main.sol:PoliticalPartyDao",
              "label": "vote",
              "offset": 0,
              "slot": "1",
              "type": "t_bool"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "notice": "Example contract to use and test the democracy interface. A simple DAO where you can contribute eth and vote on a referendum. The DAO holds its own internal vote on a pallet-democracy style referendum, and votes all DAO tokens accordingly. Contributors who lock tokens in the contract are sacrificing the ability to otherwise use the tokens (opportunity cost) as well as sacrificing their freedom to vote with those tokens. They are accepting these costs for the potential of gaining more overall political influence by means of non-member citizens delegating their own votes to the party. This example contract is meant to explore the democracy interface more than innovate in terms of elections and political parties, so there are a few limitations. 1. This DAO is for a _single_ referendum. 2. It uses a simple majority rules mechanism. Definitely not production ready... 3. Early withdrawal penalties are just locked in the contract forever. 4. We just use a simple mapping to store everything. A better idea might be fungible dao tokens",
      "version": 1
    }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// Example contract to use and test the democracy interface.\n///\n/// A simple DAO where you can contribute eth and vote on a referendum. The DAO holds its own\n/// internal vote on a pallet-democracy style referendum, and votes all DAO tokens accordingly.\n///\n/// Contributors who lock tokens in the contract are sacrificing the ability to otherwise\n/// use the tokens (opportunity cost) as well as sacrificing their freedom to vote with those tokens.\n/// They are accepting these costs for the potential of gaining more overall political influence by\n/// means of non-member citizens delegating their own votes to the party.\n///\n/// This example contract is meant to explore the democracy interface more than innovate in terms of\n/// elections and political parties, so there are a few limitations.\n/// 1. This DAO is for a _single_ referendum.\n/// 2. It uses a simple majority rules mechanism. Definitely not production ready...\n/// 3. Early withdrawal penalties are just locked in the contract forever.\n/// 4. We just use a simple mapping to store everything. A better idea might be fungible dao tokens\ncontract PoliticalPartyDao {\n    mapping(address => Contribution) public contributions;\n\n    constructor(uint256 proposalHash) {\n        // Make sure the proposal exists\n    }\n\n    /// @dev Contribute funds to the dao and specify your initial vote\n    ///\n    /// @param vote Whether you support the referendum (true).\n    /// @custom:selector 40656963\n    function contribute(bool vote) external payable {}\n\n    /// @dev Change your currently registered vote in the contract\n    /// @custom:selector bc55efbf\n    function changeVote() external {}\n\n    /// @dev Withdraw your tokens after the referendum finishes.\n    /// @custom:selector 3ccfd60b\n    function withdraw() external {}\n\n    /// @dev Allows a user who is unhappy with the status of the internal party vote to withdraw tokens.\n    /// However there is a 10% penalty for being fickle. The 10% of tokens that remain in the DAO\n    /// are jsut locked here forever. A real-life impl could explicitly burn or redistribute.\n    /// @custom:selector 2fc54f73\n    function withdrawEarly() external {\n        // Does this actually help explore the democracy interface? If not, don't implement it.\n    }\n}\n\n/// Information about a contribution to the DAO including the amount contributed and the vote.\nstruct Contribution {\n    uint256 amount;\n    bool vote;\n}\n"
}
