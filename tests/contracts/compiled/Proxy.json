{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "inputs": [
          { "internalType": "address", "name": "delegate", "type": "address" },
          {
            "internalType": "enum Proxy.ProxyType",
            "name": "proxyType",
            "type": "uint8"
          },
          { "internalType": "uint32", "name": "delay", "type": "uint32" }
        ],
        "name": "addProxy",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "real", "type": "address" },
          { "internalType": "address", "name": "delegate", "type": "address" },
          {
            "internalType": "enum Proxy.ProxyType",
            "name": "proxyType",
            "type": "uint8"
          },
          { "internalType": "uint32", "name": "delay", "type": "uint32" }
        ],
        "name": "isProxy",
        "outputs": [
          { "internalType": "bool", "name": "exists", "type": "bool" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "real", "type": "address" },
          { "internalType": "address", "name": "callTo", "type": "address" },
          { "internalType": "bytes", "name": "callData", "type": "bytes" }
        ],
        "name": "proxy",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "real", "type": "address" },
          {
            "internalType": "enum Proxy.ProxyType",
            "name": "forceProxyType",
            "type": "uint8"
          },
          { "internalType": "address", "name": "callTo", "type": "address" },
          { "internalType": "bytes", "name": "callData", "type": "bytes" }
        ],
        "name": "proxy_force_type",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "removeProxies",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "delegate", "type": "address" },
          {
            "internalType": "enum Proxy.ProxyType",
            "name": "proxyType",
            "type": "uint8"
          },
          { "internalType": "uint32", "name": "delay", "type": "uint32" }
        ],
        "name": "removeProxy",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "author": "The Moonbeam Team",
      "custom:address": "0x000000000000000000000000000000000000080b",
      "kind": "dev",
      "methods": {
        "addProxy(address,uint8,uint32)": {
          "custom:selector": "74a34dd3",
          "details": "Register a proxy account for the sender that is able to make calls on its behalf",
          "params": {
            "delay": "The announcement period required of the initial proxy, will generally be zero",
            "delegate": "The account that the caller would like to make a proxy",
            "proxyType": "The permissions allowed for this proxy account"
          }
        },
        "isProxy(address,address,uint8,uint32)": {
          "custom:selector": "e26d38ed",
          "details": "Checks if the caller has an account proxied with a given proxy type",
          "params": {
            "delay": "The announcement period required of the initial proxy, will generally be zero",
            "delegate": "The account that the caller has maybe proxied",
            "proxyType": "The permissions allowed for the proxy",
            "real": "The real account that maybe has a proxy"
          },
          "returns": { "exists": "True if a proxy exists, False otherwise" }
        },
        "proxy(address,address,bytes)": {
          "custom:selector": "0d3cff86",
          "details": "Dispatch the given subcall (`call_to`, `call_data`) from an account that the sender is authorised for through `add_proxy`",
          "params": {
            "callData": "Data of the call to be made by the `real` account",
            "callTo": "Recipient of the call to be made by the `real` account",
            "real": "The account that the proxy will make a call on behalf of"
          }
        },
        "proxy_force_type(address,uint8,address,bytes)": {
          "custom:selector": "4a36b2cd",
          "details": "Dispatch the given subcall (`call_to`, `call_data`) from an account that the sender is authorised for through `add_proxy`",
          "params": {
            "callData": "Data of the call to be made by the `real` account",
            "callTo": "Recipient of the call to be made by the `real` account",
            "forceProxyType": "Specify the exact proxy type to be used and checked for this call",
            "real": "The account that the proxy will make a call on behalf of"
          }
        },
        "removeProxies()": {
          "custom:selector": "14a5b5fa",
          "details": "Unregister all proxy accounts for the sender"
        },
        "removeProxy(address,uint8,uint32)": {
          "custom:selector": "fef3f708",
          "details": "Register a proxy account for the sender that is able to make calls on its behalf",
          "params": {
            "delay": "The announcement period required of the initial proxy, will generally be zero",
            "delegate": "The account that the caller would like to remove as a proxy",
            "proxyType": "The permissions currently enabled for the removed proxy account"
          }
        }
      },
      "title": "Pallet Proxy InterfaceThe interface through which solidity contracts will interact with the Proxy pallet",
      "version": 1
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "addProxy(address,uint8,uint32)": "74a34dd3",
        "isProxy(address,address,uint8,uint32)": "e26d38ed",
        "proxy(address,address,bytes)": "0d3cff86",
        "proxy_force_type(address,uint8,address,bytes)": "4a36b2cd",
        "removeProxies()": "14a5b5fa",
        "removeProxy(address,uint8,uint32)": "fef3f708"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"enum Proxy.ProxyType\",\"name\":\"proxyType\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"addProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"real\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"enum Proxy.ProxyType\",\"name\":\"proxyType\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"isProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"real\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"proxy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"real\",\"type\":\"address\"},{\"internalType\":\"enum Proxy.ProxyType\",\"name\":\"forceProxyType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"proxy_force_type\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeProxies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"enum Proxy.ProxyType\",\"name\":\"proxyType\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"removeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x000000000000000000000000000000000000080b\",\"kind\":\"dev\",\"methods\":{\"addProxy(address,uint8,uint32)\":{\"custom:selector\":\"74a34dd3\",\"details\":\"Register a proxy account for the sender that is able to make calls on its behalf\",\"params\":{\"delay\":\"The announcement period required of the initial proxy, will generally be zero\",\"delegate\":\"The account that the caller would like to make a proxy\",\"proxyType\":\"The permissions allowed for this proxy account\"}},\"isProxy(address,address,uint8,uint32)\":{\"custom:selector\":\"e26d38ed\",\"details\":\"Checks if the caller has an account proxied with a given proxy type\",\"params\":{\"delay\":\"The announcement period required of the initial proxy, will generally be zero\",\"delegate\":\"The account that the caller has maybe proxied\",\"proxyType\":\"The permissions allowed for the proxy\",\"real\":\"The real account that maybe has a proxy\"},\"returns\":{\"exists\":\"True if a proxy exists, False otherwise\"}},\"proxy(address,address,bytes)\":{\"custom:selector\":\"0d3cff86\",\"details\":\"Dispatch the given subcall (`call_to`, `call_data`) from an account that the sender is authorised for through `add_proxy`\",\"params\":{\"callData\":\"Data of the call to be made by the `real` account\",\"callTo\":\"Recipient of the call to be made by the `real` account\",\"real\":\"The account that the proxy will make a call on behalf of\"}},\"proxy_force_type(address,uint8,address,bytes)\":{\"custom:selector\":\"4a36b2cd\",\"details\":\"Dispatch the given subcall (`call_to`, `call_data`) from an account that the sender is authorised for through `add_proxy`\",\"params\":{\"callData\":\"Data of the call to be made by the `real` account\",\"callTo\":\"Recipient of the call to be made by the `real` account\",\"forceProxyType\":\"Specify the exact proxy type to be used and checked for this call\",\"real\":\"The account that the proxy will make a call on behalf of\"}},\"removeProxies()\":{\"custom:selector\":\"14a5b5fa\",\"details\":\"Unregister all proxy accounts for the sender\"},\"removeProxy(address,uint8,uint32)\":{\"custom:selector\":\"fef3f708\",\"details\":\"Register a proxy account for the sender that is able to make calls on its behalf\",\"params\":{\"delay\":\"The announcement period required of the initial proxy, will generally be zero\",\"delegate\":\"The account that the caller would like to remove as a proxy\",\"proxyType\":\"The permissions currently enabled for the removed proxy account\"}}},\"title\":\"Pallet Proxy InterfaceThe interface through which solidity contracts will interact with the Proxy pallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x653d089c7d40e00fbd4ec8a81839b97817f1e871edf2fec96c7bf0d8406bd3dd\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://171af4a17ab9d74910fe42184b586f3badf7038cdd991c9d27d1e4400a29b12e\",\"dweb:/ipfs/QmS4qWtDGjHh8wD4jEogaPoLFjfp2UqT9q3zF89kimMALx\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @dev The Proxy contract's address.\naddress constant PROXY_ADDRESS = 0x000000000000000000000000000000000000080b;\n\n/// @dev The Proxy contract's instance.\nProxy constant PROXY_CONTRACT = Proxy(PROXY_ADDRESS);\n\n/// @author The Moonbeam Team\n/// @title Pallet Proxy Interface\n/// @title The interface through which solidity contracts will interact with the Proxy pallet\n/// @custom:address 0x000000000000000000000000000000000000080b\ninterface Proxy {\n    /// @dev Defines the proxy permission types.\n    /// The values start at `0` (most permissive) and are represented as `uint8`\n    enum ProxyType {\n        Any,\n        NonTransfer,\n        Governance,\n        Staking,\n        CancelProxy,\n        Balances,\n        AuthorMapping,\n        IdentityJudgement\n    }\n\n    /// @dev Register a proxy account for the sender that is able to make calls on its behalf\n    /// @custom:selector 74a34dd3\n    /// @param delegate The account that the caller would like to make a proxy\n    /// @param proxyType The permissions allowed for this proxy account\n    /// @param delay The announcement period required of the initial proxy, will generally be zero\n    function addProxy(\n        address delegate,\n        ProxyType proxyType,\n        uint32 delay\n    ) external;\n\n    /// @dev Register a proxy account for the sender that is able to make calls on its behalf\n    /// @custom:selector fef3f708\n    /// @param delegate The account that the caller would like to remove as a proxy\n    /// @param proxyType The permissions currently enabled for the removed proxy account\n    /// @param delay The announcement period required of the initial proxy, will generally be zero\n    function removeProxy(\n        address delegate,\n        ProxyType proxyType,\n        uint32 delay\n    ) external;\n\n    /// @dev Unregister all proxy accounts for the sender\n    /// @custom:selector 14a5b5fa\n    function removeProxies() external;\n\n    /// @dev Dispatch the given subcall (`call_to`, `call_data`) from an account that the sender\n    /// is authorised for through `add_proxy`\n    /// @custom:selector 0d3cff86\n    /// @param real The account that the proxy will make a call on behalf of\n    /// @param callTo Recipient of the call to be made by the `real` account\n    /// @param callData Data of the call to be made by the `real` account\n    function proxy(\n        address real,\n        address callTo,\n        bytes memory callData\n    ) external payable;\n\n    /// @dev Dispatch the given subcall (`call_to`, `call_data`) from an account that the sender\n    /// is authorised for through `add_proxy`\n    /// @custom:selector 4a36b2cd\n    /// @param real The account that the proxy will make a call on behalf of\n    /// @param forceProxyType Specify the exact proxy type to be used and checked for this call\n    /// @param callTo Recipient of the call to be made by the `real` account\n    /// @param callData Data of the call to be made by the `real` account\n    function proxy_force_type(\n        address real,\n        ProxyType forceProxyType,\n        address callTo,\n        bytes memory callData\n    ) external payable;\n\n    /// @dev Checks if the caller has an account proxied with a given proxy type\n    /// @custom:selector e26d38ed\n    /// @param real The real account that maybe has a proxy\n    /// @param delegate The account that the caller has maybe proxied\n    /// @param proxyType The permissions allowed for the proxy\n    /// @param delay The announcement period required of the initial proxy, will generally be zero\n    /// @return exists True if a proxy exists, False otherwise\n    function isProxy(\n        address real,\n        address delegate,\n        ProxyType proxyType,\n        uint32 delay\n    ) external view returns (bool exists);\n}\n"
}
