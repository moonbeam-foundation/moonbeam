{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "inputs": [
          { "internalType": "uint16", "name": "trackId", "type": "uint16" }
        ],
        "name": "decidingCount",
        "outputs": [
          { "internalType": "uint256", "name": "", "type": "uint256" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint32", "name": "index", "type": "uint32" }
        ],
        "name": "placeDecisionDeposit",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "referendumCount",
        "outputs": [
          { "internalType": "uint256", "name": "", "type": "uint256" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint32", "name": "index", "type": "uint32" }
        ],
        "name": "refundDecisionDeposit",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "submissionDeposit",
        "outputs": [
          { "internalType": "uint256", "name": "", "type": "uint256" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint16", "name": "trackId", "type": "uint16" },
          { "internalType": "bytes32", "name": "proposal", "type": "bytes32" },
          { "internalType": "uint32", "name": "proposalLen", "type": "uint32" },
          { "internalType": "uint32", "name": "block", "type": "uint32" }
        ],
        "name": "submitAfter",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint16", "name": "trackId", "type": "uint16" },
          { "internalType": "bytes32", "name": "proposal", "type": "bytes32" },
          { "internalType": "uint32", "name": "proposalLen", "type": "uint32" },
          { "internalType": "uint32", "name": "block", "type": "uint32" }
        ],
        "name": "submitAt",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "trackIds",
        "outputs": [
          { "internalType": "uint16[]", "name": "trackIds", "type": "uint16[]" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint16", "name": "trackId", "type": "uint16" }
        ],
        "name": "trackInfo",
        "outputs": [
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              {
                "internalType": "uint256",
                "name": "maxDeciding",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "decisionDeposit",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "preparePeriod",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "decisionPeriod",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "confirmPeriod",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "minEnactmentPeriod",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "minApproval",
                "type": "bytes"
              },
              { "internalType": "bytes", "name": "minSupport", "type": "bytes" }
            ],
            "internalType": "struct Referenda.TrackInfo",
            "name": "",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "author": "The Moonbeam Team",
      "custom:address": "0x0000000000000000000000000000000000000811",
      "kind": "dev",
      "methods": {
        "decidingCount(uint16)": {
          "custom:selector": "983d6425",
          "params": { "trackId": "The track identifier" }
        },
        "placeDecisionDeposit(uint32)": {
          "custom:selector": "245ce18d",
          "details": "Post the Decision Deposit for a referendum",
          "params": {
            "index": "The index of the ongoing referendum that is not yet deciding"
          }
        },
        "referendumCount()": { "custom:selector": "3a42ee31" },
        "refundDecisionDeposit(uint32)": {
          "custom:selector": "1325d528",
          "details": "Refund the Decision Deposit for a closed referendum back to the depositor",
          "params": {
            "index": "The index of a closed referendum with decision deposit still locked"
          }
        },
        "submissionDeposit()": { "custom:selector": "aa14c39a" },
        "submitAfter(uint16,bytes32,uint32,uint32)": {
          "custom:selector": "5b2479db",
          "details": "Submit a referenda",
          "params": {
            "block": "Block number after which this will be executed",
            "proposal": "The proposed hash from the preimage pallet",
            "proposalLen": "The length of the proposal call from the preimage pallet",
            "trackId": "The trackId corresponding to the origin from which the proposal is to be dispatched. The trackId => origin mapping lives in `runtime/governance/tracks.rs`"
          }
        },
        "submitAt(uint16,bytes32,uint32,uint32)": {
          "custom:selector": "131f3468",
          "details": "Submit a referenda",
          "params": {
            "block": "Block number at which this will be executed",
            "proposal": "The proposed hash from the preimage pallet",
            "proposalLen": "The length of the proposal call from the preimage pallet",
            "trackId": "The trackId corresponding to the origin from which the proposal is to be dispatched. The trackId => origin mapping lives in `runtime/governance/tracks.rs`"
          }
        },
        "trackIds()": {
          "custom:selector": "cc17da14",
          "returns": { "trackIds": "Identifiers for all tracks (and origins)" }
        },
        "trackInfo(uint16)": {
          "custom:selector": "34038146",
          "params": { "trackId": "The track identifier" }
        }
      },
      "title": "Pallet Referenda InterfaceThe interface through which solidity contracts will interact with the Referenda pallet",
      "version": 1
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "decidingCount(uint16)": "983d6425",
        "placeDecisionDeposit(uint32)": "245ce18d",
        "referendumCount()": "3a42ee31",
        "refundDecisionDeposit(uint32)": "1325d528",
        "submissionDeposit()": "aa14c39a",
        "submitAfter(uint16,bytes32,uint32,uint32)": "5b2479db",
        "submitAt(uint16,bytes32,uint32,uint32)": "131f3468",
        "trackIds()": "cc17da14",
        "trackInfo(uint16)": "34038146"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"trackId\",\"type\":\"uint16\"}],\"name\":\"decidingCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"placeDecisionDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referendumCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"refundDecisionDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"trackId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"proposalLen\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"name\":\"submitAfter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"trackId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"proposalLen\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"name\":\"submitAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trackIds\",\"outputs\":[{\"internalType\":\"uint16[]\",\"name\":\"trackIds\",\"type\":\"uint16[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"trackId\",\"type\":\"uint16\"}],\"name\":\"trackInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxDeciding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decisionDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preparePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decisionPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confirmPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEnactmentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"minApproval\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"minSupport\",\"type\":\"bytes\"}],\"internalType\":\"struct Referenda.TrackInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x0000000000000000000000000000000000000811\",\"kind\":\"dev\",\"methods\":{\"decidingCount(uint16)\":{\"custom:selector\":\"983d6425\",\"params\":{\"trackId\":\"The track identifier\"}},\"placeDecisionDeposit(uint32)\":{\"custom:selector\":\"245ce18d\",\"details\":\"Post the Decision Deposit for a referendum\",\"params\":{\"index\":\"The index of the ongoing referendum that is not yet deciding\"}},\"referendumCount()\":{\"custom:selector\":\"3a42ee31\"},\"refundDecisionDeposit(uint32)\":{\"custom:selector\":\"1325d528\",\"details\":\"Refund the Decision Deposit for a closed referendum back to the depositor\",\"params\":{\"index\":\"The index of a closed referendum with decision deposit still locked\"}},\"submissionDeposit()\":{\"custom:selector\":\"aa14c39a\"},\"submitAfter(uint16,bytes32,uint32,uint32)\":{\"custom:selector\":\"5b2479db\",\"details\":\"Submit a referenda\",\"params\":{\"block\":\"Block number after which this will be executed\",\"proposal\":\"The proposed hash from the preimage pallet\",\"proposalLen\":\"The length of the proposal call from the preimage pallet\",\"trackId\":\"The trackId corresponding to the origin from which the proposal is to be dispatched. The trackId => origin mapping lives in `runtime/governance/tracks.rs`\"}},\"submitAt(uint16,bytes32,uint32,uint32)\":{\"custom:selector\":\"131f3468\",\"details\":\"Submit a referenda\",\"params\":{\"block\":\"Block number at which this will be executed\",\"proposal\":\"The proposed hash from the preimage pallet\",\"proposalLen\":\"The length of the proposal call from the preimage pallet\",\"trackId\":\"The trackId corresponding to the origin from which the proposal is to be dispatched. The trackId => origin mapping lives in `runtime/governance/tracks.rs`\"}},\"trackIds()\":{\"custom:selector\":\"cc17da14\",\"returns\":{\"trackIds\":\"Identifiers for all tracks (and origins)\"}},\"trackInfo(uint16)\":{\"custom:selector\":\"34038146\",\"params\":{\"trackId\":\"The track identifier\"}}},\"title\":\"Pallet Referenda InterfaceThe interface through which solidity contracts will interact with the Referenda pallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decidingCount(uint16)\":{\"notice\":\"Return the total count of deciding referenda per track\"},\"referendumCount()\":{\"notice\":\"Return the total referendum count\"},\"submissionDeposit()\":{\"notice\":\"Return the submission deposit for all referenda\"},\"trackIds()\":{\"notice\":\"Return the trackIds\"},\"trackInfo(uint16)\":{\"notice\":\"Return the governance parameters configured for the input TrackId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"Referenda\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x534f8ef04cedf5352348bd1c8c20c41d0a778c0bfdc784a198d0f25b11e555a7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f489b688d2474de33f3e69a7530aa2e351f69361d507c8c835a8e4971c8fc816\",\"dweb:/ipfs/Qmd6dGcFgTHbfJAG3uY2FDVyftbN4qd9qqwczEZg3bBfwo\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": {
      "kind": "user",
      "methods": {
        "decidingCount(uint16)": {
          "notice": "Return the total count of deciding referenda per track"
        },
        "referendumCount()": { "notice": "Return the total referendum count" },
        "submissionDeposit()": {
          "notice": "Return the submission deposit for all referenda"
        },
        "trackIds()": { "notice": "Return the trackIds" },
        "trackInfo(uint16)": {
          "notice": "Return the governance parameters configured for the input TrackId"
        }
      },
      "version": 1
    }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @dev The Referenda contract's address.\naddress constant REFERENDA_ADDRESS = 0x0000000000000000000000000000000000000811;\n\n/// @dev The Referenda contract's instance.\nReferenda constant REFERENDA_CONTRACT = Referenda(REFERENDA_ADDRESS);\n\n/// @author The Moonbeam Team\n/// @title Pallet Referenda Interface\n/// @title The interface through which solidity contracts will interact with the Referenda pallet\n/// @custom:address 0x0000000000000000000000000000000000000811\ninterface Referenda {\n    struct TrackInfo {\n        string name;\n        uint256 maxDeciding;\n        uint256 decisionDeposit;\n        uint256 preparePeriod;\n        uint256 decisionPeriod;\n        uint256 confirmPeriod;\n        uint256 minEnactmentPeriod;\n        bytes minApproval;\n        bytes minSupport;\n    }\n\n    /// Return the total referendum count\n    /// @custom:selector 3a42ee31\n    function referendumCount() external view returns (uint256);\n\n    /// Return the submission deposit for all referenda\n    /// @custom:selector aa14c39a\n    function submissionDeposit() external view returns (uint256);\n\n    /// Return the total count of deciding referenda per track\n    /// @param trackId The track identifier\n    /// @custom:selector 983d6425\n    function decidingCount(uint16 trackId) external view returns (uint256);\n\n    /// Return the trackIds\n    /// @return trackIds Identifiers for all tracks (and origins)\n    /// @custom:selector cc17da14\n    function trackIds() external view returns (uint16[] memory trackIds);\n\n    /// Return the governance parameters configured for the input TrackId\n    /// @param trackId The track identifier\n    /// @custom:selector 34038146\n    function trackInfo(uint16 trackId) external view returns (TrackInfo memory);\n\n    /// @dev Submit a referenda\n    /// @custom:selector 131f3468\n    /// @param trackId The trackId corresponding to the origin from which the proposal is to be\n    /// dispatched. The trackId => origin mapping lives in `runtime/governance/tracks.rs`\n    /// @param proposal The proposed hash from the preimage pallet\n    /// @param proposalLen The length of the proposal call from the preimage pallet\n    /// @param block Block number at which this will be executed\n    function submitAt(\n        uint16 trackId,\n        bytes32 proposal,\n        uint32 proposalLen,\n        uint32 block\n    ) external;\n\n    /// @dev Submit a referenda\n    /// @custom:selector 5b2479db\n    /// @param trackId The trackId corresponding to the origin from which the proposal is to be\n    /// dispatched. The trackId => origin mapping lives in `runtime/governance/tracks.rs`\n    /// @param proposal The proposed hash from the preimage pallet\n    /// @param proposalLen The length of the proposal call from the preimage pallet\n    /// @param block Block number after which this will be executed\n    function submitAfter(\n        uint16 trackId,\n        bytes32 proposal,\n        uint32 proposalLen,\n        uint32 block\n    ) external;\n\n    /// @dev Post the Decision Deposit for a referendum\n    /// @custom:selector 245ce18d\n    /// @param index The index of the ongoing referendum that is not yet deciding\n    function placeDecisionDeposit(uint32 index) external;\n\n    /// @dev Refund the Decision Deposit for a closed referendum back to the depositor\n    /// @custom:selector 1325d528\n    /// @param  index The index of a closed referendum with decision deposit still locked\n    function refundDecisionDeposit(uint32 index) external;\n}\n"
}
