{
  "byteCode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dd6acb723d06f86c0cd11cb827ad5e522dcebb749dc6ea7f05b48d0d6889cec64736f6c63430008110033",
  "contract": {
    "abi": [],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"main.sol\":146:2211  library SubstrateTools {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":146:2211  library SubstrateTools {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209dd6acb723d06f86c0cd11cb827ad5e522dcebb749dc6ea7f05b48d0d6889cec64736f6c63430008110033\n}\n",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dd6acb723d06f86c0cd11cb827ad5e522dcebb749dc6ea7f05b48d0d6889cec64736f6c63430008110033",
        "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xD6 0xAC 0xB7 0x23 0xD0 PUSH16 0x86C0CD11CB827AD5E522DCEBB749DC6E 0xA7 CREATE JUMPDEST BASEFEE 0xD0 0xD6 DUP9 SWAP13 0xEC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
        "sourceMap": "146:2065:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dd6acb723d06f86c0cd11cb827ad5e522dcebb749dc6ea7f05b48d0d6889cec64736f6c63430008110033",
        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xD6 0xAC 0xB7 0x23 0xD0 PUSH16 0x86C0CD11CB827AD5E522DCEBB749DC6E 0xA7 CREATE JUMPDEST BASEFEE 0xD0 0xD6 DUP9 SWAP13 0xEC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
        "sourceMap": "146:2065:0:-:0;;;;;;;;"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "17200",
          "executionCost": "97",
          "totalCost": "17297"
        },
        "internal": {
          "buildSetStorageItem(bytes memory,bytes memory)": "infinite",
          "buildSetStorageProposal(bytes memory,bytes memory)": "infinite",
          "buildSubstrateString(bytes memory)": "infinite",
          "buildSystemRemarkProposal(bytes memory)": "infinite"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH #[$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH [$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "B"
          },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "CODECOPY", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP1", "source": 0 },
          { "begin": 146, "end": 2211, "name": "MLOAD", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "BYTE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "73"
          },
          { "begin": 146, "end": 2211, "name": "EQ", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "1"
          },
          { "begin": 146, "end": 2211, "name": "JUMPI", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "4"
          },
          { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "24"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "REVERT", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "tag",
            "source": 0,
            "value": "1"
          },
          { "begin": 146, "end": 2211, "name": "JUMPDEST", "source": 0 },
          { "begin": 146, "end": 2211, "name": "ADDRESS", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "73"
          },
          { "begin": 146, "end": 2211, "name": "DUP2", "source": 0 },
          { "begin": 146, "end": 2211, "name": "MSTORE8", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP2", "source": 0 },
          { "begin": 146, "end": 2211, "name": "RETURN", "source": 0 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a26469706673582212209dd6acb723d06f86c0cd11cb827ad5e522dcebb749dc6ea7f05b48d0d6889cec64736f6c63430008110033",
            ".code": [
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSHDEPLOYADDRESS",
                "source": 0
              },
              { "begin": 146, "end": 2211, "name": "ADDRESS", "source": 0 },
              { "begin": 146, "end": 2211, "name": "EQ", "source": 0 },
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 146, "end": 2211, "name": "DUP1", "source": 0 },
              { "begin": 146, "end": 2211, "name": "REVERT", "source": 0 }
            ]
          }
        },
        "sourceList": ["main.sol", "#utility.yul"]
      },
      "methodIdentifiers": {}
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Set of function needed for manipulating substrate transaction/data\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"SubstrateTools\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0xb79c6a9b3a694dfa362268f87e5598b95c048c5e8f1a053a5c5e9dd81e6345a1\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ecbf04ed9eaca008ec155d5041ce28cab434f8f15368a4db7a5d3ad653f12e1b\",\"dweb:/ipfs/QmPuCTURp9BwkyR6otvbs2mQhiToSheANZiTpw7AvXAdnR\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "notice": "Set of function needed for manipulating substrate transaction/data",
      "version": 1
    }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @notice Set of function needed for manipulating substrate transaction/data\nlibrary SubstrateTools {\n    /// @notice concatenated bytes of the string, prefixed by the length in big endian\n    /// @param text text to convert\n    function buildSubstrateString(bytes memory text)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        // Add 1 for encodings\n        uint16 length = uint16(text.length * 4) + 1;\n        // conversion to big endian\n        uint16 reversedlength = ((length >> 8) | (length << 8));\n        // string prefixed by big endian length\n        return bytes.concat(bytes2(reversedlength), text);\n    }\n\n    /// @notice build the storage key/item following substrate conventions\n    /// @param key Storage key\n    /// @param value Storage value\n    function buildSetStorageItem(bytes memory key, bytes memory value)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            bytes.concat(\n                buildSubstrateString(key),\n                buildSubstrateString(value)\n            );\n    }\n\n    /// @notice build the set storage proposal. It includes the setStorage call + the number of\n    /// @notice storages to change and the key/value of each storage.\n    /// @param storageKey Storage key to change\n    /// @param storageValue Storage value\n    function buildSetStorageProposal(\n        bytes memory storageKey,\n        bytes memory storageValue\n    ) internal pure returns (bytes memory) {\n        return\n            bytes.concat(\n                bytes2(\"\\x00\\x04\"), // Should not be hardcoded\n                bytes1(uint8(1 * 4)), // 1 storage item to change, so 4 bytes\n                buildSetStorageItem(storageKey, storageValue)\n            );\n    }\n\n    /// @notice build the system remark proposal\n    /// @param message Message to remark\n    function buildSystemRemarkProposal(bytes memory message)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            bytes.concat(\n                bytes2(\"\\x00\\x01\"), // Should not be hardcoded\n                buildSubstrateString(bytes(message))\n            );\n    }\n}\n"
}
