{
  "byteCode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009495186e14ecd55f05f664f1e507dbab8e406bf1cb9f55c55cbe05a742914ea64736f6c63430008130033",
  "contract": {
    "abi": [],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"main.sol\":146:2211  library SubstrateTools {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":146:2211  library SubstrateTools {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009495186e14ecd55f05f664f1e507dbab8e406bf1cb9f55c55cbe05a742914ea64736f6c63430008130033\n}\n",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009495186e14ecd55f05f664f1e507dbab8e406bf1cb9f55c55cbe05a742914ea64736f6c63430008130033",
        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x49 MLOAD DUP7 0xE1 0x4E 0xCD SSTORE CREATE 0x5F PUSH7 0x4F1E507DBAB8E4 MOD 0xBF SHR 0xB9 CREATE2 0x5C SSTORE 0xCB 0xE0 GAS PUSH21 0x2914EA64736F6C6343000813003300000000000000 ",
        "sourceMap": "146:2065:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:2065:0;;;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009495186e14ecd55f05f664f1e507dbab8e406bf1cb9f55c55cbe05a742914ea64736f6c63430008130033",
        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x49 MLOAD DUP7 0xE1 0x4E 0xCD SSTORE CREATE 0x5F PUSH7 0x4F1E507DBAB8E4 MOD 0xBF SHR 0xB9 CREATE2 0x5C SSTORE 0xCB 0xE0 GAS PUSH21 0x2914EA64736F6C6343000813003300000000000000 ",
        "sourceMap": "146:2065:0:-:0;;;;;;;;"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "17200",
          "executionCost": "103",
          "totalCost": "17303"
        },
        "internal": {
          "buildSetStorageItem(bytes memory,bytes memory)": "infinite",
          "buildSetStorageProposal(bytes memory,bytes memory)": "infinite",
          "buildSubstrateString(bytes memory)": "infinite",
          "buildSystemRemarkProposal(bytes memory)": "infinite"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH #[$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH [$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "B"
          },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "CODECOPY", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP1", "source": 0 },
          { "begin": 146, "end": 2211, "name": "MLOAD", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "BYTE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "73"
          },
          { "begin": 146, "end": 2211, "name": "EQ", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "1"
          },
          { "begin": 146, "end": 2211, "name": "JUMPI", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "4E487B71"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "E0"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "4"
          },
          { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "24"
          },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "REVERT", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "tag",
            "source": 0,
            "value": "1"
          },
          { "begin": 146, "end": 2211, "name": "JUMPDEST", "source": 0 },
          { "begin": 146, "end": 2211, "name": "ADDRESS", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
          {
            "begin": 146,
            "end": 2211,
            "name": "PUSH",
            "source": 0,
            "value": "73"
          },
          { "begin": 146, "end": 2211, "name": "DUP2", "source": 0 },
          { "begin": 146, "end": 2211, "name": "MSTORE8", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP3", "source": 0 },
          { "begin": 146, "end": 2211, "name": "DUP2", "source": 0 },
          { "begin": 146, "end": 2211, "name": "RETURN", "source": 0 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a264697066735822122009495186e14ecd55f05f664f1e507dbab8e406bf1cb9f55c55cbe05a742914ea64736f6c63430008130033",
            ".code": [
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSHDEPLOYADDRESS",
                "source": 0
              },
              { "begin": 146, "end": 2211, "name": "ADDRESS", "source": 0 },
              { "begin": 146, "end": 2211, "name": "EQ", "source": 0 },
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 146, "end": 2211, "name": "MSTORE", "source": 0 },
              {
                "begin": 146,
                "end": 2211,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 146, "end": 2211, "name": "DUP1", "source": 0 },
              { "begin": 146, "end": 2211, "name": "REVERT", "source": 0 }
            ]
          }
        },
        "sourceList": ["main.sol", "#utility.yul"]
      },
      "methodIdentifiers": {}
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Set of function needed for manipulating substrate transaction/data\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"SubstrateTools\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0xb79c6a9b3a694dfa362268f87e5598b95c048c5e8f1a053a5c5e9dd81e6345a1\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ecbf04ed9eaca008ec155d5041ce28cab434f8f15368a4db7a5d3ad653f12e1b\",\"dweb:/ipfs/QmPuCTURp9BwkyR6otvbs2mQhiToSheANZiTpw7AvXAdnR\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "notice": "Set of function needed for manipulating substrate transaction/data",
      "version": 1
    }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @notice Set of function needed for manipulating substrate transaction/data\nlibrary SubstrateTools {\n    /// @notice concatenated bytes of the string, prefixed by the length in big endian\n    /// @param text text to convert\n    function buildSubstrateString(bytes memory text)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        // Add 1 for encodings\n        uint16 length = uint16(text.length * 4) + 1;\n        // conversion to big endian\n        uint16 reversedlength = ((length >> 8) | (length << 8));\n        // string prefixed by big endian length\n        return bytes.concat(bytes2(reversedlength), text);\n    }\n\n    /// @notice build the storage key/item following substrate conventions\n    /// @param key Storage key\n    /// @param value Storage value\n    function buildSetStorageItem(bytes memory key, bytes memory value)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            bytes.concat(\n                buildSubstrateString(key),\n                buildSubstrateString(value)\n            );\n    }\n\n    /// @notice build the set storage proposal. It includes the setStorage call + the number of\n    /// @notice storages to change and the key/value of each storage.\n    /// @param storageKey Storage key to change\n    /// @param storageValue Storage value\n    function buildSetStorageProposal(\n        bytes memory storageKey,\n        bytes memory storageValue\n    ) internal pure returns (bytes memory) {\n        return\n            bytes.concat(\n                bytes2(\"\\x00\\x04\"), // Should not be hardcoded\n                bytes1(uint8(1 * 4)), // 1 storage item to change, so 4 bytes\n                buildSetStorageItem(storageKey, storageValue)\n            );\n    }\n\n    /// @notice build the system remark proposal\n    /// @param message Message to remark\n    function buildSystemRemarkProposal(bytes memory message)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            bytes.concat(\n                bytes2(\"\\x00\\x01\"), // Should not be hardcoded\n                buildSubstrateString(bytes(message))\n            );\n    }\n}\n"
}
