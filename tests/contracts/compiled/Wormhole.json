{
  "byteCode": "0x608060405234801561001057600080fd5b5060405161056338038061056383398101604081905261002f91610309565b818161005c60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6103d7565b60008051602061051c83398151915214610078576100786103f8565b6100848282600061008d565b5050505061045d565b610096836100b9565b6000825111806100a35750805b156100b4576100b283836100f9565b505b505050565b6100c281610127565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061011e838360405180606001604052806027815260200161053c602791396101bf565b90505b92915050565b803b6101905760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b60008051602061051c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060833b61021e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610187565b600080856001600160a01b031685604051610239919061040e565b600060405180830381855af49150503d8060008114610274576040519150601f19603f3d011682016040523d82523d6000602084013e610279565b606091505b50909250905061028a828286610296565b925050505b9392505050565b606083156102a557508161028f565b8251156102b55782518084602001fd5b8160405162461bcd60e51b8152600401610187919061042a565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103005781810151838201526020016102e8565b50506000910152565b6000806040838503121561031c57600080fd5b82516001600160a01b038116811461033357600080fd5b60208401519092506001600160401b038082111561035057600080fd5b818501915085601f83011261036457600080fd5b815181811115610376576103766102cf565b604051601f8201601f19908116603f0116810190838211818310171561039e5761039e6102cf565b816040528281528860208487010111156103b757600080fd5b6103c88360208301602088016102e5565b80955050505050509250929050565b8181038181111561012157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600082516104208184602087016102e5565b9190910192915050565b60208152600082518060208401526104498160408501602087016102e5565b601f01601f19169190910160400192915050565b60b18061046b6000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220b3852f75e2d78f43d08d35e020c10dd31b034c8f2328afd50f5f33755ac8fb8f64736f6c63430008130033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "contract": {
    "abi": [
      {
        "inputs": [
          { "internalType": "address", "name": "setup", "type": "address" },
          { "internalType": "bytes", "name": "initData", "type": "bytes" }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "previousAdmin",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "AdminChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "beacon",
            "type": "address"
          }
        ],
        "name": "BeaconUpgraded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "implementation",
            "type": "address"
          }
        ],
        "name": "Upgraded",
        "type": "event"
      },
      { "stateMutability": "payable", "type": "fallback" },
      { "stateMutability": "payable", "type": "receive" }
    ],
    "devdoc": {
      "events": {
        "AdminChanged(address,address)": {
          "details": "Emitted when the admin account has changed."
        },
        "BeaconUpgraded(address)": {
          "details": "Emitted when the beacon is upgraded."
        },
        "Upgraded(address)": {
          "details": "Emitted when the implementation is upgraded."
        }
      },
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "evm": {
      "assembly": "    /* \"main.sol\":22988:23134  contract Wormhole is ERC1967Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"main.sol\":23028:23132  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"main.sol\":23113:23118  setup */\n  dup2\n    /* \"main.sol\":23120:23128  initData */\n  dup2\n    /* \"main.sol\":22516:22570  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  tag_7\n    /* \"main.sol\":22569:22570  1 */\n  0x01\n    /* \"main.sol\":22524:22565  keccak256(\"eip1967.proxy.implementation\") */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd\n    /* \"main.sol\":22516:22570  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  tag_8\n  jump\t// in\ntag_7:\n  0x00\n  dup1\n  mload\n  0x20\n  data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"main.sol\":22468:22571  _IMPLEMENTATION_SLOT ==... */\n  eq\n    /* \"main.sol\":22448:22581  assert(... */\n  tag_10\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"main.sol\":22591:22630  _upgradeToAndCall(_logic, _data, false) */\n  tag_12\n    /* \"main.sol\":22609:22615  _logic */\n  dup3\n    /* \"main.sol\":22617:22622  _data */\n  dup3\n    /* \"main.sol\":22624:22629  false */\n  0x00\n    /* \"main.sol\":22591:22608  _upgradeToAndCall */\n  tag_13\n    /* \"main.sol\":22591:22630  _upgradeToAndCall(_logic, _data, false) */\n  jump\t// in\ntag_12:\n    /* \"main.sol\":22382:22637  constructor(address _logic, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"main.sol\":23028:23132  constructor(... */\n  pop\n  pop\n    /* \"main.sol\":22988:23134  contract Wormhole is ERC1967Proxy {... */\n  jump(tag_60)\n    /* \"main.sol\":16717:17012  function _upgradeToAndCall(... */\ntag_13:\n    /* \"main.sol\":16855:16884  _upgradeTo(newImplementation) */\n  tag_17\n    /* \"main.sol\":16866:16883  newImplementation */\n  dup4\n    /* \"main.sol\":16855:16865  _upgradeTo */\n  tag_18\n    /* \"main.sol\":16855:16884  _upgradeTo(newImplementation) */\n  jump\t// in\ntag_17:\n    /* \"main.sol\":16912:16913  0 */\n  0x00\n    /* \"main.sol\":16898:16902  data */\n  dup3\n    /* \"main.sol\":16898:16909  data.length */\n  mload\n    /* \"main.sol\":16898:16913  data.length > 0 */\n  gt\n    /* \"main.sol\":16898:16926  data.length > 0 || forceCall */\n  dup1\n  tag_19\n  jumpi\n  pop\n    /* \"main.sol\":16917:16926  forceCall */\n  dup1\n    /* \"main.sol\":16898:16926  data.length > 0 || forceCall */\ntag_19:\n    /* \"main.sol\":16894:17006  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_20\n  jumpi\n    /* \"main.sol\":16942:16995  Address.functionDelegateCall(newImplementation, data) */\n  tag_21\n    /* \"main.sol\":16971:16988  newImplementation */\n  dup4\n    /* \"main.sol\":16990:16994  data */\n  dup4\n    /* \"main.sol\":16942:16970  Address.functionDelegateCall */\n  tag_22\n    /* \"main.sol\":16942:16995  Address.functionDelegateCall(newImplementation, data) */\n  jump\t// in\ntag_21:\n  pop\n    /* \"main.sol\":16894:17006  if (data.length > 0 || forceCall) {... */\ntag_20:\n    /* \"main.sol\":16717:17012  function _upgradeToAndCall(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"main.sol\":16431:16583  function _upgradeTo(address newImplementation) internal {... */\ntag_18:\n    /* \"main.sol\":16497:16534  _setImplementation(newImplementation) */\n  tag_24\n    /* \"main.sol\":16516:16533  newImplementation */\n  dup2\n    /* \"main.sol\":16497:16515  _setImplementation */\n  tag_25\n    /* \"main.sol\":16497:16534  _setImplementation(newImplementation) */\n  jump\t// in\ntag_24:\n    /* \"main.sol\":16549:16576  Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"main.sol\":16431:16583  function _upgradeTo(address newImplementation) internal {... */\n  pop\n  jump\t// out\n    /* \"main.sol\":10368:10662  function functionDelegateCall(... */\ntag_22:\n    /* \"main.sol\":10473:10485  bytes memory */\n  0x60\n    /* \"main.sol\":10516:10655  functionDelegateCall(... */\n  tag_27\n    /* \"main.sol\":10554:10560  target */\n  dup4\n    /* \"main.sol\":10578:10582  data */\n  dup4\n    /* \"main.sol\":10516:10655  functionDelegateCall(... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"main.sol\":10516:10536  functionDelegateCall */\n  tag_28\n    /* \"main.sol\":10516:10655  functionDelegateCall(... */\n  jump\t// in\ntag_27:\n    /* \"main.sol\":10497:10655  return... */\n  swap1\n  pop\n    /* \"main.sol\":10368:10662  function functionDelegateCall(... */\ntag_26:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"main.sol\":16006:16325  function _setImplementation(address newImplementation) private {... */\ntag_25:\n    /* \"main.sol\":4900:4920  extcodesize(account) */\n  dup1\n  extcodesize\n    /* \"main.sol\":16079:16208  require(... */\n  tag_32\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2033:2035   */\n  0x20\n    /* \"main.sol\":16079:16208  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2015:2036   */\n  mstore\n    /* \"#utility.yul\":2072:2074   */\n  0x2d\n    /* \"#utility.yul\":2052:2070   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2045:2075   */\n  mstore\n    /* \"#utility.yul\":2111:2145   */\n  0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n    /* \"#utility.yul\":2091:2109   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2084:2146   */\n  mstore\n  shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":2162:2180   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2155:2198   */\n  mstore\n    /* \"#utility.yul\":2215:2234   */\n  0x84\n  add\n    /* \"main.sol\":16079:16208  require(... */\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_32:\n  0x00\n  dup1\n  mload\n  0x20\n  data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"main.sol\":16218:16318  StorageSlot... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"main.sol\":16006:16325  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"main.sol\":10848:11235  function functionDelegateCall(... */\ntag_28:\n    /* \"main.sol\":10989:11001  bytes memory */\n  0x60\n    /* \"main.sol\":4900:4920  extcodesize(account) */\n  dup4\n  extcodesize\n    /* \"main.sol\":11013:11082  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_39\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2447:2449   */\n  0x20\n    /* \"main.sol\":11013:11082  require(isContract(target), \"Address: delegate call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2429:2450   */\n  mstore\n    /* \"#utility.yul\":2486:2488   */\n  0x26\n    /* \"#utility.yul\":2466:2484   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2459:2489   */\n  mstore\n    /* \"#utility.yul\":2525:2559   */\n  0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n    /* \"#utility.yul\":2505:2523   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2498:2560   */\n  mstore\n  shl(0xd2, 0x1b9d1c9858dd)\n    /* \"#utility.yul\":2576:2594   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2569:2605   */\n  mstore\n    /* \"#utility.yul\":2622:2641   */\n  0x84\n  add\n    /* \"main.sol\":11013:11082  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_33\n    /* \"#utility.yul\":2245:2647   */\n  jump\n    /* \"main.sol\":11013:11082  require(isContract(target), \"Address: delegate call to non-contract\") */\ntag_39:\n    /* \"main.sol\":11094:11106  bool success */\n  0x00\n    /* \"main.sol\":11108:11131  bytes memory returndata */\n  dup1\n    /* \"main.sol\":11135:11141  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"main.sol\":11135:11154  target.delegatecall */\n  and\n    /* \"main.sol\":11155:11159  data */\n  dup6\n    /* \"main.sol\":11135:11160  target.delegatecall(data) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_46\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_45)\ntag_46:\n  0x60\n  swap2\n  pop\ntag_45:\n  pop\n    /* \"main.sol\":11093:11160  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"main.sol\":11177:11228  verifyCallResult(success, returndata, errorMessage) */\n  tag_47\n    /* \"main.sol\":11093:11160  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup3\n  dup3\n    /* \"main.sol\":11215:11227  errorMessage */\n  dup7\n    /* \"main.sol\":11177:11193  verifyCallResult */\n  tag_48\n    /* \"main.sol\":11177:11228  verifyCallResult(success, returndata, errorMessage) */\n  jump\t// in\ntag_47:\n    /* \"main.sol\":11170:11228  return verifyCallResult(success, returndata, errorMessage) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"main.sol\":10848:11235  function functionDelegateCall(... */\ntag_37:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"main.sol\":11455:12147  function verifyCallResult(... */\ntag_48:\n    /* \"main.sol\":11601:11613  bytes memory */\n  0x60\n    /* \"main.sol\":11629:11636  success */\n  dup4\n    /* \"main.sol\":11625:12141  if (success) {... */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"main.sol\":11659:11669  returndata */\n  dup2\n    /* \"main.sol\":11652:11669  return returndata */\n  jump(tag_37)\n    /* \"main.sol\":11625:12141  if (success) {... */\ntag_52:\n    /* \"main.sol\":11770:11787  returndata.length */\n  dup3\n  mload\n    /* \"main.sol\":11770:11791  returndata.length > 0 */\n  iszero\n    /* \"main.sol\":11766:12131  if (returndata.length > 0) {... */\n  tag_54\n  jumpi\n    /* \"main.sol\":11964:11974  returndata */\n  dup3\n    /* \"main.sol\":11958:11975  mload(returndata) */\n  mload\n    /* \"main.sol\":12024:12039  returndata_size */\n  dup1\n    /* \"main.sol\":12011:12021  returndata */\n  dup5\n    /* \"main.sol\":12007:12009  32 */\n  0x20\n    /* \"main.sol\":12003:12022  add(32, returndata) */\n  add\n    /* \"main.sol\":11996:12040  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"main.sol\":11766:12131  if (returndata.length > 0) {... */\ntag_54:\n    /* \"main.sol\":12103:12115  errorMessage */\n  dup2\n    /* \"main.sol\":12096:12116  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap2\n  swap1\n  tag_57\n  jump\t// in\n    /* \"#utility.yul\":14:141   */\ntag_58:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_59:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_63:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_63)\ntag_65:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1464   */\ntag_3:\n    /* \"#utility.yul\":489:495   */\n  0x00\n    /* \"#utility.yul\":497:503   */\n  dup1\n    /* \"#utility.yul\":550:552   */\n  0x40\n    /* \"#utility.yul\":538:547   */\n  dup4\n    /* \"#utility.yul\":529:536   */\n  dup6\n    /* \"#utility.yul\":525:548   */\n  sub\n    /* \"#utility.yul\":521:553   */\n  slt\n    /* \"#utility.yul\":518:570   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":518:570   */\ntag_67:\n    /* \"#utility.yul\":592:608   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":637:668   */\n  dup2\n  and\n    /* \"#utility.yul\":627:669   */\n  dup2\n  eq\n    /* \"#utility.yul\":617:687   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":683:684   */\n  0x00\n    /* \"#utility.yul\":680:681   */\n  dup1\n    /* \"#utility.yul\":673:685   */\n  revert\n    /* \"#utility.yul\":617:687   */\ntag_68:\n    /* \"#utility.yul\":755:757   */\n  0x20\n    /* \"#utility.yul\":740:758   */\n  dup5\n  add\n    /* \"#utility.yul\":734:759   */\n  mload\n    /* \"#utility.yul\":706:711   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":808:822   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":805:839   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":835:836   */\n  0x00\n    /* \"#utility.yul\":832:833   */\n  dup1\n    /* \"#utility.yul\":825:837   */\n  revert\n    /* \"#utility.yul\":805:839   */\ntag_69:\n    /* \"#utility.yul\":873:879   */\n  dup2\n    /* \"#utility.yul\":862:871   */\n  dup6\n    /* \"#utility.yul\":858:880   */\n  add\n    /* \"#utility.yul\":848:880   */\n  swap2\n  pop\n    /* \"#utility.yul\":918:925   */\n  dup6\n    /* \"#utility.yul\":911:915   */\n  0x1f\n    /* \"#utility.yul\":907:909   */\n  dup4\n    /* \"#utility.yul\":903:916   */\n  add\n    /* \"#utility.yul\":899:926   */\n  slt\n    /* \"#utility.yul\":889:944   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":940:941   */\n  0x00\n    /* \"#utility.yul\":937:938   */\n  dup1\n    /* \"#utility.yul\":930:942   */\n  revert\n    /* \"#utility.yul\":889:944   */\ntag_70:\n    /* \"#utility.yul\":969:971   */\n  dup2\n    /* \"#utility.yul\":963:972   */\n  mload\n    /* \"#utility.yul\":991:993   */\n  dup2\n    /* \"#utility.yul\":987:989   */\n  dup2\n    /* \"#utility.yul\":984:994   */\n  gt\n    /* \"#utility.yul\":981:1017   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":997:1015   */\n  tag_72\n  tag_58\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1072:1074   */\n  0x40\n    /* \"#utility.yul\":1066:1075   */\n  mload\n    /* \"#utility.yul\":1040:1042   */\n  0x1f\n    /* \"#utility.yul\":1126:1139   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1122:1144   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1146:1148   */\n  0x3f\n    /* \"#utility.yul\":1118:1149   */\n  add\n    /* \"#utility.yul\":1114:1154   */\n  and\n    /* \"#utility.yul\":1102:1155   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1170:1188   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1190:1212   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1167:1213   */\n  or\n    /* \"#utility.yul\":1164:1236   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1216:1234   */\n  tag_74\n  tag_58\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1256:1266   */\n  dup2\n    /* \"#utility.yul\":1252:1254   */\n  0x40\n    /* \"#utility.yul\":1245:1267   */\n  mstore\n    /* \"#utility.yul\":1291:1293   */\n  dup3\n    /* \"#utility.yul\":1283:1289   */\n  dup2\n    /* \"#utility.yul\":1276:1294   */\n  mstore\n    /* \"#utility.yul\":1331:1338   */\n  dup9\n    /* \"#utility.yul\":1326:1328   */\n  0x20\n    /* \"#utility.yul\":1321:1323   */\n  dup5\n    /* \"#utility.yul\":1317:1319   */\n  dup8\n    /* \"#utility.yul\":1313:1324   */\n  add\n    /* \"#utility.yul\":1309:1329   */\n  add\n    /* \"#utility.yul\":1306:1339   */\n  gt\n    /* \"#utility.yul\":1303:1356   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1349:1350   */\n  dup1\n    /* \"#utility.yul\":1342:1354   */\n  revert\n    /* \"#utility.yul\":1303:1356   */\ntag_75:\n    /* \"#utility.yul\":1365:1433   */\n  tag_76\n    /* \"#utility.yul\":1430:1432   */\n  dup4\n    /* \"#utility.yul\":1425:1427   */\n  0x20\n    /* \"#utility.yul\":1417:1423   */\n  dup4\n    /* \"#utility.yul\":1413:1428   */\n  add\n    /* \"#utility.yul\":1408:1410   */\n  0x20\n    /* \"#utility.yul\":1404:1406   */\n  dup9\n    /* \"#utility.yul\":1400:1411   */\n  add\n    /* \"#utility.yul\":1365:1433   */\n  tag_59\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1452:1458   */\n  dup1\n    /* \"#utility.yul\":1442:1458   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":401:1464   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1469:1694   */\ntag_8:\n    /* \"#utility.yul\":1536:1545   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":1557:1568   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":1554:1688   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1610:1620   */\n  0x4e487b71\n    /* \"#utility.yul\":1605:1608   */\n  0xe0\n    /* \"#utility.yul\":1601:1621   */\n  shl\n    /* \"#utility.yul\":1598:1599   */\n  0x00\n    /* \"#utility.yul\":1591:1622   */\n  mstore\n    /* \"#utility.yul\":1645:1649   */\n  0x11\n    /* \"#utility.yul\":1642:1643   */\n  0x04\n    /* \"#utility.yul\":1635:1650   */\n  mstore\n    /* \"#utility.yul\":1673:1677   */\n  0x24\n    /* \"#utility.yul\":1670:1671   */\n  0x00\n    /* \"#utility.yul\":1663:1678   */\n  revert\n    /* \"#utility.yul\":1699:1826   */\ntag_11:\n    /* \"#utility.yul\":1760:1770   */\n  0x4e487b71\n    /* \"#utility.yul\":1755:1758   */\n  0xe0\n    /* \"#utility.yul\":1751:1771   */\n  shl\n    /* \"#utility.yul\":1748:1749   */\n  0x00\n    /* \"#utility.yul\":1741:1772   */\n  mstore\n    /* \"#utility.yul\":1791:1795   */\n  0x01\n    /* \"#utility.yul\":1788:1789   */\n  0x04\n    /* \"#utility.yul\":1781:1796   */\n  mstore\n    /* \"#utility.yul\":1815:1819   */\n  0x24\n    /* \"#utility.yul\":1812:1813   */\n  0x00\n    /* \"#utility.yul\":1805:1820   */\n  revert\n    /* \"#utility.yul\":2652:2939   */\ntag_43:\n    /* \"#utility.yul\":2781:2784   */\n  0x00\n    /* \"#utility.yul\":2819:2825   */\n  dup3\n    /* \"#utility.yul\":2813:2826   */\n  mload\n    /* \"#utility.yul\":2835:2901   */\n  tag_83\n    /* \"#utility.yul\":2894:2900   */\n  dup2\n    /* \"#utility.yul\":2889:2892   */\n  dup5\n    /* \"#utility.yul\":2882:2886   */\n  0x20\n    /* \"#utility.yul\":2874:2880   */\n  dup8\n    /* \"#utility.yul\":2870:2887   */\n  add\n    /* \"#utility.yul\":2835:2901   */\n  tag_59\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2917:2933   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":2652:2939   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2944:3340   */\ntag_57:\n    /* \"#utility.yul\":3093:3095   */\n  0x20\n    /* \"#utility.yul\":3082:3091   */\n  dup2\n    /* \"#utility.yul\":3075:3096   */\n  mstore\n    /* \"#utility.yul\":3056:3060   */\n  0x00\n    /* \"#utility.yul\":3125:3131   */\n  dup3\n    /* \"#utility.yul\":3119:3132   */\n  mload\n    /* \"#utility.yul\":3168:3174   */\n  dup1\n    /* \"#utility.yul\":3163:3165   */\n  0x20\n    /* \"#utility.yul\":3152:3161   */\n  dup5\n    /* \"#utility.yul\":3148:3166   */\n  add\n    /* \"#utility.yul\":3141:3175   */\n  mstore\n    /* \"#utility.yul\":3184:3263   */\n  tag_85\n    /* \"#utility.yul\":3256:3262   */\n  dup2\n    /* \"#utility.yul\":3251:3253   */\n  0x40\n    /* \"#utility.yul\":3240:3249   */\n  dup6\n    /* \"#utility.yul\":3236:3254   */\n  add\n    /* \"#utility.yul\":3231:3233   */\n  0x20\n    /* \"#utility.yul\":3223:3229   */\n  dup8\n    /* \"#utility.yul\":3219:3234   */\n  add\n    /* \"#utility.yul\":3184:3263   */\n  tag_59\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3324:3326   */\n  0x1f\n    /* \"#utility.yul\":3303:3318   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3299:3328   */\n  and\n    /* \"#utility.yul\":3284:3329   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":3331:3333   */\n  0x40\n    /* \"#utility.yul\":3280:3334   */\n  add\n  swap3\n    /* \"#utility.yul\":2944:3340   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_60:\n    /* \"main.sol\":22988:23134  contract Wormhole is ERC1967Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"main.sol\":22988:23134  contract Wormhole is ERC1967Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"main.sol\":3081:3092  _fallback() */\n      tag_5\n        /* \"main.sol\":3081:3090  _fallback */\n      tag_6\n        /* \"main.sol\":3081:3092  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"main.sol\":22988:23134  contract Wormhole is ERC1967Proxy {... */\n      stop\n    tag_2:\n        /* \"main.sol\":2858:2869  _fallback() */\n      tag_5\n        /* \"main.sol\":2505:2615  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"main.sol\":2580:2608  _delegate(_implementation()) */\n      tag_13\n        /* \"main.sol\":2590:2607  _implementation() */\n      tag_14\n        /* \"main.sol\":2590:2605  _implementation */\n      tag_15\n        /* \"main.sol\":2590:2607  _implementation() */\n      jump\t// in\n    tag_14:\n        /* \"main.sol\":2580:2589  _delegate */\n      tag_16\n        /* \"main.sol\":2580:2608  _delegate(_implementation()) */\n      jump\t// in\n    tag_13:\n        /* \"main.sol\":2505:2615  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"main.sol\":22715:22899  function _implementation()... */\n    tag_15:\n        /* \"main.sol\":22822:22834  address impl */\n      0x00\n        /* \"main.sol\":22857:22892  ERC1967Upgrade._getImplementation() */\n      tag_19\n        /* \"main.sol\":15504:15570  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"main.sol\":15854:15908  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"main.sol\":15775:15915  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"main.sol\":22857:22892  ERC1967Upgrade._getImplementation() */\n    tag_19:\n        /* \"main.sol\":22850:22892  return ERC1967Upgrade._getImplementation() */\n      swap1\n      pop\n        /* \"main.sol\":22715:22899  function _implementation()... */\n      swap1\n      jump\t// out\n        /* \"main.sol\":1021:2026  function _delegate(address implementation) internal virtual {... */\n    tag_16:\n        /* \"main.sol\":1359:1373  calldatasize() */\n      calldatasize\n        /* \"main.sol\":1356:1357  0 */\n      0x00\n        /* \"main.sol\":1353:1354  0 */\n      dup1\n        /* \"main.sol\":1340:1374  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"main.sol\":1670:1671  0 */\n      0x00\n        /* \"main.sol\":1651:1652  0 */\n      dup1\n        /* \"main.sol\":1619:1633  calldatasize() */\n      calldatasize\n        /* \"main.sol\":1600:1601  0 */\n      0x00\n        /* \"main.sol\":1568:1582  implementation */\n      dup5\n        /* \"main.sol\":1545:1550  gas() */\n      gas\n        /* \"main.sol\":1515:1685  delegatecall(... */\n      delegatecall\n        /* \"main.sol\":1759:1775  returndatasize() */\n      returndatasize\n        /* \"main.sol\":1756:1757  0 */\n      0x00\n        /* \"main.sol\":1753:1754  0 */\n      dup1\n        /* \"main.sol\":1738:1776  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"main.sol\":1797:1803  result */\n      dup1\n        /* \"main.sol\":1864:1930  case 0 {... */\n      dup1\n      iszero\n      tag_23\n      jumpi\n        /* \"main.sol\":1979:1995  returndatasize() */\n      returndatasize\n        /* \"main.sol\":1976:1977  0 */\n      0x00\n        /* \"main.sol\":1969:1996  return(0, returndatasize()) */\n      return\n        /* \"main.sol\":1864:1930  case 0 {... */\n    tag_23:\n        /* \"main.sol\":1899:1915  returndatasize() */\n      returndatasize\n        /* \"main.sol\":1896:1897  0 */\n      0x00\n        /* \"main.sol\":1889:1916  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa2646970667358221220b3852f75e2d78f43d08d35e020c10dd31b034c8f2328afd50f5f33755ac8fb8f64736f6c63430008130033\n}\n",
      "bytecode": {
        "functionDebugData": {
          "@_797": {
            "entryPoint": null,
            "id": 797,
            "parameterSlots": 2,
            "returnSlots": 0
          },
          "@_825": {
            "entryPoint": null,
            "id": 825,
            "parameterSlots": 2,
            "returnSlots": 0
          },
          "@_setImplementation_466": {
            "entryPoint": 295,
            "id": 466,
            "parameterSlots": 1,
            "returnSlots": 0
          },
          "@_upgradeToAndCall_511": {
            "entryPoint": 141,
            "id": 511,
            "parameterSlots": 3,
            "returnSlots": 0
          },
          "@_upgradeTo_481": {
            "entryPoint": 185,
            "id": 481,
            "parameterSlots": 1,
            "returnSlots": 0
          },
          "@functionDelegateCall_289": {
            "entryPoint": 249,
            "id": 289,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "@functionDelegateCall_324": {
            "entryPoint": 447,
            "id": 324,
            "parameterSlots": 3,
            "returnSlots": 1
          },
          "@getAddressSlot_381": {
            "entryPoint": null,
            "id": 381,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@isContract_79": {
            "entryPoint": null,
            "id": 79,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@verifyCallResult_355": {
            "entryPoint": 662,
            "id": 355,
            "parameterSlots": 3,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
            "entryPoint": 777,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 2
          },
          "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
            "entryPoint": 1038,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
            "entryPoint": 1066,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "checked_sub_t_uint256": {
            "entryPoint": 983,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "copy_memory_to_memory_with_cleanup": {
            "entryPoint": 741,
            "id": null,
            "parameterSlots": 3,
            "returnSlots": 0
          },
          "panic_error_0x01": {
            "entryPoint": 1016,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "panic_error_0x41": {
            "entryPoint": 719,
            "id": null,
            "parameterSlots": 0,
            "returnSlots": 0
          }
        },
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:3342:1",
              "statements": [
                { "nodeType": "YulBlock", "src": "6:3:1", "statements": [] },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "46:95:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "63:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "70:3:1",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "75:10:1",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "66:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "66:20:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "56:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "56:31:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "56:31:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "103:1:1",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "106:4:1",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "96:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "96:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "96:15:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "127:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "130:4:1",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "120:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "120:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "120:15:1"
                      }
                    ]
                  },
                  "name": "panic_error_0x41",
                  "nodeType": "YulFunctionDefinition",
                  "src": "14:127:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "212:184:1",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "222:10:1",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "231:1:1",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "226:1:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "291:63:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:3:1"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "321:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:11:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "335:3:1"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "340:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "331:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "331:11:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "325:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "325:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "305:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "305:39:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "305:39:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "252:1:1"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "255:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "249:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "249:13:1"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "263:19:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "265:15:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "274:1:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "277:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "270:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "270:10:1"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "265:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "245:3:1",
                          "statements": []
                        },
                        "src": "241:113:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "374:3:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "370:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "370:16:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "388:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:27:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:27:1"
                      }
                    ]
                  },
                  "name": "copy_memory_to_memory_with_cleanup",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "190:3:1",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "195:3:1",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:1",
                      "type": ""
                    }
                  ],
                  "src": "146:250:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "508:956:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "554:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "563:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "566:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "556:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "556:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "556:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "529:7:1"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "538:9:1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "525:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "525:23:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "550:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "521:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "521:32:1"
                        },
                        "nodeType": "YulIf",
                        "src": "518:52:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "579:29:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "598:9:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "592:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "592:16:1"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "583:5:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "671:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "680:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "673:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "673:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "673:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "630:5:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "641:5:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "656:3:1",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "661:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "652:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "652:11:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "665:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "648:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "648:19:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "637:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "637:31:1"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "627:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "627:42:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "620:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "620:50:1"
                        },
                        "nodeType": "YulIf",
                        "src": "617:70:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "696:15:1",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "706:5:1"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "720:39:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "744:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "755:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "740:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "740:18:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "734:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "734:25:1"
                        },
                        "variables": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "724:6:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "768:28:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "786:2:1",
                                  "type": "",
                                  "value": "64"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "790:1:1",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "782:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "782:10:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "794:1:1",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "778:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "778:18:1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "772:2:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "823:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "832:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "835:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "825:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "825:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "825:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "811:6:1"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "819:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "808:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "808:14:1"
                        },
                        "nodeType": "YulIf",
                        "src": "805:34:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "848:32:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "862:9:1"
                            },
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "873:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "858:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "858:22:1"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "852:2:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "928:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "937:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "940:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "930:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "930:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "930:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "907:2:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "911:4:1",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "903:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "903:13:1"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "918:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "899:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "899:27:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "892:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "892:35:1"
                        },
                        "nodeType": "YulIf",
                        "src": "889:55:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "953:19:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "969:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "963:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "963:9:1"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "957:2:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "995:22:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "997:16:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "997:18:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "997:18:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "987:2:1"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "991:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "984:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:10:1"
                        },
                        "nodeType": "YulIf",
                        "src": "981:36:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1026:17:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1040:2:1",
                              "type": "",
                              "value": "31"
                            }
                          ],
                          "functionName": {
                            "name": "not",
                            "nodeType": "YulIdentifier",
                            "src": "1036:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1036:7:1"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "1030:2:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1052:23:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1072:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1066:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1066:9:1"
                        },
                        "variables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1056:6:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1084:71:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1106:6:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "1130:2:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1134:4:1",
                                              "type": "",
                                              "value": "0x1f"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1126:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1126:13:1"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1141:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "1122:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1122:22:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1146:2:1",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1118:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1118:31:1"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1151:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1114:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1114:40:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1102:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1102:53:1"
                        },
                        "variables": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulTypedName",
                            "src": "1088:10:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1214:22:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "1216:16:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1216:18:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1216:18:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1173:10:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1185:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1170:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1170:18:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1193:10:1"
                                },
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1205:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "1190:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1190:22:1"
                            }
                          ],
                          "functionName": {
                            "name": "or",
                            "nodeType": "YulIdentifier",
                            "src": "1167:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1167:46:1"
                        },
                        "nodeType": "YulIf",
                        "src": "1164:72:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1252:2:1",
                              "type": "",
                              "value": "64"
                            },
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "1256:10:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1245:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1245:22:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1245:22:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1283:6:1"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "1291:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1276:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1276:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1276:18:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1340:16:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1349:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1352:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1342:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1342:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1342:12:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1317:2:1"
                                    },
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1321:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1313:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1313:11:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1326:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1309:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1309:20:1"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1331:7:1"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1306:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:33:1"
                        },
                        "nodeType": "YulIf",
                        "src": "1303:53:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1404:2:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1408:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1400:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1400:11:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1417:6:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1425:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1413:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1413:15:1"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "1430:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory_with_cleanup",
                            "nodeType": "YulIdentifier",
                            "src": "1365:34:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1365:68:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1365:68:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1442:16:1",
                        "value": {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "1452:6:1"
                        },
                        "variableNames": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1442:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "466:9:1",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "477:7:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "489:6:1",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "497:6:1",
                      "type": ""
                    }
                  ],
                  "src": "401:1063:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1518:176:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1528:17:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "1540:1:1"
                            },
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "1543:1:1"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "1536:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1536:9:1"
                        },
                        "variableNames": [
                          {
                            "name": "diff",
                            "nodeType": "YulIdentifier",
                            "src": "1528:4:1"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1577:111:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1598:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1605:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1610:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1601:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1601:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1591:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1591:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1591:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1642:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1645:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1635:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1635:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1635:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1670:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1673:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1663:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1663:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1663:15:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "1560:4:1"
                            },
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "1566:1:1"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1557:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1557:11:1"
                        },
                        "nodeType": "YulIf",
                        "src": "1554:134:1"
                      }
                    ]
                  },
                  "name": "checked_sub_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "x",
                      "nodeType": "YulTypedName",
                      "src": "1500:1:1",
                      "type": ""
                    },
                    {
                      "name": "y",
                      "nodeType": "YulTypedName",
                      "src": "1503:1:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "diff",
                      "nodeType": "YulTypedName",
                      "src": "1509:4:1",
                      "type": ""
                    }
                  ],
                  "src": "1469:225:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1731:95:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1748:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1755:3:1",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1760:10:1",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1751:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1751:20:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1741:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1741:31:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1741:31:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1788:1:1",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1791:4:1",
                              "type": "",
                              "value": "0x01"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1781:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1781:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1781:15:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1812:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1815:4:1",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1805:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1805:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1805:15:1"
                      }
                    ]
                  },
                  "name": "panic_error_0x01",
                  "nodeType": "YulFunctionDefinition",
                  "src": "1699:127:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2005:235:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2022:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2033:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2015:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2015:21:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2015:21:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2056:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2067:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2052:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2052:18:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:2:1",
                              "type": "",
                              "value": "45"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2045:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2045:30:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2045:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2095:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2106:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2091:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2091:18:1"
                            },
                            {
                              "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "2111:34:1",
                              "type": "",
                              "value": "ERC1967: new implementation is n"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2084:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2084:62:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2084:62:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2177:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2162:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2162:18:1"
                            },
                            {
                              "hexValue": "6f74206120636f6e7472616374",
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "2182:15:1",
                              "type": "",
                              "value": "ot a contract"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2155:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2155:43:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2155:43:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2207:27:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2219:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2230:3:1",
                              "type": "",
                              "value": "128"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2215:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2215:19:1"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2207:4:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1982:9:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1996:4:1",
                      "type": ""
                    }
                  ],
                  "src": "1831:409:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2419:228:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2436:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2447:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2429:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2429:21:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2429:21:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2470:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2481:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2466:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2466:18:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2486:2:1",
                              "type": "",
                              "value": "38"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2459:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2459:30:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2459:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2509:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2520:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2505:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2505:18:1"
                            },
                            {
                              "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "2525:34:1",
                              "type": "",
                              "value": "Address: delegate call to non-co"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2498:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2498:62:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2498:62:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2580:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2591:2:1",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2576:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2576:18:1"
                            },
                            {
                              "hexValue": "6e7472616374",
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "2596:8:1",
                              "type": "",
                              "value": "ntract"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2569:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2569:36:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2569:36:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2614:27:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2626:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2637:3:1",
                              "type": "",
                              "value": "128"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2622:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2622:19:1"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2614:4:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2396:9:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2410:4:1",
                      "type": ""
                    }
                  ],
                  "src": "2245:402:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2789:150:1",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2799:27:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2819:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2813:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2813:13:1"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2803:6:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2874:6:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2882:4:1",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2870:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2870:17:1"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2889:3:1"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2894:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory_with_cleanup",
                            "nodeType": "YulIdentifier",
                            "src": "2835:34:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2835:66:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2835:66:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2910:23:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2921:3:1"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2926:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2917:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2917:16:1"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2910:3:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2765:3:1",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2770:6:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "2781:3:1",
                      "type": ""
                    }
                  ],
                  "src": "2652:287:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3065:275:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3082:9:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3093:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3075:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3075:21:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3075:21:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3105:27:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3125:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3119:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3119:13:1"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3109:6:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3152:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3163:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3148:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3148:18:1"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3168:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3141:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3141:34:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3141:34:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3223:6:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3231:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3219:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3219:15:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3240:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3251:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3236:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3236:18:1"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3256:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory_with_cleanup",
                            "nodeType": "YulIdentifier",
                            "src": "3184:34:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3184:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3184:79:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3272:62:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3288:9:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "3307:6:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3315:2:1",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3303:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3303:15:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3324:2:1",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "3320:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3320:7:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "3299:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3299:29:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3284:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3284:45:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3331:2:1",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3280:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3280:54:1"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3272:4:1"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3034:9:1",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "3045:6:1",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3056:4:1",
                      "type": ""
                    }
                  ],
                  "src": "2944:396:1"
                }
              ]
            },
            "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
            "id": 1,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b5060405161056338038061056383398101604081905261002f91610309565b818161005c60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6103d7565b60008051602061051c83398151915214610078576100786103f8565b6100848282600061008d565b5050505061045d565b610096836100b9565b6000825111806100a35750805b156100b4576100b283836100f9565b505b505050565b6100c281610127565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061011e838360405180606001604052806027815260200161053c602791396101bf565b90505b92915050565b803b6101905760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b60008051602061051c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060833b61021e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610187565b600080856001600160a01b031685604051610239919061040e565b600060405180830381855af49150503d8060008114610274576040519150601f19603f3d011682016040523d82523d6000602084013e610279565b606091505b50909250905061028a828286610296565b925050505b9392505050565b606083156102a557508161028f565b8251156102b55782518084602001fd5b8160405162461bcd60e51b8152600401610187919061042a565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103005781810151838201526020016102e8565b50506000910152565b6000806040838503121561031c57600080fd5b82516001600160a01b038116811461033357600080fd5b60208401519092506001600160401b038082111561035057600080fd5b818501915085601f83011261036457600080fd5b815181811115610376576103766102cf565b604051601f8201601f19908116603f0116810190838211818310171561039e5761039e6102cf565b816040528281528860208487010111156103b757600080fd5b6103c88360208301602088016102e5565b80955050505050509250929050565b8181038181111561012157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600082516104208184602087016102e5565b9190910192915050565b60208152600082518060208401526104498160408501602087016102e5565b601f01601f19169190910160400192915050565b60b18061046b6000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220b3852f75e2d78f43d08d35e020c10dd31b034c8f2328afd50f5f33755ac8fb8f64736f6c63430008130033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x563 CODESIZE SUB DUP1 PUSH2 0x563 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x309 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x5C PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x51C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x78 JUMPI PUSH2 0x78 PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x84 DUP3 DUP3 PUSH1 0x0 PUSH2 0x8D JUMP JUMPDEST POP POP POP POP PUSH2 0x45D JUMP JUMPDEST PUSH2 0x96 DUP4 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xA3 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xB4 JUMPI PUSH2 0xB2 DUP4 DUP4 PUSH2 0xF9 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53C PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1BF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x51C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x279 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x28A DUP3 DUP3 DUP7 PUSH2 0x296 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A5 JUMPI POP DUP2 PUSH2 0x28F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2B5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x300 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x376 JUMPI PUSH2 0x376 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x39E JUMPI PUSH2 0x39E PUSH2 0x2CF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2E5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x121 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x420 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2E5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x449 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB1 DUP1 PUSH2 0x46B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x1F PUSH1 0x1B PUSH1 0x21 JUMP JUMPDEST PUSH1 0x58 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x53 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x76 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP6 0x2F PUSH22 0xE2D78F43D08D35E020C10DD31B034C8F2328AFD50F5F CALLER PUSH22 0x5AC8FB8F64736F6C63430008130033360894A13BA1A3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65640000000000000000000000 ",
        "sourceMap": "22988:146:0:-:0;;;23028:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23113:5;23120:8;22516:54;22569:1;22524:41;22516:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;22468:103:0;22448:133;;;;:::i;:::-;22591:39;22609:6;22617:5;22624;22591:17;:39::i;:::-;22382:255;;23028:104;;22988:146;;16717:295;16855:29;16866:17;16855:10;:29::i;:::-;16912:1;16898:4;:11;:15;:28;;;;16917:9;16898:28;16894:112;;;16942:53;16971:17;16990:4;16942:28;:53::i;:::-;;16894:112;16717:295;;;:::o;16431:152::-;16497:37;16516:17;16497:18;:37::i;:::-;16549:27;;-1:-1:-1;;;;;16549:27:0;;;;;;;;16431:152;:::o;10368:294::-;10473:12;10516:139;10554:6;10578:4;10516:139;;;;;;;;;;;;;;;;;:20;:139::i;:::-;10497:158;;10368:294;;;;;:::o;16006:319::-;4900:20;;16079:129;;;;-1:-1:-1;;;16079:129:0;;2033:2:1;16079:129:0;;;2015:21:1;2072:2;2052:18;;;2045:30;2111:34;2091:18;;;2084:62;-1:-1:-1;;;2162:18:1;;;2155:43;2215:19;;16079:129:0;;;;;;;;;-1:-1:-1;;;;;;;;;;;16218:100:0;;-1:-1:-1;;;;;;16218:100:0;-1:-1:-1;;;;;16218:100:0;;;;;;;;;;16006:319::o;10848:387::-;10989:12;4900:20;;11013:69;;;;-1:-1:-1;;;11013:69:0;;2447:2:1;11013:69:0;;;2429:21:1;2486:2;2466:18;;;2459:30;2525:34;2505:18;;;2498:62;-1:-1:-1;;;2576:18:1;;;2569:36;2622:19;;11013:69:0;2245:402:1;11013:69:0;11094:12;11108:23;11135:6;-1:-1:-1;;;;;11135:19:0;11155:4;11135:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11093:67:0;;-1:-1:-1;11093:67:0;-1:-1:-1;11177:51:0;11093:67;;11215:12;11177:16;:51::i;:::-;11170:58;;;;10848:387;;;;;;:::o;11455:692::-;11601:12;11629:7;11625:516;;;-1:-1:-1;11659:10:0;11652:17;;11625:516;11770:17;;:21;11766:365;;11964:10;11958:17;12024:15;12011:10;12007:2;12003:19;11996:44;11766:365;12103:12;12096:20;;-1:-1:-1;;;12096:20:0;;;;;;;;:::i;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:1;370:16;;363:27;146:250::o;401:1063::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:1;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;808:14:1;;;805:34;;;835:1;832;825:12;805:34;873:6;862:9;858:22;848:32;;918:7;911:4;907:2;903:13;899:27;889:55;;940:1;937;930:12;889:55;969:2;963:9;991:2;987;984:10;981:36;;;997:18;;:::i;:::-;1072:2;1066:9;1040:2;1126:13;;-1:-1:-1;;1122:22:1;;;1146:2;1118:31;1114:40;1102:53;;;1170:18;;;1190:22;;;1167:46;1164:72;;;1216:18;;:::i;:::-;1256:10;1252:2;1245:22;1291:2;1283:6;1276:18;1331:7;1326:2;1321;1317;1313:11;1309:20;1306:33;1303:53;;;1352:1;1349;1342:12;1303:53;1365:68;1430:2;1425;1417:6;1413:15;1408:2;1404;1400:11;1365:68;:::i;:::-;1452:6;1442:16;;;;;;;401:1063;;;;;:::o;1469:225::-;1536:9;;;1557:11;;;1554:134;;;1610:10;1605:3;1601:20;1598:1;1591:31;1645:4;1642:1;1635:15;1673:4;1670:1;1663:15;1699:127;1760:10;1755:3;1751:20;1748:1;1741:31;1791:4;1788:1;1781:15;1815:4;1812:1;1805:15;2652:287;2781:3;2819:6;2813:13;2835:66;2894:6;2889:3;2882:4;2874:6;2870:17;2835:66;:::i;:::-;2917:16;;;;;2652:287;-1:-1:-1;;2652:287:1:o;2944:396::-;3093:2;3082:9;3075:21;3056:4;3125:6;3119:13;3168:6;3163:2;3152:9;3148:18;3141:34;3184:79;3256:6;3251:2;3240:9;3236:18;3231:2;3223:6;3219:15;3184:79;:::i;:::-;3324:2;3303:15;-1:-1:-1;;3299:29:1;3284:45;;;;3331:2;3280:54;;2944:396;-1:-1:-1;;2944:396:1:o;:::-;22988:146:0;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {
          "@_37": {
            "entryPoint": null,
            "id": 37,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "@_45": {
            "entryPoint": null,
            "id": 45,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "@_beforeFallback_50": {
            "entryPoint": null,
            "id": 50,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "@_delegate_10": {
            "entryPoint": 88,
            "id": 10,
            "parameterSlots": 1,
            "returnSlots": 0
          },
          "@_fallback_29": {
            "entryPoint": 19,
            "id": 29,
            "parameterSlots": 0,
            "returnSlots": 0
          },
          "@_getImplementation_442": {
            "entryPoint": null,
            "id": 442,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@_implementation_809": {
            "entryPoint": 33,
            "id": 809,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@getAddressSlot_381": {
            "entryPoint": null,
            "id": 381,
            "parameterSlots": 1,
            "returnSlots": 1
          }
        },
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220b3852f75e2d78f43d08d35e020c10dd31b034c8f2328afd50f5f33755ac8fb8f64736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x1F PUSH1 0x1B PUSH1 0x21 JUMP JUMPDEST PUSH1 0x58 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x53 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x76 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP6 0x2F PUSH22 0xE2D78F43D08D35E020C10DD31B034C8F2328AFD50F5F CALLER PUSH22 0x5AC8FB8F64736F6C6343000813003300000000000000 ",
        "sourceMap": "22988:146:0:-:0;;;;;;3081:11;:9;:11::i;:::-;22988:146;;2858:11;2505:110;2580:28;2590:17;:15;:17::i;:::-;2580:9;:28::i;:::-;2505:110::o;22715:184::-;22822:12;22857:35;15504:66;15854:54;-1:-1:-1;;;;;15854:54:0;;15775:140;22857:35;22850:42;;22715:184;:::o;1021:1005::-;1359:14;1356:1;1353;1340:34;1670:1;1651;1619:14;1600:1;1568:14;1545:5;1515:170;1759:16;1756:1;1753;1738:38;1797:6;1864:66;;;;1979:16;1976:1;1969:27;1864:66;1899:16;1896:1;1889:27"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "35400",
          "executionCost": "infinite",
          "totalCost": "infinite"
        },
        "external": { "": "infinite" }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 22988,
            "end": 23134,
            "name": "PUSH",
            "source": 0,
            "value": "80"
          },
          {
            "begin": 22988,
            "end": 23134,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 22988, "end": 23134, "name": "MSTORE", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "CALLVALUE", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "DUP1", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "ISZERO", "source": 0 },
          {
            "begin": 23028,
            "end": 23132,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "1"
          },
          { "begin": 23028, "end": 23132, "name": "JUMPI", "source": 0 },
          {
            "begin": 23028,
            "end": 23132,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 23028, "end": 23132, "name": "DUP1", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "REVERT", "source": 0 },
          {
            "begin": 23028,
            "end": 23132,
            "name": "tag",
            "source": 0,
            "value": "1"
          },
          { "begin": 23028, "end": 23132, "name": "JUMPDEST", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "POP", "source": 0 },
          {
            "begin": 23028,
            "end": 23132,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 23028, "end": 23132, "name": "MLOAD", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "PUSHSIZE", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "CODESIZE", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "SUB", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "DUP1", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "PUSHSIZE", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "DUP4", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "CODECOPY", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "DUP2", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "ADD", "source": 0 },
          {
            "begin": 23028,
            "end": 23132,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 23028, "end": 23132, "name": "DUP2", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "SWAP1", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "MSTORE", "source": 0 },
          {
            "begin": 23028,
            "end": 23132,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "2"
          },
          { "begin": 23028, "end": 23132, "name": "SWAP2", "source": 0 },
          {
            "begin": 23028,
            "end": 23132,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "3"
          },
          {
            "begin": 23028,
            "end": 23132,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 23028,
            "end": 23132,
            "name": "tag",
            "source": 0,
            "value": "2"
          },
          { "begin": 23028, "end": 23132, "name": "JUMPDEST", "source": 0 },
          { "begin": 23113, "end": 23118, "name": "DUP2", "source": 0 },
          { "begin": 23120, "end": 23128, "name": "DUP2", "source": 0 },
          {
            "begin": 22516,
            "end": 22570,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "7"
          },
          {
            "begin": 22569,
            "end": 22570,
            "name": "PUSH",
            "source": 0,
            "value": "1"
          },
          {
            "begin": 22524,
            "end": 22565,
            "name": "PUSH",
            "source": 0,
            "value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD"
          },
          {
            "begin": 22516,
            "end": 22570,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "8"
          },
          {
            "begin": 22516,
            "end": 22570,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 22516,
            "end": 22570,
            "name": "tag",
            "source": 0,
            "value": "7"
          },
          { "begin": 22516, "end": 22570, "name": "JUMPDEST", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "0"
          },
          { "begin": -1, "end": -1, "name": "DUP1", "source": -1 },
          { "begin": -1, "end": -1, "name": "MLOAD", "source": -1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "20"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH data",
            "source": -1,
            "value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
          },
          { "begin": -1, "end": -1, "name": "DUP4", "source": -1 },
          { "begin": -1, "end": -1, "name": "CODECOPY", "source": -1 },
          { "begin": -1, "end": -1, "name": "DUP2", "source": -1 },
          { "begin": -1, "end": -1, "name": "MLOAD", "source": -1 },
          { "begin": -1, "end": -1, "name": "SWAP2", "source": -1 },
          { "begin": -1, "end": -1, "name": "MSTORE", "source": -1 },
          { "begin": 22468, "end": 22571, "name": "EQ", "source": 0 },
          {
            "begin": 22448,
            "end": 22581,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "10"
          },
          { "begin": 22448, "end": 22581, "name": "JUMPI", "source": 0 },
          {
            "begin": 22448,
            "end": 22581,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "10"
          },
          {
            "begin": 22448,
            "end": 22581,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "11"
          },
          {
            "begin": 22448,
            "end": 22581,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 22448,
            "end": 22581,
            "name": "tag",
            "source": 0,
            "value": "10"
          },
          { "begin": 22448, "end": 22581, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 22591,
            "end": 22630,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "12"
          },
          { "begin": 22609, "end": 22615, "name": "DUP3", "source": 0 },
          { "begin": 22617, "end": 22622, "name": "DUP3", "source": 0 },
          {
            "begin": 22624,
            "end": 22629,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          {
            "begin": 22591,
            "end": 22608,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "13"
          },
          {
            "begin": 22591,
            "end": 22630,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 22591,
            "end": 22630,
            "name": "tag",
            "source": 0,
            "value": "12"
          },
          { "begin": 22591, "end": 22630, "name": "JUMPDEST", "source": 0 },
          { "begin": 22382, "end": 22637, "name": "POP", "source": 0 },
          { "begin": 22382, "end": 22637, "name": "POP", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "POP", "source": 0 },
          { "begin": 23028, "end": 23132, "name": "POP", "source": 0 },
          {
            "begin": 22988,
            "end": 23134,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "60"
          },
          { "begin": 22988, "end": 23134, "name": "JUMP", "source": 0 },
          {
            "begin": 16717,
            "end": 17012,
            "name": "tag",
            "source": 0,
            "value": "13"
          },
          { "begin": 16717, "end": 17012, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 16855,
            "end": 16884,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "17"
          },
          { "begin": 16866, "end": 16883, "name": "DUP4", "source": 0 },
          {
            "begin": 16855,
            "end": 16865,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "18"
          },
          {
            "begin": 16855,
            "end": 16884,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 16855,
            "end": 16884,
            "name": "tag",
            "source": 0,
            "value": "17"
          },
          { "begin": 16855, "end": 16884, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 16912,
            "end": 16913,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 16898, "end": 16902, "name": "DUP3", "source": 0 },
          { "begin": 16898, "end": 16909, "name": "MLOAD", "source": 0 },
          { "begin": 16898, "end": 16913, "name": "GT", "source": 0 },
          { "begin": 16898, "end": 16926, "name": "DUP1", "source": 0 },
          {
            "begin": 16898,
            "end": 16926,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "19"
          },
          { "begin": 16898, "end": 16926, "name": "JUMPI", "source": 0 },
          { "begin": 16898, "end": 16926, "name": "POP", "source": 0 },
          { "begin": 16917, "end": 16926, "name": "DUP1", "source": 0 },
          {
            "begin": 16898,
            "end": 16926,
            "name": "tag",
            "source": 0,
            "value": "19"
          },
          { "begin": 16898, "end": 16926, "name": "JUMPDEST", "source": 0 },
          { "begin": 16894, "end": 17006, "name": "ISZERO", "source": 0 },
          {
            "begin": 16894,
            "end": 17006,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "20"
          },
          { "begin": 16894, "end": 17006, "name": "JUMPI", "source": 0 },
          {
            "begin": 16942,
            "end": 16995,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "21"
          },
          { "begin": 16971, "end": 16988, "name": "DUP4", "source": 0 },
          { "begin": 16990, "end": 16994, "name": "DUP4", "source": 0 },
          {
            "begin": 16942,
            "end": 16970,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "22"
          },
          {
            "begin": 16942,
            "end": 16995,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 16942,
            "end": 16995,
            "name": "tag",
            "source": 0,
            "value": "21"
          },
          { "begin": 16942, "end": 16995, "name": "JUMPDEST", "source": 0 },
          { "begin": 16942, "end": 16995, "name": "POP", "source": 0 },
          {
            "begin": 16894,
            "end": 17006,
            "name": "tag",
            "source": 0,
            "value": "20"
          },
          { "begin": 16894, "end": 17006, "name": "JUMPDEST", "source": 0 },
          { "begin": 16717, "end": 17012, "name": "POP", "source": 0 },
          { "begin": 16717, "end": 17012, "name": "POP", "source": 0 },
          { "begin": 16717, "end": 17012, "name": "POP", "source": 0 },
          {
            "begin": 16717,
            "end": 17012,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 16431,
            "end": 16583,
            "name": "tag",
            "source": 0,
            "value": "18"
          },
          { "begin": 16431, "end": 16583, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 16497,
            "end": 16534,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "24"
          },
          { "begin": 16516, "end": 16533, "name": "DUP2", "source": 0 },
          {
            "begin": 16497,
            "end": 16515,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "25"
          },
          {
            "begin": 16497,
            "end": 16534,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 16497,
            "end": 16534,
            "name": "tag",
            "source": 0,
            "value": "24"
          },
          { "begin": 16497, "end": 16534, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 16549,
            "end": 16576,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 16549, "end": 16576, "name": "MLOAD", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "A0"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
          { "begin": 16549, "end": 16576, "name": "DUP3", "source": 0 },
          { "begin": 16549, "end": 16576, "name": "AND", "source": 0 },
          { "begin": 16549, "end": 16576, "name": "SWAP1", "source": 0 },
          {
            "begin": 16549,
            "end": 16576,
            "name": "PUSH",
            "source": 0,
            "value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
          },
          { "begin": 16549, "end": 16576, "name": "SWAP1", "source": 0 },
          {
            "begin": 16549,
            "end": 16576,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 16549, "end": 16576, "name": "SWAP1", "source": 0 },
          { "begin": 16549, "end": 16576, "name": "LOG2", "source": 0 },
          { "begin": 16431, "end": 16583, "name": "POP", "source": 0 },
          {
            "begin": 16431,
            "end": 16583,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 10368,
            "end": 10662,
            "name": "tag",
            "source": 0,
            "value": "22"
          },
          { "begin": 10368, "end": 10662, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 10473,
            "end": 10485,
            "name": "PUSH",
            "source": 0,
            "value": "60"
          },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "27"
          },
          { "begin": 10554, "end": 10560, "name": "DUP4", "source": 0 },
          { "begin": 10578, "end": 10582, "name": "DUP4", "source": 0 },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 10516, "end": 10655, "name": "MLOAD", "source": 0 },
          { "begin": 10516, "end": 10655, "name": "DUP1", "source": 0 },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH",
            "source": 0,
            "value": "60"
          },
          { "begin": 10516, "end": 10655, "name": "ADD", "source": 0 },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 10516, "end": 10655, "name": "MSTORE", "source": 0 },
          { "begin": 10516, "end": 10655, "name": "DUP1", "source": 0 },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH",
            "source": 0,
            "value": "27"
          },
          { "begin": 10516, "end": 10655, "name": "DUP2", "source": 0 },
          { "begin": 10516, "end": 10655, "name": "MSTORE", "source": 0 },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 10516, "end": 10655, "name": "ADD", "source": 0 },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH data",
            "source": 0,
            "value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
          },
          {
            "begin": 10516,
            "end": 10655,
            "name": "PUSH",
            "source": 0,
            "value": "27"
          },
          { "begin": 10516, "end": 10655, "name": "SWAP2", "source": 0 },
          { "begin": 10516, "end": 10655, "name": "CODECOPY", "source": 0 },
          {
            "begin": 10516,
            "end": 10536,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "28"
          },
          {
            "begin": 10516,
            "end": 10655,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 10516,
            "end": 10655,
            "name": "tag",
            "source": 0,
            "value": "27"
          },
          { "begin": 10516, "end": 10655, "name": "JUMPDEST", "source": 0 },
          { "begin": 10497, "end": 10655, "name": "SWAP1", "source": 0 },
          { "begin": 10497, "end": 10655, "name": "POP", "source": 0 },
          {
            "begin": 10368,
            "end": 10662,
            "name": "tag",
            "source": 0,
            "value": "26"
          },
          { "begin": 10368, "end": 10662, "name": "JUMPDEST", "source": 0 },
          { "begin": 10368, "end": 10662, "name": "SWAP3", "source": 0 },
          { "begin": 10368, "end": 10662, "name": "SWAP2", "source": 0 },
          { "begin": 10368, "end": 10662, "name": "POP", "source": 0 },
          { "begin": 10368, "end": 10662, "name": "POP", "source": 0 },
          {
            "begin": 10368,
            "end": 10662,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 16006,
            "end": 16325,
            "name": "tag",
            "source": 0,
            "value": "25"
          },
          { "begin": 16006, "end": 16325, "name": "JUMPDEST", "source": 0 },
          { "begin": 4900, "end": 4920, "name": "DUP1", "source": 0 },
          { "begin": 4900, "end": 4920, "name": "EXTCODESIZE", "source": 0 },
          {
            "begin": 16079,
            "end": 16208,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "32"
          },
          { "begin": 16079, "end": 16208, "name": "JUMPI", "source": 0 },
          {
            "begin": 16079,
            "end": 16208,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 16079, "end": 16208, "name": "MLOAD", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "E5"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": 16079, "end": 16208, "name": "DUP2", "source": 0 },
          { "begin": 16079, "end": 16208, "name": "MSTORE", "source": 0 },
          {
            "begin": 2033,
            "end": 2035,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          {
            "begin": 16079,
            "end": 16208,
            "name": "PUSH",
            "source": 0,
            "value": "4"
          },
          { "begin": 16079, "end": 16208, "name": "DUP3", "source": 0 },
          { "begin": 16079, "end": 16208, "name": "ADD", "source": 0 },
          { "begin": 2015, "end": 2036, "name": "MSTORE", "source": 1 },
          {
            "begin": 2072,
            "end": 2074,
            "name": "PUSH",
            "source": 1,
            "value": "2D"
          },
          {
            "begin": 2052,
            "end": 2070,
            "name": "PUSH",
            "source": 1,
            "value": "24"
          },
          { "begin": 2052, "end": 2070, "name": "DUP3", "source": 1 },
          { "begin": 2052, "end": 2070, "name": "ADD", "source": 1 },
          { "begin": 2045, "end": 2075, "name": "MSTORE", "source": 1 },
          {
            "begin": 2111,
            "end": 2145,
            "name": "PUSH",
            "source": 1,
            "value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
          },
          {
            "begin": 2091,
            "end": 2109,
            "name": "PUSH",
            "source": 1,
            "value": "44"
          },
          { "begin": 2091, "end": 2109, "name": "DUP3", "source": 1 },
          { "begin": 2091, "end": 2109, "name": "ADD", "source": 1 },
          { "begin": 2084, "end": 2146, "name": "MSTORE", "source": 1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1BDD08184818DBDB9D1C9858DD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "9A"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          {
            "begin": 2162,
            "end": 2180,
            "name": "PUSH",
            "source": 1,
            "value": "64"
          },
          { "begin": 2162, "end": 2180, "name": "DUP3", "source": 1 },
          { "begin": 2162, "end": 2180, "name": "ADD", "source": 1 },
          { "begin": 2155, "end": 2198, "name": "MSTORE", "source": 1 },
          {
            "begin": 2215,
            "end": 2234,
            "name": "PUSH",
            "source": 1,
            "value": "84"
          },
          { "begin": 2215, "end": 2234, "name": "ADD", "source": 1 },
          {
            "begin": 16079,
            "end": 16208,
            "name": "tag",
            "source": 0,
            "value": "33"
          },
          { "begin": 16079, "end": 16208, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 16079,
            "end": 16208,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 16079, "end": 16208, "name": "MLOAD", "source": 0 },
          { "begin": 16079, "end": 16208, "name": "DUP1", "source": 0 },
          { "begin": 16079, "end": 16208, "name": "SWAP2", "source": 0 },
          { "begin": 16079, "end": 16208, "name": "SUB", "source": 0 },
          { "begin": 16079, "end": 16208, "name": "SWAP1", "source": 0 },
          { "begin": 16079, "end": 16208, "name": "REVERT", "source": 0 },
          {
            "begin": 16079,
            "end": 16208,
            "name": "tag",
            "source": 0,
            "value": "32"
          },
          { "begin": 16079, "end": 16208, "name": "JUMPDEST", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "0"
          },
          { "begin": -1, "end": -1, "name": "DUP1", "source": -1 },
          { "begin": -1, "end": -1, "name": "MLOAD", "source": -1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "20"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH data",
            "source": -1,
            "value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
          },
          { "begin": -1, "end": -1, "name": "DUP4", "source": -1 },
          { "begin": -1, "end": -1, "name": "CODECOPY", "source": -1 },
          { "begin": -1, "end": -1, "name": "DUP2", "source": -1 },
          { "begin": -1, "end": -1, "name": "MLOAD", "source": -1 },
          { "begin": -1, "end": -1, "name": "SWAP2", "source": -1 },
          { "begin": -1, "end": -1, "name": "MSTORE", "source": -1 },
          { "begin": 16218, "end": 16318, "name": "DUP1", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SLOAD", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "A0"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
          { "begin": -1, "end": -1, "name": "NOT", "source": -1 },
          { "begin": 16218, "end": 16318, "name": "AND", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "A0"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
          { "begin": 16218, "end": 16318, "name": "SWAP3", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SWAP1", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SWAP3", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "AND", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SWAP2", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SWAP1", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SWAP2", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "OR", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SWAP1", "source": 0 },
          { "begin": 16218, "end": 16318, "name": "SSTORE", "source": 0 },
          {
            "begin": 16006,
            "end": 16325,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 10848,
            "end": 11235,
            "name": "tag",
            "source": 0,
            "value": "28"
          },
          { "begin": 10848, "end": 11235, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 10989,
            "end": 11001,
            "name": "PUSH",
            "source": 0,
            "value": "60"
          },
          { "begin": 4900, "end": 4920, "name": "DUP4", "source": 0 },
          { "begin": 4900, "end": 4920, "name": "EXTCODESIZE", "source": 0 },
          {
            "begin": 11013,
            "end": 11082,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "39"
          },
          { "begin": 11013, "end": 11082, "name": "JUMPI", "source": 0 },
          {
            "begin": 11013,
            "end": 11082,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 11013, "end": 11082, "name": "MLOAD", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "E5"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": 11013, "end": 11082, "name": "DUP2", "source": 0 },
          { "begin": 11013, "end": 11082, "name": "MSTORE", "source": 0 },
          {
            "begin": 2447,
            "end": 2449,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          {
            "begin": 11013,
            "end": 11082,
            "name": "PUSH",
            "source": 0,
            "value": "4"
          },
          { "begin": 11013, "end": 11082, "name": "DUP3", "source": 0 },
          { "begin": 11013, "end": 11082, "name": "ADD", "source": 0 },
          { "begin": 2429, "end": 2450, "name": "MSTORE", "source": 1 },
          {
            "begin": 2486,
            "end": 2488,
            "name": "PUSH",
            "source": 1,
            "value": "26"
          },
          {
            "begin": 2466,
            "end": 2484,
            "name": "PUSH",
            "source": 1,
            "value": "24"
          },
          { "begin": 2466, "end": 2484, "name": "DUP3", "source": 1 },
          { "begin": 2466, "end": 2484, "name": "ADD", "source": 1 },
          { "begin": 2459, "end": 2489, "name": "MSTORE", "source": 1 },
          {
            "begin": 2525,
            "end": 2559,
            "name": "PUSH",
            "source": 1,
            "value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
          },
          {
            "begin": 2505,
            "end": 2523,
            "name": "PUSH",
            "source": 1,
            "value": "44"
          },
          { "begin": 2505, "end": 2523, "name": "DUP3", "source": 1 },
          { "begin": 2505, "end": 2523, "name": "ADD", "source": 1 },
          { "begin": 2498, "end": 2560, "name": "MSTORE", "source": 1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1B9D1C9858DD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "D2"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          {
            "begin": 2576,
            "end": 2594,
            "name": "PUSH",
            "source": 1,
            "value": "64"
          },
          { "begin": 2576, "end": 2594, "name": "DUP3", "source": 1 },
          { "begin": 2576, "end": 2594, "name": "ADD", "source": 1 },
          { "begin": 2569, "end": 2605, "name": "MSTORE", "source": 1 },
          {
            "begin": 2622,
            "end": 2641,
            "name": "PUSH",
            "source": 1,
            "value": "84"
          },
          { "begin": 2622, "end": 2641, "name": "ADD", "source": 1 },
          {
            "begin": 11013,
            "end": 11082,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "33"
          },
          { "begin": 2245, "end": 2647, "name": "JUMP", "source": 1 },
          {
            "begin": 11013,
            "end": 11082,
            "name": "tag",
            "source": 0,
            "value": "39"
          },
          { "begin": 11013, "end": 11082, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 11094,
            "end": 11106,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 11108, "end": 11131, "name": "DUP1", "source": 0 },
          { "begin": 11135, "end": 11141, "name": "DUP6", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "A0"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
          { "begin": 11135, "end": 11154, "name": "AND", "source": 0 },
          { "begin": 11155, "end": 11159, "name": "DUP6", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 11135, "end": 11160, "name": "MLOAD", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "42"
          },
          { "begin": 11135, "end": 11160, "name": "SWAP2", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "SWAP1", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "43"
          },
          {
            "begin": 11135,
            "end": 11160,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 11135,
            "end": 11160,
            "name": "tag",
            "source": 0,
            "value": "42"
          },
          { "begin": 11135, "end": 11160, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 11135, "end": 11160, "name": "MLOAD", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "DUP1", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "DUP4", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "SUB", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "DUP2", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "DUP6", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "GAS", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "DELEGATECALL", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "SWAP2", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "POP", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "POP", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "RETURNDATASIZE",
            "source": 0
          },
          { "begin": 11135, "end": 11160, "name": "DUP1", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 11135, "end": 11160, "name": "DUP2", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "EQ", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "46"
          },
          { "begin": 11135, "end": 11160, "name": "JUMPI", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 11135, "end": 11160, "name": "MLOAD", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "SWAP2", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "POP", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "1F"
          },
          { "begin": 11135, "end": 11160, "name": "NOT", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "3F"
          },
          {
            "begin": 11135,
            "end": 11160,
            "name": "RETURNDATASIZE",
            "source": 0
          },
          { "begin": 11135, "end": 11160, "name": "ADD", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "AND", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "DUP3", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "ADD", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 11135, "end": 11160, "name": "MSTORE", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "RETURNDATASIZE",
            "source": 0
          },
          { "begin": 11135, "end": 11160, "name": "DUP3", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "MSTORE", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "RETURNDATASIZE",
            "source": 0
          },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 11135, "end": 11160, "name": "DUP5", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "ADD", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "RETURNDATACOPY",
            "source": 0
          },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "45"
          },
          { "begin": 11135, "end": 11160, "name": "JUMP", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "tag",
            "source": 0,
            "value": "46"
          },
          { "begin": 11135, "end": 11160, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "PUSH",
            "source": 0,
            "value": "60"
          },
          { "begin": 11135, "end": 11160, "name": "SWAP2", "source": 0 },
          { "begin": 11135, "end": 11160, "name": "POP", "source": 0 },
          {
            "begin": 11135,
            "end": 11160,
            "name": "tag",
            "source": 0,
            "value": "45"
          },
          { "begin": 11135, "end": 11160, "name": "JUMPDEST", "source": 0 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          { "begin": 11093, "end": 11160, "name": "SWAP1", "source": 0 },
          { "begin": 11093, "end": 11160, "name": "SWAP3", "source": 0 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          { "begin": 11093, "end": 11160, "name": "SWAP1", "source": 0 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          {
            "begin": 11177,
            "end": 11228,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "47"
          },
          { "begin": 11093, "end": 11160, "name": "DUP3", "source": 0 },
          { "begin": 11093, "end": 11160, "name": "DUP3", "source": 0 },
          { "begin": 11215, "end": 11227, "name": "DUP7", "source": 0 },
          {
            "begin": 11177,
            "end": 11193,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "48"
          },
          {
            "begin": 11177,
            "end": 11228,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 11177,
            "end": 11228,
            "name": "tag",
            "source": 0,
            "value": "47"
          },
          { "begin": 11177, "end": 11228, "name": "JUMPDEST", "source": 0 },
          { "begin": 11170, "end": 11228, "name": "SWAP3", "source": 0 },
          { "begin": 11170, "end": 11228, "name": "POP", "source": 0 },
          { "begin": 11170, "end": 11228, "name": "POP", "source": 0 },
          { "begin": 11170, "end": 11228, "name": "POP", "source": 0 },
          {
            "begin": 10848,
            "end": 11235,
            "name": "tag",
            "source": 0,
            "value": "37"
          },
          { "begin": 10848, "end": 11235, "name": "JUMPDEST", "source": 0 },
          { "begin": 10848, "end": 11235, "name": "SWAP4", "source": 0 },
          { "begin": 10848, "end": 11235, "name": "SWAP3", "source": 0 },
          { "begin": 10848, "end": 11235, "name": "POP", "source": 0 },
          { "begin": 10848, "end": 11235, "name": "POP", "source": 0 },
          { "begin": 10848, "end": 11235, "name": "POP", "source": 0 },
          {
            "begin": 10848,
            "end": 11235,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 11455,
            "end": 12147,
            "name": "tag",
            "source": 0,
            "value": "48"
          },
          { "begin": 11455, "end": 12147, "name": "JUMPDEST", "source": 0 },
          {
            "begin": 11601,
            "end": 11613,
            "name": "PUSH",
            "source": 0,
            "value": "60"
          },
          { "begin": 11629, "end": 11636, "name": "DUP4", "source": 0 },
          { "begin": 11625, "end": 12141, "name": "ISZERO", "source": 0 },
          {
            "begin": 11625,
            "end": 12141,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "52"
          },
          { "begin": 11625, "end": 12141, "name": "JUMPI", "source": 0 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          { "begin": 11659, "end": 11669, "name": "DUP2", "source": 0 },
          {
            "begin": 11652,
            "end": 11669,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "37"
          },
          { "begin": 11652, "end": 11669, "name": "JUMP", "source": 0 },
          {
            "begin": 11625,
            "end": 12141,
            "name": "tag",
            "source": 0,
            "value": "52"
          },
          { "begin": 11625, "end": 12141, "name": "JUMPDEST", "source": 0 },
          { "begin": 11770, "end": 11787, "name": "DUP3", "source": 0 },
          { "begin": 11770, "end": 11787, "name": "MLOAD", "source": 0 },
          { "begin": 11770, "end": 11791, "name": "ISZERO", "source": 0 },
          {
            "begin": 11766,
            "end": 12131,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "54"
          },
          { "begin": 11766, "end": 12131, "name": "JUMPI", "source": 0 },
          { "begin": 11964, "end": 11974, "name": "DUP3", "source": 0 },
          { "begin": 11958, "end": 11975, "name": "MLOAD", "source": 0 },
          { "begin": 12024, "end": 12039, "name": "DUP1", "source": 0 },
          { "begin": 12011, "end": 12021, "name": "DUP5", "source": 0 },
          {
            "begin": 12007,
            "end": 12009,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          { "begin": 12003, "end": 12022, "name": "ADD", "source": 0 },
          { "begin": 11996, "end": 12040, "name": "REVERT", "source": 0 },
          {
            "begin": 11766,
            "end": 12131,
            "name": "tag",
            "source": 0,
            "value": "54"
          },
          { "begin": 11766, "end": 12131, "name": "JUMPDEST", "source": 0 },
          { "begin": 12103, "end": 12115, "name": "DUP2", "source": 0 },
          {
            "begin": 12096,
            "end": 12116,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 12096, "end": 12116, "name": "MLOAD", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "E5"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": 12096, "end": 12116, "name": "DUP2", "source": 0 },
          { "begin": 12096, "end": 12116, "name": "MSTORE", "source": 0 },
          {
            "begin": 12096,
            "end": 12116,
            "name": "PUSH",
            "source": 0,
            "value": "4"
          },
          { "begin": 12096, "end": 12116, "name": "ADD", "source": 0 },
          {
            "begin": 12096,
            "end": 12116,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "33"
          },
          { "begin": 12096, "end": 12116, "name": "SWAP2", "source": 0 },
          { "begin": 12096, "end": 12116, "name": "SWAP1", "source": 0 },
          {
            "begin": 12096,
            "end": 12116,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "57"
          },
          {
            "begin": 12096,
            "end": 12116,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 0
          },
          {
            "begin": 14,
            "end": 141,
            "name": "tag",
            "source": 1,
            "value": "58"
          },
          { "begin": 14, "end": 141, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 75,
            "end": 85,
            "name": "PUSH",
            "source": 1,
            "value": "4E487B71"
          },
          {
            "begin": 70,
            "end": 73,
            "name": "PUSH",
            "source": 1,
            "value": "E0"
          },
          { "begin": 66, "end": 86, "name": "SHL", "source": 1 },
          { "begin": 63, "end": 64, "name": "PUSH", "source": 1, "value": "0" },
          { "begin": 56, "end": 87, "name": "MSTORE", "source": 1 },
          {
            "begin": 106,
            "end": 110,
            "name": "PUSH",
            "source": 1,
            "value": "41"
          },
          {
            "begin": 103,
            "end": 104,
            "name": "PUSH",
            "source": 1,
            "value": "4"
          },
          { "begin": 96, "end": 111, "name": "MSTORE", "source": 1 },
          {
            "begin": 130,
            "end": 134,
            "name": "PUSH",
            "source": 1,
            "value": "24"
          },
          {
            "begin": 127,
            "end": 128,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 120, "end": 135, "name": "REVERT", "source": 1 },
          {
            "begin": 146,
            "end": 396,
            "name": "tag",
            "source": 1,
            "value": "59"
          },
          { "begin": 146, "end": 396, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 231,
            "end": 232,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          {
            "begin": 241,
            "end": 354,
            "name": "tag",
            "source": 1,
            "value": "63"
          },
          { "begin": 241, "end": 354, "name": "JUMPDEST", "source": 1 },
          { "begin": 255, "end": 261, "name": "DUP4", "source": 1 },
          { "begin": 252, "end": 253, "name": "DUP2", "source": 1 },
          { "begin": 249, "end": 262, "name": "LT", "source": 1 },
          { "begin": 241, "end": 354, "name": "ISZERO", "source": 1 },
          {
            "begin": 241,
            "end": 354,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "65"
          },
          { "begin": 241, "end": 354, "name": "JUMPI", "source": 1 },
          { "begin": 331, "end": 342, "name": "DUP2", "source": 1 },
          { "begin": 331, "end": 342, "name": "DUP2", "source": 1 },
          { "begin": 331, "end": 342, "name": "ADD", "source": 1 },
          { "begin": 325, "end": 343, "name": "MLOAD", "source": 1 },
          { "begin": 312, "end": 323, "name": "DUP4", "source": 1 },
          { "begin": 312, "end": 323, "name": "DUP3", "source": 1 },
          { "begin": 312, "end": 323, "name": "ADD", "source": 1 },
          { "begin": 305, "end": 344, "name": "MSTORE", "source": 1 },
          {
            "begin": 277,
            "end": 279,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 270, "end": 280, "name": "ADD", "source": 1 },
          {
            "begin": 241,
            "end": 354,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "63"
          },
          { "begin": 241, "end": 354, "name": "JUMP", "source": 1 },
          {
            "begin": 241,
            "end": 354,
            "name": "tag",
            "source": 1,
            "value": "65"
          },
          { "begin": 241, "end": 354, "name": "JUMPDEST", "source": 1 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          {
            "begin": 388,
            "end": 389,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 370, "end": 386, "name": "SWAP2", "source": 1 },
          { "begin": 370, "end": 386, "name": "ADD", "source": 1 },
          { "begin": 363, "end": 390, "name": "MSTORE", "source": 1 },
          {
            "begin": 146,
            "end": 396,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 401,
            "end": 1464,
            "name": "tag",
            "source": 1,
            "value": "3"
          },
          { "begin": 401, "end": 1464, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 489,
            "end": 495,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 497, "end": 503, "name": "DUP1", "source": 1 },
          {
            "begin": 550,
            "end": 552,
            "name": "PUSH",
            "source": 1,
            "value": "40"
          },
          { "begin": 538, "end": 547, "name": "DUP4", "source": 1 },
          { "begin": 529, "end": 536, "name": "DUP6", "source": 1 },
          { "begin": 525, "end": 548, "name": "SUB", "source": 1 },
          { "begin": 521, "end": 553, "name": "SLT", "source": 1 },
          { "begin": 518, "end": 570, "name": "ISZERO", "source": 1 },
          {
            "begin": 518,
            "end": 570,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "67"
          },
          { "begin": 518, "end": 570, "name": "JUMPI", "source": 1 },
          {
            "begin": 566,
            "end": 567,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 563, "end": 564, "name": "DUP1", "source": 1 },
          { "begin": 556, "end": 568, "name": "REVERT", "source": 1 },
          {
            "begin": 518,
            "end": 570,
            "name": "tag",
            "source": 1,
            "value": "67"
          },
          { "begin": 518, "end": 570, "name": "JUMPDEST", "source": 1 },
          { "begin": 592, "end": 608, "name": "DUP3", "source": 1 },
          { "begin": 592, "end": 608, "name": "MLOAD", "source": 1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "A0"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
          { "begin": 637, "end": 668, "name": "DUP2", "source": 1 },
          { "begin": 637, "end": 668, "name": "AND", "source": 1 },
          { "begin": 627, "end": 669, "name": "DUP2", "source": 1 },
          { "begin": 627, "end": 669, "name": "EQ", "source": 1 },
          {
            "begin": 617,
            "end": 687,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "68"
          },
          { "begin": 617, "end": 687, "name": "JUMPI", "source": 1 },
          {
            "begin": 683,
            "end": 684,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 680, "end": 681, "name": "DUP1", "source": 1 },
          { "begin": 673, "end": 685, "name": "REVERT", "source": 1 },
          {
            "begin": 617,
            "end": 687,
            "name": "tag",
            "source": 1,
            "value": "68"
          },
          { "begin": 617, "end": 687, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 755,
            "end": 757,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 740, "end": 758, "name": "DUP5", "source": 1 },
          { "begin": 740, "end": 758, "name": "ADD", "source": 1 },
          { "begin": 734, "end": 759, "name": "MLOAD", "source": 1 },
          { "begin": 706, "end": 711, "name": "SWAP1", "source": 1 },
          { "begin": 706, "end": 711, "name": "SWAP3", "source": 1 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "40"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
          { "begin": 808, "end": 822, "name": "DUP1", "source": 1 },
          { "begin": 808, "end": 822, "name": "DUP3", "source": 1 },
          { "begin": 808, "end": 822, "name": "GT", "source": 1 },
          { "begin": 805, "end": 839, "name": "ISZERO", "source": 1 },
          {
            "begin": 805,
            "end": 839,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "69"
          },
          { "begin": 805, "end": 839, "name": "JUMPI", "source": 1 },
          {
            "begin": 835,
            "end": 836,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 832, "end": 833, "name": "DUP1", "source": 1 },
          { "begin": 825, "end": 837, "name": "REVERT", "source": 1 },
          {
            "begin": 805,
            "end": 839,
            "name": "tag",
            "source": 1,
            "value": "69"
          },
          { "begin": 805, "end": 839, "name": "JUMPDEST", "source": 1 },
          { "begin": 873, "end": 879, "name": "DUP2", "source": 1 },
          { "begin": 862, "end": 871, "name": "DUP6", "source": 1 },
          { "begin": 858, "end": 880, "name": "ADD", "source": 1 },
          { "begin": 848, "end": 880, "name": "SWAP2", "source": 1 },
          { "begin": 848, "end": 880, "name": "POP", "source": 1 },
          { "begin": 918, "end": 925, "name": "DUP6", "source": 1 },
          {
            "begin": 911,
            "end": 915,
            "name": "PUSH",
            "source": 1,
            "value": "1F"
          },
          { "begin": 907, "end": 909, "name": "DUP4", "source": 1 },
          { "begin": 903, "end": 916, "name": "ADD", "source": 1 },
          { "begin": 899, "end": 926, "name": "SLT", "source": 1 },
          {
            "begin": 889,
            "end": 944,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "70"
          },
          { "begin": 889, "end": 944, "name": "JUMPI", "source": 1 },
          {
            "begin": 940,
            "end": 941,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 937, "end": 938, "name": "DUP1", "source": 1 },
          { "begin": 930, "end": 942, "name": "REVERT", "source": 1 },
          {
            "begin": 889,
            "end": 944,
            "name": "tag",
            "source": 1,
            "value": "70"
          },
          { "begin": 889, "end": 944, "name": "JUMPDEST", "source": 1 },
          { "begin": 969, "end": 971, "name": "DUP2", "source": 1 },
          { "begin": 963, "end": 972, "name": "MLOAD", "source": 1 },
          { "begin": 991, "end": 993, "name": "DUP2", "source": 1 },
          { "begin": 987, "end": 989, "name": "DUP2", "source": 1 },
          { "begin": 984, "end": 994, "name": "GT", "source": 1 },
          { "begin": 981, "end": 1017, "name": "ISZERO", "source": 1 },
          {
            "begin": 981,
            "end": 1017,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "72"
          },
          { "begin": 981, "end": 1017, "name": "JUMPI", "source": 1 },
          {
            "begin": 997,
            "end": 1015,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "72"
          },
          {
            "begin": 997,
            "end": 1015,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "58"
          },
          {
            "begin": 997,
            "end": 1015,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 997,
            "end": 1015,
            "name": "tag",
            "source": 1,
            "value": "72"
          },
          { "begin": 997, "end": 1015, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 1072,
            "end": 1074,
            "name": "PUSH",
            "source": 1,
            "value": "40"
          },
          { "begin": 1066, "end": 1075, "name": "MLOAD", "source": 1 },
          {
            "begin": 1040,
            "end": 1042,
            "name": "PUSH",
            "source": 1,
            "value": "1F"
          },
          { "begin": 1126, "end": 1139, "name": "DUP3", "source": 1 },
          { "begin": 1126, "end": 1139, "name": "ADD", "source": 1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1F"
          },
          { "begin": -1, "end": -1, "name": "NOT", "source": -1 },
          { "begin": 1122, "end": 1144, "name": "SWAP1", "source": 1 },
          { "begin": 1122, "end": 1144, "name": "DUP2", "source": 1 },
          { "begin": 1122, "end": 1144, "name": "AND", "source": 1 },
          {
            "begin": 1146,
            "end": 1148,
            "name": "PUSH",
            "source": 1,
            "value": "3F"
          },
          { "begin": 1118, "end": 1149, "name": "ADD", "source": 1 },
          { "begin": 1114, "end": 1154, "name": "AND", "source": 1 },
          { "begin": 1102, "end": 1155, "name": "DUP2", "source": 1 },
          { "begin": 1102, "end": 1155, "name": "ADD", "source": 1 },
          { "begin": 1102, "end": 1155, "name": "SWAP1", "source": 1 },
          { "begin": 1170, "end": 1188, "name": "DUP4", "source": 1 },
          { "begin": 1170, "end": 1188, "name": "DUP3", "source": 1 },
          { "begin": 1170, "end": 1188, "name": "GT", "source": 1 },
          { "begin": 1190, "end": 1212, "name": "DUP2", "source": 1 },
          { "begin": 1190, "end": 1212, "name": "DUP4", "source": 1 },
          { "begin": 1190, "end": 1212, "name": "LT", "source": 1 },
          { "begin": 1167, "end": 1213, "name": "OR", "source": 1 },
          { "begin": 1164, "end": 1236, "name": "ISZERO", "source": 1 },
          {
            "begin": 1164,
            "end": 1236,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "74"
          },
          { "begin": 1164, "end": 1236, "name": "JUMPI", "source": 1 },
          {
            "begin": 1216,
            "end": 1234,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "74"
          },
          {
            "begin": 1216,
            "end": 1234,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "58"
          },
          {
            "begin": 1216,
            "end": 1234,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 1216,
            "end": 1234,
            "name": "tag",
            "source": 1,
            "value": "74"
          },
          { "begin": 1216, "end": 1234, "name": "JUMPDEST", "source": 1 },
          { "begin": 1256, "end": 1266, "name": "DUP2", "source": 1 },
          {
            "begin": 1252,
            "end": 1254,
            "name": "PUSH",
            "source": 1,
            "value": "40"
          },
          { "begin": 1245, "end": 1267, "name": "MSTORE", "source": 1 },
          { "begin": 1291, "end": 1293, "name": "DUP3", "source": 1 },
          { "begin": 1283, "end": 1289, "name": "DUP2", "source": 1 },
          { "begin": 1276, "end": 1294, "name": "MSTORE", "source": 1 },
          { "begin": 1331, "end": 1338, "name": "DUP9", "source": 1 },
          {
            "begin": 1326,
            "end": 1328,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 1321, "end": 1323, "name": "DUP5", "source": 1 },
          { "begin": 1317, "end": 1319, "name": "DUP8", "source": 1 },
          { "begin": 1313, "end": 1324, "name": "ADD", "source": 1 },
          { "begin": 1309, "end": 1329, "name": "ADD", "source": 1 },
          { "begin": 1306, "end": 1339, "name": "GT", "source": 1 },
          { "begin": 1303, "end": 1356, "name": "ISZERO", "source": 1 },
          {
            "begin": 1303,
            "end": 1356,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "75"
          },
          { "begin": 1303, "end": 1356, "name": "JUMPI", "source": 1 },
          {
            "begin": 1352,
            "end": 1353,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 1349, "end": 1350, "name": "DUP1", "source": 1 },
          { "begin": 1342, "end": 1354, "name": "REVERT", "source": 1 },
          {
            "begin": 1303,
            "end": 1356,
            "name": "tag",
            "source": 1,
            "value": "75"
          },
          { "begin": 1303, "end": 1356, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 1365,
            "end": 1433,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "76"
          },
          { "begin": 1430, "end": 1432, "name": "DUP4", "source": 1 },
          {
            "begin": 1425,
            "end": 1427,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 1417, "end": 1423, "name": "DUP4", "source": 1 },
          { "begin": 1413, "end": 1428, "name": "ADD", "source": 1 },
          {
            "begin": 1408,
            "end": 1410,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 1404, "end": 1406, "name": "DUP9", "source": 1 },
          { "begin": 1400, "end": 1411, "name": "ADD", "source": 1 },
          {
            "begin": 1365,
            "end": 1433,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "59"
          },
          {
            "begin": 1365,
            "end": 1433,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 1365,
            "end": 1433,
            "name": "tag",
            "source": 1,
            "value": "76"
          },
          { "begin": 1365, "end": 1433, "name": "JUMPDEST", "source": 1 },
          { "begin": 1452, "end": 1458, "name": "DUP1", "source": 1 },
          { "begin": 1442, "end": 1458, "name": "SWAP6", "source": 1 },
          { "begin": 1442, "end": 1458, "name": "POP", "source": 1 },
          { "begin": 1442, "end": 1458, "name": "POP", "source": 1 },
          { "begin": 1442, "end": 1458, "name": "POP", "source": 1 },
          { "begin": 1442, "end": 1458, "name": "POP", "source": 1 },
          { "begin": 1442, "end": 1458, "name": "POP", "source": 1 },
          { "begin": 1442, "end": 1458, "name": "POP", "source": 1 },
          { "begin": 401, "end": 1464, "name": "SWAP3", "source": 1 },
          { "begin": 401, "end": 1464, "name": "POP", "source": 1 },
          { "begin": 401, "end": 1464, "name": "SWAP3", "source": 1 },
          { "begin": 401, "end": 1464, "name": "SWAP1", "source": 1 },
          { "begin": 401, "end": 1464, "name": "POP", "source": 1 },
          {
            "begin": 401,
            "end": 1464,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 1469,
            "end": 1694,
            "name": "tag",
            "source": 1,
            "value": "8"
          },
          { "begin": 1469, "end": 1694, "name": "JUMPDEST", "source": 1 },
          { "begin": 1536, "end": 1545, "name": "DUP2", "source": 1 },
          { "begin": 1536, "end": 1545, "name": "DUP2", "source": 1 },
          { "begin": 1536, "end": 1545, "name": "SUB", "source": 1 },
          { "begin": 1557, "end": 1568, "name": "DUP2", "source": 1 },
          { "begin": 1557, "end": 1568, "name": "DUP2", "source": 1 },
          { "begin": 1557, "end": 1568, "name": "GT", "source": 1 },
          { "begin": 1554, "end": 1688, "name": "ISZERO", "source": 1 },
          {
            "begin": 1554,
            "end": 1688,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "26"
          },
          { "begin": 1554, "end": 1688, "name": "JUMPI", "source": 1 },
          {
            "begin": 1610,
            "end": 1620,
            "name": "PUSH",
            "source": 1,
            "value": "4E487B71"
          },
          {
            "begin": 1605,
            "end": 1608,
            "name": "PUSH",
            "source": 1,
            "value": "E0"
          },
          { "begin": 1601, "end": 1621, "name": "SHL", "source": 1 },
          {
            "begin": 1598,
            "end": 1599,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 1591, "end": 1622, "name": "MSTORE", "source": 1 },
          {
            "begin": 1645,
            "end": 1649,
            "name": "PUSH",
            "source": 1,
            "value": "11"
          },
          {
            "begin": 1642,
            "end": 1643,
            "name": "PUSH",
            "source": 1,
            "value": "4"
          },
          { "begin": 1635, "end": 1650, "name": "MSTORE", "source": 1 },
          {
            "begin": 1673,
            "end": 1677,
            "name": "PUSH",
            "source": 1,
            "value": "24"
          },
          {
            "begin": 1670,
            "end": 1671,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 1663, "end": 1678, "name": "REVERT", "source": 1 },
          {
            "begin": 1699,
            "end": 1826,
            "name": "tag",
            "source": 1,
            "value": "11"
          },
          { "begin": 1699, "end": 1826, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 1760,
            "end": 1770,
            "name": "PUSH",
            "source": 1,
            "value": "4E487B71"
          },
          {
            "begin": 1755,
            "end": 1758,
            "name": "PUSH",
            "source": 1,
            "value": "E0"
          },
          { "begin": 1751, "end": 1771, "name": "SHL", "source": 1 },
          {
            "begin": 1748,
            "end": 1749,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 1741, "end": 1772, "name": "MSTORE", "source": 1 },
          {
            "begin": 1791,
            "end": 1795,
            "name": "PUSH",
            "source": 1,
            "value": "1"
          },
          {
            "begin": 1788,
            "end": 1789,
            "name": "PUSH",
            "source": 1,
            "value": "4"
          },
          { "begin": 1781, "end": 1796, "name": "MSTORE", "source": 1 },
          {
            "begin": 1815,
            "end": 1819,
            "name": "PUSH",
            "source": 1,
            "value": "24"
          },
          {
            "begin": 1812,
            "end": 1813,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 1805, "end": 1820, "name": "REVERT", "source": 1 },
          {
            "begin": 2652,
            "end": 2939,
            "name": "tag",
            "source": 1,
            "value": "43"
          },
          { "begin": 2652, "end": 2939, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 2781,
            "end": 2784,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 2819, "end": 2825, "name": "DUP3", "source": 1 },
          { "begin": 2813, "end": 2826, "name": "MLOAD", "source": 1 },
          {
            "begin": 2835,
            "end": 2901,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "83"
          },
          { "begin": 2894, "end": 2900, "name": "DUP2", "source": 1 },
          { "begin": 2889, "end": 2892, "name": "DUP5", "source": 1 },
          {
            "begin": 2882,
            "end": 2886,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 2874, "end": 2880, "name": "DUP8", "source": 1 },
          { "begin": 2870, "end": 2887, "name": "ADD", "source": 1 },
          {
            "begin": 2835,
            "end": 2901,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "59"
          },
          {
            "begin": 2835,
            "end": 2901,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 2835,
            "end": 2901,
            "name": "tag",
            "source": 1,
            "value": "83"
          },
          { "begin": 2835, "end": 2901, "name": "JUMPDEST", "source": 1 },
          { "begin": 2917, "end": 2933, "name": "SWAP2", "source": 1 },
          { "begin": 2917, "end": 2933, "name": "SWAP1", "source": 1 },
          { "begin": 2917, "end": 2933, "name": "SWAP2", "source": 1 },
          { "begin": 2917, "end": 2933, "name": "ADD", "source": 1 },
          { "begin": 2917, "end": 2933, "name": "SWAP3", "source": 1 },
          { "begin": 2652, "end": 2939, "name": "SWAP2", "source": 1 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          {
            "begin": 2652,
            "end": 2939,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 2944,
            "end": 3340,
            "name": "tag",
            "source": 1,
            "value": "57"
          },
          { "begin": 2944, "end": 3340, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 3093,
            "end": 3095,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 3082, "end": 3091, "name": "DUP2", "source": 1 },
          { "begin": 3075, "end": 3096, "name": "MSTORE", "source": 1 },
          {
            "begin": 3056,
            "end": 3060,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 3125, "end": 3131, "name": "DUP3", "source": 1 },
          { "begin": 3119, "end": 3132, "name": "MLOAD", "source": 1 },
          { "begin": 3168, "end": 3174, "name": "DUP1", "source": 1 },
          {
            "begin": 3163,
            "end": 3165,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 3152, "end": 3161, "name": "DUP5", "source": 1 },
          { "begin": 3148, "end": 3166, "name": "ADD", "source": 1 },
          { "begin": 3141, "end": 3175, "name": "MSTORE", "source": 1 },
          {
            "begin": 3184,
            "end": 3263,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "85"
          },
          { "begin": 3256, "end": 3262, "name": "DUP2", "source": 1 },
          {
            "begin": 3251,
            "end": 3253,
            "name": "PUSH",
            "source": 1,
            "value": "40"
          },
          { "begin": 3240, "end": 3249, "name": "DUP6", "source": 1 },
          { "begin": 3236, "end": 3254, "name": "ADD", "source": 1 },
          {
            "begin": 3231,
            "end": 3233,
            "name": "PUSH",
            "source": 1,
            "value": "20"
          },
          { "begin": 3223, "end": 3229, "name": "DUP8", "source": 1 },
          { "begin": 3219, "end": 3234, "name": "ADD", "source": 1 },
          {
            "begin": 3184,
            "end": 3263,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "59"
          },
          {
            "begin": 3184,
            "end": 3263,
            "jumpType": "[in]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 3184,
            "end": 3263,
            "name": "tag",
            "source": 1,
            "value": "85"
          },
          { "begin": 3184, "end": 3263, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 3324,
            "end": 3326,
            "name": "PUSH",
            "source": 1,
            "value": "1F"
          },
          { "begin": 3303, "end": 3318, "name": "ADD", "source": 1 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "1F"
          },
          { "begin": -1, "end": -1, "name": "NOT", "source": -1 },
          { "begin": 3299, "end": 3328, "name": "AND", "source": 1 },
          { "begin": 3284, "end": 3329, "name": "SWAP2", "source": 1 },
          { "begin": 3284, "end": 3329, "name": "SWAP1", "source": 1 },
          { "begin": 3284, "end": 3329, "name": "SWAP2", "source": 1 },
          { "begin": 3284, "end": 3329, "name": "ADD", "source": 1 },
          {
            "begin": 3331,
            "end": 3333,
            "name": "PUSH",
            "source": 1,
            "value": "40"
          },
          { "begin": 3280, "end": 3334, "name": "ADD", "source": 1 },
          { "begin": 3280, "end": 3334, "name": "SWAP3", "source": 1 },
          { "begin": 2944, "end": 3340, "name": "SWAP2", "source": 1 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          { "begin": -1, "end": -1, "name": "POP", "source": -1 },
          {
            "begin": 2944,
            "end": 3340,
            "jumpType": "[out]",
            "name": "JUMP",
            "source": 1
          },
          {
            "begin": 2944,
            "end": 3340,
            "name": "tag",
            "source": 1,
            "value": "60"
          },
          { "begin": 2944, "end": 3340, "name": "JUMPDEST", "source": 1 },
          {
            "begin": 22988,
            "end": 23134,
            "name": "PUSH #[$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 22988, "end": 23134, "name": "DUP1", "source": 0 },
          {
            "begin": 22988,
            "end": 23134,
            "name": "PUSH [$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 22988,
            "end": 23134,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 22988, "end": 23134, "name": "CODECOPY", "source": 0 },
          {
            "begin": 22988,
            "end": 23134,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 22988, "end": 23134, "name": "RETURN", "source": 0 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a2646970667358221220b3852f75e2d78f43d08d35e020c10dd31b034c8f2328afd50f5f33755ac8fb8f64736f6c63430008130033",
            ".code": [
              {
                "begin": 22988,
                "end": 23134,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 22988,
                "end": 23134,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 22988, "end": 23134, "name": "MSTORE", "source": 0 },
              {
                "begin": 22988,
                "end": 23134,
                "name": "CALLDATASIZE",
                "source": 0
              },
              {
                "begin": 22988,
                "end": 23134,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "2"
              },
              { "begin": 22988, "end": 23134, "name": "JUMPI", "source": 0 },
              {
                "begin": 3081,
                "end": 3092,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "5"
              },
              {
                "begin": 3081,
                "end": 3090,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "6"
              },
              {
                "begin": 3081,
                "end": 3092,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 3081,
                "end": 3092,
                "name": "tag",
                "source": 0,
                "value": "5"
              },
              { "begin": 3081, "end": 3092, "name": "JUMPDEST", "source": 0 },
              { "begin": 22988, "end": 23134, "name": "STOP", "source": 0 },
              {
                "begin": 22988,
                "end": 23134,
                "name": "tag",
                "source": 0,
                "value": "2"
              },
              { "begin": 22988, "end": 23134, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 2858,
                "end": 2869,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "5"
              },
              {
                "begin": 2505,
                "end": 2615,
                "name": "tag",
                "source": 0,
                "value": "6"
              },
              { "begin": 2505, "end": 2615, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 2580,
                "end": 2608,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "13"
              },
              {
                "begin": 2590,
                "end": 2607,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "14"
              },
              {
                "begin": 2590,
                "end": 2605,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "15"
              },
              {
                "begin": 2590,
                "end": 2607,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 2590,
                "end": 2607,
                "name": "tag",
                "source": 0,
                "value": "14"
              },
              { "begin": 2590, "end": 2607, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 2580,
                "end": 2589,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "16"
              },
              {
                "begin": 2580,
                "end": 2608,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 2580,
                "end": 2608,
                "name": "tag",
                "source": 0,
                "value": "13"
              },
              { "begin": 2580, "end": 2608, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 2505,
                "end": 2615,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 22715,
                "end": 22899,
                "name": "tag",
                "source": 0,
                "value": "15"
              },
              { "begin": 22715, "end": 22899, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 22822,
                "end": 22834,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              {
                "begin": 22857,
                "end": 22892,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "19"
              },
              {
                "begin": 15504,
                "end": 15570,
                "name": "PUSH",
                "source": 0,
                "value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
              },
              { "begin": 15854, "end": 15908, "name": "SLOAD", "source": 0 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 15854, "end": 15908, "name": "AND", "source": 0 },
              { "begin": 15854, "end": 15908, "name": "SWAP1", "source": 0 },
              { "begin": 15775, "end": 15915, "name": "JUMP", "source": 0 },
              {
                "begin": 22857,
                "end": 22892,
                "name": "tag",
                "source": 0,
                "value": "19"
              },
              { "begin": 22857, "end": 22892, "name": "JUMPDEST", "source": 0 },
              { "begin": 22850, "end": 22892, "name": "SWAP1", "source": 0 },
              { "begin": 22850, "end": 22892, "name": "POP", "source": 0 },
              { "begin": 22715, "end": 22899, "name": "SWAP1", "source": 0 },
              {
                "begin": 22715,
                "end": 22899,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 0
              },
              {
                "begin": 1021,
                "end": 2026,
                "name": "tag",
                "source": 0,
                "value": "16"
              },
              { "begin": 1021, "end": 2026, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1359,
                "end": 1373,
                "name": "CALLDATASIZE",
                "source": 0
              },
              {
                "begin": 1356,
                "end": 1357,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1353, "end": 1354, "name": "DUP1", "source": 0 },
              {
                "begin": 1340,
                "end": 1374,
                "name": "CALLDATACOPY",
                "source": 0
              },
              {
                "begin": 1670,
                "end": 1671,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1651, "end": 1652, "name": "DUP1", "source": 0 },
              {
                "begin": 1619,
                "end": 1633,
                "name": "CALLDATASIZE",
                "source": 0
              },
              {
                "begin": 1600,
                "end": 1601,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1568, "end": 1582, "name": "DUP5", "source": 0 },
              { "begin": 1545, "end": 1550, "name": "GAS", "source": 0 },
              {
                "begin": 1515,
                "end": 1685,
                "name": "DELEGATECALL",
                "source": 0
              },
              {
                "begin": 1759,
                "end": 1775,
                "name": "RETURNDATASIZE",
                "source": 0
              },
              {
                "begin": 1756,
                "end": 1757,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1753, "end": 1754, "name": "DUP1", "source": 0 },
              {
                "begin": 1738,
                "end": 1776,
                "name": "RETURNDATACOPY",
                "source": 0
              },
              { "begin": 1797, "end": 1803, "name": "DUP1", "source": 0 },
              { "begin": 1864, "end": 1930, "name": "DUP1", "source": 0 },
              { "begin": 1864, "end": 1930, "name": "ISZERO", "source": 0 },
              {
                "begin": 1864,
                "end": 1930,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "23"
              },
              { "begin": 1864, "end": 1930, "name": "JUMPI", "source": 0 },
              {
                "begin": 1979,
                "end": 1995,
                "name": "RETURNDATASIZE",
                "source": 0
              },
              {
                "begin": 1976,
                "end": 1977,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1969, "end": 1996, "name": "RETURN", "source": 0 },
              {
                "begin": 1864,
                "end": 1930,
                "name": "tag",
                "source": 0,
                "value": "23"
              },
              { "begin": 1864, "end": 1930, "name": "JUMPDEST", "source": 0 },
              {
                "begin": 1899,
                "end": 1915,
                "name": "RETURNDATASIZE",
                "source": 0
              },
              {
                "begin": 1896,
                "end": 1897,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 1889, "end": 1916, "name": "REVERT", "source": 0 }
            ]
          },
          "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
        },
        "sourceList": ["main.sol", "#utility.yul"]
      },
      "methodIdentifiers": {}
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"setup\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"Wormhole\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x3dc0a7b41f92dcfabb48b4cb57390fccf0afdfc59cb41a952b1c3a720b417e91\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://b834b271428eb23ffd05ba24ab8784a0c9849a00dfe92f4cba9ded8f90a242dd\",\"dweb:/ipfs/QmYvtVkGemj4YXbqgBsq42wc6n7GovF8kRSWEYKXUHpdG6\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "/**\n *Submitted for verification at moonbase.moonscan.io on 2023-03-15\n */\n\n// SPDX-License-Identifier: Apache 2\n// File: @openzeppelin/contracts/proxy/Proxy.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract WormholeProxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(\n                gas(),\n                implementation,\n                0,\n                calldatasize(),\n                0,\n                0\n            )\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overriden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n\n// File: @openzeppelin/contracts/proxy/beacon/IBeacon.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data\n    ) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return\n            functionCallWithValue(\n                target,\n                data,\n                value,\n                \"Address: low-level call with value failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(\n            address(this).balance >= value,\n            \"Address: insufficient balance for call\"\n        );\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(\n            data\n        );\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data\n    ) internal view returns (bytes memory) {\n        return\n            functionStaticCall(\n                target,\n                data,\n                \"Address: low-level static call failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data\n    ) internal returns (bytes memory) {\n        return\n            functionDelegateCall(\n                target,\n                data,\n                \"Address: low-level delegate call failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(\n        bytes32 slot\n    ) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(\n        bytes32 slot\n    ) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(\n        bytes32 slot\n    ) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(\n        bytes32 slot\n    ) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\n\npragma solidity ^0.8.2;\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT =\n        0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(\n            Address.isContract(newImplementation),\n            \"ERC1967: new implementation is not a contract\"\n        );\n        StorageSlot\n            .getAddressSlot(_IMPLEMENTATION_SLOT)\n            .value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallSecure(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        address oldImplementation = _getImplementation();\n\n        // Initial upgrade and setup call\n        _setImplementation(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n\n        // Perform rollback test if not already in progress\n        StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot\n            .getBooleanSlot(_ROLLBACK_SLOT);\n        if (!rollbackTesting.value) {\n            // Trigger rollback using upgradeTo from the new implementation\n            rollbackTesting.value = true;\n            Address.functionDelegateCall(\n                newImplementation,\n                abi.encodeWithSignature(\"upgradeTo(address)\", oldImplementation)\n            );\n            rollbackTesting.value = false;\n            // Check rollback was effective\n            require(\n                oldImplementation == _getImplementation(),\n                \"ERC1967Upgrade: upgrade breaks further upgrades\"\n            );\n            // Finally reset to the new implementation and log the upgrade\n            _upgradeTo(newImplementation);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT =\n        0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(\n            newAdmin != address(0),\n            \"ERC1967: new admin is the zero address\"\n        );\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT =\n        0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(\n            Address.isContract(newBeacon),\n            \"ERC1967: new beacon is not a contract\"\n        );\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(\n                IBeacon(newBeacon).implementation(),\n                data\n            );\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is WormholeProxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        assert(\n            _IMPLEMENTATION_SLOT ==\n                bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)\n        );\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation()\n        internal\n        view\n        virtual\n        override\n        returns (address impl)\n    {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n\n// File: contracts/Wormhole.sol\n\n// contracts/Wormhole.sol\n\npragma solidity ^0.8.0;\n\ncontract Wormhole is ERC1967Proxy {\n    constructor(\n        address setup,\n        bytes memory initData\n    ) ERC1967Proxy(setup, initData) {}\n}\n"
}
