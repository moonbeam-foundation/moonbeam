{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Deposit",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Withdrawal",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "deposit",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint256", "name": "value", "type": "uint256" }
        ],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Allow compatibility with dApps expecting this precompile to be a WETH-like contract. Moonbase address : 0x0000000000000000000000000000000000000802",
      "events": {
        "Deposit(address,uint256)": {
          "details": "Event emited when deposit() has been called. Selector: e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
          "params": {
            "owner": "address Owner of the tokens",
            "value": "uint256 The amount of tokens \"wrapped\"."
          }
        },
        "Withdrawal(address,uint256)": {
          "details": "Event emited when withdraw(uint256) has been called. Selector: 7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
          "params": {
            "owner": "address Owner of the tokens",
            "value": "uint256 The amount of tokens \"unwrapped\"."
          }
        }
      },
      "kind": "dev",
      "methods": {
        "deposit()": {
          "details": "Provide compatibility for contracts that expect wETH design. Returns funds to sender as this precompile tokens and the native tokens are the same. Selector: d0e30db0"
        },
        "withdraw(uint256)": {
          "details": "Provide compatibility for contracts that expect wETH design. Does nothing. Selector: 2e1a7d4d",
          "params": { "value": "uint256 The amount to withdraw/unwrap." }
        }
      },
      "title": "Native currency wrapper interface.",
      "version": 1
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "deposit()": "d0e30db0",
        "withdraw(uint256)": "2e1a7d4d"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allow compatibility with dApps expecting this precompile to be a WETH-like contract. Moonbase address : 0x0000000000000000000000000000000000000802\",\"events\":{\"Deposit(address,uint256)\":{\"details\":\"Event emited when deposit() has been called. Selector: e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\",\"params\":{\"owner\":\"address Owner of the tokens\",\"value\":\"uint256 The amount of tokens \\\"wrapped\\\".\"}},\"Withdrawal(address,uint256)\":{\"details\":\"Event emited when withdraw(uint256) has been called. Selector: 7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\",\"params\":{\"owner\":\"address Owner of the tokens\",\"value\":\"uint256 The amount of tokens \\\"unwrapped\\\".\"}}},\"kind\":\"dev\",\"methods\":{\"deposit()\":{\"details\":\"Provide compatibility for contracts that expect wETH design. Returns funds to sender as this precompile tokens and the native tokens are the same. Selector: d0e30db0\"},\"withdraw(uint256)\":{\"details\":\"Provide compatibility for contracts that expect wETH design. Does nothing. Selector: 2e1a7d4d\",\"params\":{\"value\":\"uint256 The amount to withdraw/unwrap.\"}}},\"title\":\"Native currency wrapper interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"WrappedNativeCurrency\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0xece248e8bc2951b0f63e23cb5173ca8efb0d2733b042bcdb32b4e01c4231b42c\",\"urls\":[\"bzz-raw://c11987a04ac15b830ac8615284a30b6781cd7aecda5fc08c11f995a5e8ffb55f\",\"dweb:/ipfs/QmbKDPvdec5CFiwS2fQX2fkPYDC5QZTzV4yXrhRzY9a39S\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "pragma solidity ^0.8.0;\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n * @dev copied from https://github.com/OpenZeppelin/openzeppelin-contracts\n * Address :    0x0000000000000000000000000000000000000802\n */\n \ninterface IERC20 {\n  /**\n   * @dev Returns the name of the token.\n   * Selector: 06fdde03\n   */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the symbol of the token.\n   * Selector: 95d89b41\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n   * @dev Returns the decimals places of the token.\n   * Selector: 313ce567\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Total number of tokens in existence\n   * Selector: 18160ddd\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Gets the balance of the specified address.\n   * Selector: 70a08231\n   * @param owner The address to query the balance of.\n   * @return An uint256 representing the amount owned by the passed address.\n   */\n  function balanceOf(address owner) external view returns (uint256);\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * Selector: dd62ed3e\n   * @param owner address The address which owns the funds.\n   * @param spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address owner, address spender)\n    external view returns (uint256);\n\n  /**\n   * @dev Transfer token for a specified address\n   * Selector: a9059cbb\n   * @param to The address to transfer to.\n   * @param value The amount to be transferred.\n   * @return true if the transfer was succesful, revert otherwise.\n   */\n  function transfer(address to, uint256 value) external returns (bool);\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Selector: 095ea7b3\n   * @param spender The address which will spend the funds.\n   * @param value The amount of tokens to be spent.\n   * @return true, this cannot fail\n   */\n  function approve(address spender, uint256 value)\n    external returns (bool);\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * Selector: 23b872dd\n   * @param from address The address which you want to send tokens from\n   * @param to address The address which you want to transfer to\n   * @param value uint256 the amount of tokens to be transferred\n   * @return true if the transfer was succesful, revert otherwise.\n   */\n  function transferFrom(address from, address to, uint256 value)\n    external returns (bool);\n\n\n  /**\n   * @dev Event emited when a transfer has been performed.\n   * Selector: ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n   * @param from address The address sending the tokens\n   * @param to address The address receiving the tokens.\n   * @param value uint256 The amount of tokens transfered.\n   */\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  /**\n   * @dev Event emited when an approval has been registered.\n   * Selector: 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n   * @param owner address Owner of the tokens.\n   * @param spender address Allowed spender.\n   * @param value uint256 Amount of tokens approved.\n   */\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n/**\n * @title Native currency wrapper interface.\n * @dev Allow compatibility with dApps expecting this precompile to be\n * a WETH-like contract.\n * Moonbase address : 0x0000000000000000000000000000000000000802\n */\ninterface WrappedNativeCurrency {\n  /**\n   * @dev Provide compatibility for contracts that expect wETH design.\n   * Returns funds to sender as this precompile tokens and the native tokens are the same.\n   * Selector: d0e30db0\n   */\n  function deposit() external payable;\n\n  /**\n   * @dev Provide compatibility for contracts that expect wETH design.\n   * Does nothing.\n   * Selector: 2e1a7d4d\n   * @param value uint256 The amount to withdraw/unwrap.\n   */\n  function withdraw(uint256 value) external;\n\n  /**\n   * @dev Event emited when deposit() has been called.\n   * Selector: e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n   * @param owner address Owner of the tokens\n   * @param value uint256 The amount of tokens \"wrapped\".\n   */\n  event Deposit(\n    address indexed owner,\n    uint value\n  );\n\n  /**\n   * @dev Event emited when withdraw(uint256) has been called.\n   * Selector: 7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n   * @param owner address Owner of the tokens\n   * @param value uint256 The amount of tokens \"unwrapped\".\n   */\n  event Withdrawal(\n    address indexed owner,\n    uint value\n  );\n}"
}
