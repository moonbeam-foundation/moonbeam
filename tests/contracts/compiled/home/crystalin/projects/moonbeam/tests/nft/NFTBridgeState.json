{"byteCode":"0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205c70d46ba265894a3b744848f5fcf0eb3545413501d9d0e2fbd84000c1aff14064736f6c63430008130033","contract":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"assembly":"    /* \"main.sol\":1528:1590  contract NFTBridgeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":1528:1590  contract NFTBridgeState {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205c70d46ba265894a3b744848f5fcf0eb3545413501d9d0e2fbd84000c1aff14064736f6c63430008130033\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205c70d46ba265894a3b744848f5fcf0eb3545413501d9d0e2fbd84000c1aff14064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH17 0xD46BA265894A3B744848F5FCF0EB354541 CALLDATALOAD ADD 0xD9 0xD0 0xE2 0xFB 0xD8 BLOCKHASH STOP 0xC1 0xAF CALL BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1528:62:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212205c70d46ba265894a3b744848f5fcf0eb3545413501d9d0e2fbd84000c1aff14064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH17 0xD46BA265894A3B744848F5FCF0EB354541 CALLDATALOAD ADD 0xD9 0xD0 0xE2 0xFB 0xD8 BLOCKHASH STOP 0xC1 0xAF CALL BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1528:62:1:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"}},"legacyAssembly":{".code":[{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"80"},{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"40"},{"begin":1528,"end":1590,"name":"MSTORE","source":1},{"begin":1528,"end":1590,"name":"CALLVALUE","source":1},{"begin":1528,"end":1590,"name":"DUP1","source":1},{"begin":1528,"end":1590,"name":"ISZERO","source":1},{"begin":1528,"end":1590,"name":"PUSH [tag]","source":1,"value":"1"},{"begin":1528,"end":1590,"name":"JUMPI","source":1},{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"0"},{"begin":1528,"end":1590,"name":"DUP1","source":1},{"begin":1528,"end":1590,"name":"REVERT","source":1},{"begin":1528,"end":1590,"name":"tag","source":1,"value":"1"},{"begin":1528,"end":1590,"name":"JUMPDEST","source":1},{"begin":1528,"end":1590,"name":"POP","source":1},{"begin":1528,"end":1590,"name":"PUSH #[$]","source":1,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1528,"end":1590,"name":"DUP1","source":1},{"begin":1528,"end":1590,"name":"PUSH [$]","source":1,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"0"},{"begin":1528,"end":1590,"name":"CODECOPY","source":1},{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"0"},{"begin":1528,"end":1590,"name":"RETURN","source":1}],".data":{"0":{".auxdata":"a26469706673582212205c70d46ba265894a3b744848f5fcf0eb3545413501d9d0e2fbd84000c1aff14064736f6c63430008130033",".code":[{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"80"},{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"40"},{"begin":1528,"end":1590,"name":"MSTORE","source":1},{"begin":1528,"end":1590,"name":"PUSH","source":1,"value":"0"},{"begin":1528,"end":1590,"name":"DUP1","source":1},{"begin":1528,"end":1590,"name":"REVERT","source":1}]}},"sourceList":["NFTBridgeStructs.sol","main.sol","#utility.yul"]},"methodIdentifiers":{}},"ewasm":{"wasm":""},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"NFTBridgeState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTBridgeStructs.sol\":{\"keccak256\":\"0xe540036df98387c9b206ce06917e2b726028f5921131552727e7f70a7a364d36\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1fabca4e3aa74d7c25dafefabc09dc38989e8c5c84088fefde29b2a58c98920a\",\"dweb:/ipfs/QmQaB2z2yi6qRAWACtTL7TSujFDFEdjmmRNwaWcubCo2Dd\"]},\"main.sol\":{\"keccak256\":\"0x42200d27a01e9ab320c7e5efb14ef727b8b9bd2abb29dc8d6ff7815c837cd5bd\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://05f66185f59e41651511104e500274505763ed84c26d196e9e1c6f84497f02bb\",\"dweb:/ipfs/QmUEwQbFEE3zHwhb14xfEYHF8BNcn4ZRSjpjUJN6fHkLL9\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":66,"contract":"main.sol:NFTBridgeState","label":"_state","offset":0,"slot":"0","type":"t_struct(State)62_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint16,t_bytes32)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_uint16,t_mapping(t_bytes32,t_address))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes32 => address))","numberOfBytes":"32","value":"t_mapping(t_bytes32,t_address)"},"t_mapping(t_uint256,t_struct(SPLCache)21_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NFTBridgeStorage.SPLCache)","numberOfBytes":"32","value":"t_struct(SPLCache)21_storage"},"t_struct(Provider)11_storage":{"encoding":"inplace","label":"struct NFTBridgeStorage.Provider","members":[{"astId":4,"contract":"main.sol:NFTBridgeState","label":"chainId","offset":0,"slot":"0","type":"t_uint16"},{"astId":6,"contract":"main.sol:NFTBridgeState","label":"governanceChainId","offset":2,"slot":"0","type":"t_uint16"},{"astId":8,"contract":"main.sol:NFTBridgeState","label":"finality","offset":4,"slot":"0","type":"t_uint8"},{"astId":10,"contract":"main.sol:NFTBridgeState","label":"governanceContract","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(SPLCache)21_storage":{"encoding":"inplace","label":"struct NFTBridgeStorage.SPLCache","members":[{"astId":18,"contract":"main.sol:NFTBridgeState","label":"name","offset":0,"slot":"0","type":"t_bytes32"},{"astId":20,"contract":"main.sol:NFTBridgeState","label":"symbol","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(State)62_storage":{"encoding":"inplace","label":"struct NFTBridgeStorage.State","members":[{"astId":23,"contract":"main.sol:NFTBridgeState","label":"wormhole","offset":0,"slot":"0","type":"t_address_payable"},{"astId":25,"contract":"main.sol:NFTBridgeState","label":"tokenImplementation","offset":0,"slot":"1","type":"t_address"},{"astId":28,"contract":"main.sol:NFTBridgeState","label":"provider","offset":0,"slot":"2","type":"t_struct(Provider)11_storage"},{"astId":32,"contract":"main.sol:NFTBridgeState","label":"consumedGovernanceActions","offset":0,"slot":"4","type":"t_mapping(t_bytes32,t_bool)"},{"astId":36,"contract":"main.sol:NFTBridgeState","label":"completedTransfers","offset":0,"slot":"5","type":"t_mapping(t_bytes32,t_bool)"},{"astId":40,"contract":"main.sol:NFTBridgeState","label":"initializedImplementations","offset":0,"slot":"6","type":"t_mapping(t_address,t_bool)"},{"astId":46,"contract":"main.sol:NFTBridgeState","label":"wrappedAssets","offset":0,"slot":"7","type":"t_mapping(t_uint16,t_mapping(t_bytes32,t_address))"},{"astId":50,"contract":"main.sol:NFTBridgeState","label":"isWrappedAsset","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":54,"contract":"main.sol:NFTBridgeState","label":"bridgeImplementations","offset":0,"slot":"9","type":"t_mapping(t_uint16,t_bytes32)"},{"astId":59,"contract":"main.sol:NFTBridgeState","label":"splCache","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_struct(SPLCache)21_storage)"},{"astId":61,"contract":"main.sol:NFTBridgeState","label":"evmChainId","offset":0,"slot":"11","type":"t_uint256"}],"numberOfBytes":"384"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"sourceCode":"// contracts/State.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"./NFTBridgeStructs.sol\";\n\ncontract NFTBridgeStorage {\n    struct Provider {\n        uint16 chainId;\n        uint16 governanceChainId;\n        // Required number of block confirmations to assume finality\n        uint8 finality;\n        bytes32 governanceContract;\n    }\n\n    struct Asset {\n        uint16 chainId;\n        bytes32 assetAddress;\n    }\n\n    struct SPLCache {\n        bytes32 name;\n        bytes32 symbol;\n    }\n\n    struct State {\n        address payable wormhole;\n        address tokenImplementation;\n\n        Provider provider;\n\n        // Mapping of consumed governance actions\n        mapping(bytes32 => bool) consumedGovernanceActions;\n\n        // Mapping of consumed token transfers\n        mapping(bytes32 => bool) completedTransfers;\n\n        // Mapping of initialized implementations\n        mapping(address => bool) initializedImplementations;\n\n        // Mapping of wrapped assets (chainID => nativeAddress => wrappedAddress)\n        mapping(uint16 => mapping(bytes32 => address)) wrappedAssets;\n\n        // Mapping to safely identify wrapped assets\n        mapping(address => bool) isWrappedAsset;\n\n        // Mapping of bridge contracts on other chains\n        mapping(uint16 => bytes32) bridgeImplementations;\n\n        // Mapping of spl token info caches (chainID => nativeAddress => SPLCache)\n        mapping(uint256 => SPLCache) splCache;\n\n        // EIP-155 Chain ID\n        uint256 evmChainId;\n    }\n}\n\ncontract NFTBridgeState {\n    NFTBridgeStorage.State _state;\n}\n"}