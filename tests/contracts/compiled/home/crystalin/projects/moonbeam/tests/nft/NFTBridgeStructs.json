{"byteCode":"0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122070faff93c855b6a1e8f405ebaa931409a986d41941a0e7c8168d8dbb9023ddeb64736f6c63430008130033","contract":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"assembly":"    /* \"main.sol\":88:1744  contract NFTBridgeStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":88:1744  contract NFTBridgeStructs {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122070faff93c855b6a1e8f405ebaa931409a986d41941a0e7c8168d8dbb9023ddeb64736f6c63430008130033\n}\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122070faff93c855b6a1e8f405ebaa931409a986d41941a0e7c8168d8dbb9023ddeb64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xFAFF93C855B6A1E8F405EBAA931409A986 0xD4 NOT COINBASE LOG0 0xE7 0xC8 AND DUP14 DUP14 0xBB SWAP1 0x23 0xDD 0xEB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"88:1656:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122070faff93c855b6a1e8f405ebaa931409a986d41941a0e7c8168d8dbb9023ddeb64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xFAFF93C855B6A1E8F405EBAA931409A986 0xD4 NOT COINBASE LOG0 0xE7 0xC8 AND DUP14 DUP14 0xBB SWAP1 0x23 0xDD 0xEB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"88:1656:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"}},"legacyAssembly":{".code":[{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"80"},{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"40"},{"begin":88,"end":1744,"name":"MSTORE","source":0},{"begin":88,"end":1744,"name":"CALLVALUE","source":0},{"begin":88,"end":1744,"name":"DUP1","source":0},{"begin":88,"end":1744,"name":"ISZERO","source":0},{"begin":88,"end":1744,"name":"PUSH [tag]","source":0,"value":"1"},{"begin":88,"end":1744,"name":"JUMPI","source":0},{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"0"},{"begin":88,"end":1744,"name":"DUP1","source":0},{"begin":88,"end":1744,"name":"REVERT","source":0},{"begin":88,"end":1744,"name":"tag","source":0,"value":"1"},{"begin":88,"end":1744,"name":"JUMPDEST","source":0},{"begin":88,"end":1744,"name":"POP","source":0},{"begin":88,"end":1744,"name":"PUSH #[$]","source":0,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":88,"end":1744,"name":"DUP1","source":0},{"begin":88,"end":1744,"name":"PUSH [$]","source":0,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"0"},{"begin":88,"end":1744,"name":"CODECOPY","source":0},{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"0"},{"begin":88,"end":1744,"name":"RETURN","source":0}],".data":{"0":{".auxdata":"a264697066735822122070faff93c855b6a1e8f405ebaa931409a986d41941a0e7c8168d8dbb9023ddeb64736f6c63430008130033",".code":[{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"80"},{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"40"},{"begin":88,"end":1744,"name":"MSTORE","source":0},{"begin":88,"end":1744,"name":"PUSH","source":0,"value":"0"},{"begin":88,"end":1744,"name":"DUP1","source":0},{"begin":88,"end":1744,"name":"REVERT","source":0}]}},"sourceList":["main.sol","#utility.yul"]},"methodIdentifiers":{}},"ewasm":{"wasm":""},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"NFTBridgeStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0xe540036df98387c9b206ce06917e2b726028f5921131552727e7f70a7a364d36\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1fabca4e3aa74d7c25dafefabc09dc38989e8c5c84088fefde29b2a58c98920a\",\"dweb:/ipfs/QmQaB2z2yi6qRAWACtTL7TSujFDFEdjmmRNwaWcubCo2Dd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"sourceCode":"// contracts/Structs.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\ncontract NFTBridgeStructs {\n    struct Transfer {\n        // PayloadID uint8 = 1\n        // Address of the token. Left-zero-padded if shorter than 32 bytes\n        bytes32 tokenAddress;\n        // Chain ID of the token\n        uint16 tokenChain;\n        // Symbol of the token\n        bytes32 symbol;\n        // Name of the token\n        bytes32 name;\n        // TokenID of the token\n        uint256 tokenID;\n        // URI of the token metadata (UTF-8)\n        string uri;\n        // Address of the recipient. Left-zero-padded if shorter than 32 bytes\n        bytes32 to;\n        // Chain ID of the recipient\n        uint16 toChain;\n    }\n\n    struct RegisterChain {\n        // Governance Header\n        // module: \"NFTBridge\" left-padded\n        bytes32 module;\n        // governance action: 1\n        uint8 action;\n        // governance paket chain id: this or 0\n        uint16 chainId;\n\n        // Chain ID\n        uint16 emitterChainID;\n        // Emitter address. Left-zero-padded if shorter than 32 bytes\n        bytes32 emitterAddress;\n    }\n\n    struct UpgradeContract {\n        // Governance Header\n        // module: \"NFTBridge\" left-padded\n        bytes32 module;\n        // governance action: 2\n        uint8 action;\n        // governance paket chain id\n        uint16 chainId;\n\n        // Address of the new contract\n        bytes32 newContract;\n    }\n\n    struct RecoverChainId {\n        // Governance Header\n        // module: \"NFTBridge\" left-padded\n        bytes32 module;\n        // governance action: 3\n        uint8 action;\n\n        // EIP-155 Chain ID\n        uint256 evmChainId;\n        // Chain ID\n        uint16 newChainId;\n    }\n}\n"}