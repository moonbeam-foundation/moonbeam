{
  "byteCode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122020fba98bd676f54e4c94a39ab55a1b926e0e56c34b09f754ea146a0baec3826964736f6c63430008130033",
  "contract": {
    "abi": [],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"main.sol\":111:1729  contract Setters is State {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":111:1729  contract Setters is State {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020fba98bd676f54e4c94a39ab55a1b926e0e56c34b09f754ea146a0baec3826964736f6c63430008130033\n}\n",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122020fba98bd676f54e4c94a39ab55a1b926e0e56c34b09f754ea146a0baec3826964736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xFB 0xA9 DUP12 0xD6 PUSH23 0xF54E4C94A39AB55A1B926E0E56C34B09F754EA146A0BAE 0xC3 DUP3 PUSH10 0x64736F6C634300081300 CALLER ",
        "sourceMap": "111:1618:2:-:0;;;;;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "6080604052600080fdfea264697066735822122020fba98bd676f54e4c94a39ab55a1b926e0e56c34b09f754ea146a0baec3826964736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xFB 0xA9 DUP12 0xD6 PUSH23 0xF54E4C94A39AB55A1B926E0E56C34B09F754EA146A0BAE 0xC3 DUP3 PUSH10 0x64736F6C634300081300 CALLER ",
        "sourceMap": "111:1618:2:-:0;;;;;"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "12600",
          "executionCost": "66",
          "totalCost": "12666"
        },
        "internal": {
          "expireGuardianSet(uint32)": "infinite",
          "setChainId(uint16)": "infinite",
          "setEvmChainId(uint256)": "infinite",
          "setGovernanceActionConsumed(bytes32)": "infinite",
          "setGovernanceChainId(uint16)": "infinite",
          "setGovernanceContract(bytes32)": "infinite",
          "setInitialized(address)": "infinite",
          "setMessageFee(uint256)": "infinite",
          "setNextSequence(address,uint64)": "infinite",
          "storeGuardianSet(struct Structs.GuardianSet memory,uint32)": "infinite",
          "updateGuardianSetIndex(uint32)": "infinite"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 2,
            "value": "80"
          },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 2,
            "value": "40"
          },
          { "begin": 111, "end": 1729, "name": "MSTORE", "source": 2 },
          { "begin": 111, "end": 1729, "name": "CALLVALUE", "source": 2 },
          { "begin": 111, "end": 1729, "name": "DUP1", "source": 2 },
          { "begin": 111, "end": 1729, "name": "ISZERO", "source": 2 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH [tag]",
            "source": 2,
            "value": "1"
          },
          { "begin": 111, "end": 1729, "name": "JUMPI", "source": 2 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 2,
            "value": "0"
          },
          { "begin": 111, "end": 1729, "name": "DUP1", "source": 2 },
          { "begin": 111, "end": 1729, "name": "REVERT", "source": 2 },
          {
            "begin": 111,
            "end": 1729,
            "name": "tag",
            "source": 2,
            "value": "1"
          },
          { "begin": 111, "end": 1729, "name": "JUMPDEST", "source": 2 },
          { "begin": 111, "end": 1729, "name": "POP", "source": 2 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH #[$]",
            "source": 2,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 111, "end": 1729, "name": "DUP1", "source": 2 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH [$]",
            "source": 2,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 2,
            "value": "0"
          },
          { "begin": 111, "end": 1729, "name": "CODECOPY", "source": 2 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 2,
            "value": "0"
          },
          { "begin": 111, "end": 1729, "name": "RETURN", "source": 2 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a264697066735822122020fba98bd676f54e4c94a39ab55a1b926e0e56c34b09f754ea146a0baec3826964736f6c63430008130033",
            ".code": [
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 2,
                "value": "80"
              },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 2,
                "value": "40"
              },
              { "begin": 111, "end": 1729, "name": "MSTORE", "source": 2 },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 2,
                "value": "0"
              },
              { "begin": 111, "end": 1729, "name": "DUP1", "source": 2 },
              { "begin": 111, "end": 1729, "name": "REVERT", "source": 2 }
            ]
          }
        },
        "sourceList": ["State.sol", "Structs.sol", "main.sol", "#utility.yul"]
      },
      "methodIdentifiers": {}
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"Setters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"State.sol\":{\"keccak256\":\"0x4168d598ce712b25195a385009dea75ac9731526aa1d5d48a579ba6e44bf2d2c\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://90f28a7efff831848231c99e25177e384a52a4d432bfdf45d6fc236e22bad0a5\",\"dweb:/ipfs/QmUusWcAvsJDndX2tJHW9rVpe1f4YpZDnocezCrtW7CjiD\"]},\"Structs.sol\":{\"keccak256\":\"0xe756fc2afd806d9d739eb14f5e1173b7c28664a7150a4c813b3c803a42ec5806\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://97e896ab5c1e531bcac3618a144fe44dc24f45e5fab6a632817d143889feb862\",\"dweb:/ipfs/QmTaAmtsoKNaKt3aKBr5p9rZWBFjcPbSB6noemyVNJ2XiB\"]},\"main.sol\":{\"keccak256\":\"0x339ba60f04adef3327f4632811acbf2e6d6e7e81fea63c681126bcbcc0be726f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5472f43ca1f9ca36f37021584feb3debc71d1ff427565705d317a589ca0b6bde\",\"dweb:/ipfs/Qmbw1du9Do54hqKupxVCTvB8wTDceyKpMUXaJ82J3KsToz\"]}},\"version\":1}",
    "storageLayout": {
      "storage": [
        {
          "astId": 255,
          "contract": "main.sol:Setters",
          "label": "_state",
          "offset": 0,
          "slot": "0",
          "type": "t_struct(WormholeState)251_storage"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_address)dyn_storage": {
          "base": "t_address",
          "encoding": "dynamic_array",
          "label": "address[]",
          "numberOfBytes": "32"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_bytes32": {
          "encoding": "inplace",
          "label": "bytes32",
          "numberOfBytes": "32"
        },
        "t_mapping(t_address,t_bool)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => bool)",
          "numberOfBytes": "32",
          "value": "t_bool"
        },
        "t_mapping(t_address,t_uint64)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint64)",
          "numberOfBytes": "32",
          "value": "t_uint64"
        },
        "t_mapping(t_bytes32,t_bool)": {
          "encoding": "mapping",
          "key": "t_bytes32",
          "label": "mapping(bytes32 => bool)",
          "numberOfBytes": "32",
          "value": "t_bool"
        },
        "t_mapping(t_uint32,t_struct(GuardianSet)271_storage)": {
          "encoding": "mapping",
          "key": "t_uint32",
          "label": "mapping(uint32 => struct Structs.GuardianSet)",
          "numberOfBytes": "32",
          "value": "t_struct(GuardianSet)271_storage"
        },
        "t_struct(GuardianSet)271_storage": {
          "encoding": "inplace",
          "label": "struct Structs.GuardianSet",
          "members": [
            {
              "astId": 268,
              "contract": "main.sol:Setters",
              "label": "keys",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage"
            },
            {
              "astId": 270,
              "contract": "main.sol:Setters",
              "label": "expirationTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint32"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_struct(Provider)265_storage": {
          "encoding": "inplace",
          "label": "struct Structs.Provider",
          "members": [
            {
              "astId": 260,
              "contract": "main.sol:Setters",
              "label": "chainId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint16"
            },
            {
              "astId": 262,
              "contract": "main.sol:Setters",
              "label": "governanceChainId",
              "offset": 2,
              "slot": "0",
              "type": "t_uint16"
            },
            {
              "astId": 264,
              "contract": "main.sol:Setters",
              "label": "governanceContract",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_struct(WormholeState)251_storage": {
          "encoding": "inplace",
          "label": "struct Storage.WormholeState",
          "members": [
            {
              "astId": 225,
              "contract": "main.sol:Setters",
              "label": "provider",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Provider)265_storage"
            },
            {
              "astId": 230,
              "contract": "main.sol:Setters",
              "label": "guardianSets",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint32,t_struct(GuardianSet)271_storage)"
            },
            {
              "astId": 232,
              "contract": "main.sol:Setters",
              "label": "guardianSetIndex",
              "offset": 0,
              "slot": "3",
              "type": "t_uint32"
            },
            {
              "astId": 234,
              "contract": "main.sol:Setters",
              "label": "guardianSetExpiry",
              "offset": 4,
              "slot": "3",
              "type": "t_uint32"
            },
            {
              "astId": 238,
              "contract": "main.sol:Setters",
              "label": "sequences",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint64)"
            },
            {
              "astId": 242,
              "contract": "main.sol:Setters",
              "label": "consumedGovernanceActions",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_bool)"
            },
            {
              "astId": 246,
              "contract": "main.sol:Setters",
              "label": "initializedImplementations",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)"
            },
            {
              "astId": 248,
              "contract": "main.sol:Setters",
              "label": "messageFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256"
            },
            {
              "astId": 250,
              "contract": "main.sol:Setters",
              "label": "evmChainId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256"
            }
          ],
          "numberOfBytes": "288"
        },
        "t_uint16": {
          "encoding": "inplace",
          "label": "uint16",
          "numberOfBytes": "2"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        },
        "t_uint32": {
          "encoding": "inplace",
          "label": "uint32",
          "numberOfBytes": "4"
        },
        "t_uint64": {
          "encoding": "inplace",
          "label": "uint64",
          "numberOfBytes": "8"
        }
      }
    },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// contracts/Setters.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"./State.sol\";\n\ncontract Setters is State {\n    function updateGuardianSetIndex(uint32 newIndex) internal {\n        _state.guardianSetIndex = newIndex;\n    }\n\n    function expireGuardianSet(uint32 index) internal {\n        _state.guardianSets[index].expirationTime = uint32(block.timestamp) + 86400;\n    }\n\n    function storeGuardianSet(Structs.GuardianSet memory set, uint32 index) internal {\n        uint setLength = set.keys.length;\n        for (uint i = 0; i < setLength; i++) {\n            require(set.keys[i] != address(0), \"Invalid key\");\n        }\n        _state.guardianSets[index] = set;\n    }\n\n    function setInitialized(address implementatiom) internal {\n        _state.initializedImplementations[implementatiom] = true;\n    }\n\n    function setGovernanceActionConsumed(bytes32 hash) internal {\n        _state.consumedGovernanceActions[hash] = true;\n    }\n\n    function setChainId(uint16 chainId) internal {\n        _state.provider.chainId = chainId;\n    }\n\n    function setGovernanceChainId(uint16 chainId) internal {\n        _state.provider.governanceChainId = chainId;\n    }\n\n    function setGovernanceContract(bytes32 governanceContract) internal {\n        _state.provider.governanceContract = governanceContract;\n    }\n\n    function setMessageFee(uint256 newFee) internal {\n        _state.messageFee = newFee;\n    }\n\n    function setNextSequence(address emitter, uint64 sequence) internal {\n        _state.sequences[emitter] = sequence;\n    }\n\n    function setEvmChainId(uint256 evmChainId) internal {\n        require(evmChainId == block.chainid, \"invalid evmChainId\");\n        _state.evmChainId = evmChainId;\n    }\n}"
}
