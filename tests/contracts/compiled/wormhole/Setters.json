{
  "byteCode": "0x6080604052348015605c5760405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e637469604482019081526137b760f11b6064830152608482fd5b5060978061006b6000396000f3fe6080604081905262461bcd60e51b815260206084908152603560a4527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b2060c4908152746e6f7220726563656976652066756e6374696f6e7360581b60e4529082fdfea26469706673582212204ef229a1ba39966c6ae497ef5466957c62fc5d3a649641a4cf50b0318ba4d86664736f6c63430008130033",
  "contract": {
    "abi": [],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"Setters.sol\":111:1729  contract Setters is State {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x22\n  0x24\n  dup3\n  add\n  mstore\n  0x45746865722073656e7420746f206e6f6e2d70617961626c652066756e637469\n  0x44\n  dup3\n  add\n  swap1\n  dup2\n  mstore\n  shl(0xf1, 0x37b7)\n  0x64\n  dup4\n  add\n  mstore\n  0x84\n  dup3\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Setters.sol\":111:1729  contract Setters is State {... */\n      0x80\n      0x40\n      dup2\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x84\n      swap1\n      dup2\n      mstore\n      mstore(0xa4, 0x35)\n      0x436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b20\n      0xc4\n      swap1\n      dup2\n      mstore\n      mstore(0xe4, shl(0x58, 0x6e6f7220726563656976652066756e6374696f6e73))\n      swap1\n      dup3\n      revert\n\n    auxdata: 0xa26469706673582212204ef229a1ba39966c6ae497ef5466957c62fc5d3a649641a4cf50b0318ba4d86664736f6c63430008130033\n}\n",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "6080604052348015605c5760405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e637469604482019081526137b760f11b6064830152608482fd5b5060978061006b6000396000f3fe6080604081905262461bcd60e51b815260206084908152603560a4527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b2060c4908152746e6f7220726563656976652066756e6374696f6e7360581b60e4529082fdfea26469706673582212204ef229a1ba39966c6ae497ef5466957c62fc5d3a649641a4cf50b0318ba4d86664736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469 PUSH1 0x44 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x37B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 REVERT JUMPDEST POP PUSH1 0x97 DUP1 PUSH2 0x6B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x84 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0xA4 MSTORE PUSH32 0x436F6E747261637420646F6573206E6F7420686176652066616C6C6261636B20 PUSH1 0xC4 SWAP1 DUP2 MSTORE PUSH21 0x6E6F7220726563656976652066756E6374696F6E73 PUSH1 0x58 SHL PUSH1 0xE4 MSTORE SWAP1 DUP3 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E CALLCODE 0x29 LOG1 0xBA CODECOPY SWAP7 PUSH13 0x6AE497EF5466957C62FC5D3A64 SWAP7 COINBASE LOG4 0xCF POP 0xB0 BALANCE DUP12 LOG4 0xD8 PUSH7 0x64736F6C634300 ADDMOD SGT STOP CALLER ",
        "sourceMap": "111:1618:0:-:0;;;;;;;;;;-1:-1:-1;;;111:1618:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;111:1618:0;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "6080604081905262461bcd60e51b815260206084908152603560a4527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b2060c4908152746e6f7220726563656976652066756e6374696f6e7360581b60e4529082fdfea26469706673582212204ef229a1ba39966c6ae497ef5466957c62fc5d3a649641a4cf50b0318ba4d86664736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x84 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0xA4 MSTORE PUSH32 0x436F6E747261637420646F6573206E6F7420686176652066616C6C6261636B20 PUSH1 0xC4 SWAP1 DUP2 MSTORE PUSH21 0x6E6F7220726563656976652066756E6374696F6E73 PUSH1 0x58 SHL PUSH1 0xE4 MSTORE SWAP1 DUP3 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E CALLCODE 0x29 LOG1 0xBA CODECOPY SWAP7 PUSH13 0x6AE497EF5466957C62FC5D3A64 SWAP7 COINBASE LOG4 0xCF POP 0xB0 BALANCE DUP12 LOG4 0xD8 PUSH7 0x64736F6C634300 ADDMOD SGT STOP CALLER ",
        "sourceMap": "111:1618:0:-:0;;;;;-1:-1:-1;;;111:1618:0;;;;;;;;;;;;;;;-1:-1:-1;;;111:1618:0;;;;"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "30200",
          "executionCost": "156",
          "totalCost": "30356"
        },
        "internal": {
          "expireGuardianSet(uint32)": "infinite",
          "setChainId(uint16)": "infinite",
          "setEvmChainId(uint256)": "infinite",
          "setGovernanceActionConsumed(bytes32)": "infinite",
          "setGovernanceChainId(uint16)": "infinite",
          "setGovernanceContract(bytes32)": "infinite",
          "setInitialized(address)": "infinite",
          "setMessageFee(uint256)": "infinite",
          "setNextSequence(address,uint64)": "infinite",
          "storeGuardianSet(struct Structs.GuardianSet memory,uint32)": "infinite",
          "updateGuardianSetIndex(uint32)": "infinite"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "80"
          },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
          { "begin": 111, "end": 1729, "name": "CALLVALUE", "source": 0 },
          { "begin": 111, "end": 1729, "name": "DUP1", "source": 0 },
          { "begin": 111, "end": 1729, "name": "ISZERO", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "1"
          },
          { "begin": 111, "end": 1729, "name": "JUMPI", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 111, "end": 1729, "name": "MLOAD", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "E5"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          { "begin": 111, "end": 1729, "name": "DUP2", "source": 0 },
          { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "20"
          },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "4"
          },
          { "begin": 111, "end": 1729, "name": "DUP3", "source": 0 },
          { "begin": 111, "end": 1729, "name": "ADD", "source": 0 },
          { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "22"
          },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "24"
          },
          { "begin": 111, "end": 1729, "name": "DUP3", "source": 0 },
          { "begin": 111, "end": 1729, "name": "ADD", "source": 0 },
          { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469"
          },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "44"
          },
          { "begin": 111, "end": 1729, "name": "DUP3", "source": 0 },
          { "begin": 111, "end": 1729, "name": "ADD", "source": 0 },
          { "begin": 111, "end": 1729, "name": "SWAP1", "source": 0 },
          { "begin": 111, "end": 1729, "name": "DUP2", "source": 0 },
          { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "37B7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "source": -1,
            "value": "F1"
          },
          { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "64"
          },
          { "begin": 111, "end": 1729, "name": "DUP4", "source": 0 },
          { "begin": 111, "end": 1729, "name": "ADD", "source": 0 },
          { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "84"
          },
          { "begin": 111, "end": 1729, "name": "DUP3", "source": 0 },
          { "begin": 111, "end": 1729, "name": "REVERT", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "tag",
            "source": 0,
            "value": "1"
          },
          { "begin": 111, "end": 1729, "name": "JUMPDEST", "source": 0 },
          { "begin": 111, "end": 1729, "name": "POP", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH #[$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 111, "end": 1729, "name": "DUP1", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH [$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 111, "end": 1729, "name": "CODECOPY", "source": 0 },
          {
            "begin": 111,
            "end": 1729,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 111, "end": 1729, "name": "RETURN", "source": 0 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a26469706673582212204ef229a1ba39966c6ae497ef5466957c62fc5d3a649641a4cf50b0318ba4d86664736f6c63430008130033",
            ".code": [
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 111, "end": 1729, "name": "DUP2", "source": 0 },
              { "begin": 111, "end": 1729, "name": "SWAP1", "source": 0 },
              { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "461BCD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "E5"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": 111, "end": 1729, "name": "DUP2", "source": 0 },
              { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "84"
              },
              { "begin": 111, "end": 1729, "name": "SWAP1", "source": 0 },
              { "begin": 111, "end": 1729, "name": "DUP2", "source": 0 },
              { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "35"
              },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "A4"
              },
              { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "436F6E747261637420646F6573206E6F7420686176652066616C6C6261636B20"
              },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "C4"
              },
              { "begin": 111, "end": 1729, "name": "SWAP1", "source": 0 },
              { "begin": 111, "end": 1729, "name": "DUP2", "source": 0 },
              { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "6E6F7220726563656976652066756E6374696F6E73"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "58"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              {
                "begin": 111,
                "end": 1729,
                "name": "PUSH",
                "source": 0,
                "value": "E4"
              },
              { "begin": 111, "end": 1729, "name": "MSTORE", "source": 0 },
              { "begin": 111, "end": 1729, "name": "SWAP1", "source": 0 },
              { "begin": 111, "end": 1729, "name": "DUP3", "source": 0 },
              { "begin": 111, "end": 1729, "name": "REVERT", "source": 0 }
            ]
          }
        },
        "sourceList": [
          "Setters.sol",
          "State.sol",
          "Structs.sol",
          "#utility.yul"
        ]
      },
      "methodIdentifiers": {}
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Setters.sol\":\"Setters\"},\"debug\":{\"revertStrings\":\"debug\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Setters.sol\":{\"keccak256\":\"0x339ba60f04adef3327f4632811acbf2e6d6e7e81fea63c681126bcbcc0be726f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5472f43ca1f9ca36f37021584feb3debc71d1ff427565705d317a589ca0b6bde\",\"dweb:/ipfs/Qmbw1du9Do54hqKupxVCTvB8wTDceyKpMUXaJ82J3KsToz\"]},\"State.sol\":{\"keccak256\":\"0x4168d598ce712b25195a385009dea75ac9731526aa1d5d48a579ba6e44bf2d2c\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://90f28a7efff831848231c99e25177e384a52a4d432bfdf45d6fc236e22bad0a5\",\"dweb:/ipfs/QmUusWcAvsJDndX2tJHW9rVpe1f4YpZDnocezCrtW7CjiD\"]},\"Structs.sol\":{\"keccak256\":\"0xe756fc2afd806d9d739eb14f5e1173b7c28664a7150a4c813b3c803a42ec5806\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://97e896ab5c1e531bcac3618a144fe44dc24f45e5fab6a632817d143889feb862\",\"dweb:/ipfs/QmTaAmtsoKNaKt3aKBr5p9rZWBFjcPbSB6noemyVNJ2XiB\"]}},\"version\":1}",
    "storageLayout": {
      "storage": [
        {
          "astId": 255,
          "contract": "Setters.sol:Setters",
          "label": "_state",
          "offset": 0,
          "slot": "0",
          "type": "t_struct(WormholeState)251_storage"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_address)dyn_storage": {
          "base": "t_address",
          "encoding": "dynamic_array",
          "label": "address[]",
          "numberOfBytes": "32"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_bytes32": {
          "encoding": "inplace",
          "label": "bytes32",
          "numberOfBytes": "32"
        },
        "t_mapping(t_address,t_bool)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => bool)",
          "numberOfBytes": "32",
          "value": "t_bool"
        },
        "t_mapping(t_address,t_uint64)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint64)",
          "numberOfBytes": "32",
          "value": "t_uint64"
        },
        "t_mapping(t_bytes32,t_bool)": {
          "encoding": "mapping",
          "key": "t_bytes32",
          "label": "mapping(bytes32 => bool)",
          "numberOfBytes": "32",
          "value": "t_bool"
        },
        "t_mapping(t_uint32,t_struct(GuardianSet)271_storage)": {
          "encoding": "mapping",
          "key": "t_uint32",
          "label": "mapping(uint32 => struct Structs.GuardianSet)",
          "numberOfBytes": "32",
          "value": "t_struct(GuardianSet)271_storage"
        },
        "t_struct(GuardianSet)271_storage": {
          "encoding": "inplace",
          "label": "struct Structs.GuardianSet",
          "members": [
            {
              "astId": 268,
              "contract": "Setters.sol:Setters",
              "label": "keys",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage"
            },
            {
              "astId": 270,
              "contract": "Setters.sol:Setters",
              "label": "expirationTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint32"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_struct(Provider)265_storage": {
          "encoding": "inplace",
          "label": "struct Structs.Provider",
          "members": [
            {
              "astId": 260,
              "contract": "Setters.sol:Setters",
              "label": "chainId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint16"
            },
            {
              "astId": 262,
              "contract": "Setters.sol:Setters",
              "label": "governanceChainId",
              "offset": 2,
              "slot": "0",
              "type": "t_uint16"
            },
            {
              "astId": 264,
              "contract": "Setters.sol:Setters",
              "label": "governanceContract",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_struct(WormholeState)251_storage": {
          "encoding": "inplace",
          "label": "struct Storage.WormholeState",
          "members": [
            {
              "astId": 225,
              "contract": "Setters.sol:Setters",
              "label": "provider",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Provider)265_storage"
            },
            {
              "astId": 230,
              "contract": "Setters.sol:Setters",
              "label": "guardianSets",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint32,t_struct(GuardianSet)271_storage)"
            },
            {
              "astId": 232,
              "contract": "Setters.sol:Setters",
              "label": "guardianSetIndex",
              "offset": 0,
              "slot": "3",
              "type": "t_uint32"
            },
            {
              "astId": 234,
              "contract": "Setters.sol:Setters",
              "label": "guardianSetExpiry",
              "offset": 4,
              "slot": "3",
              "type": "t_uint32"
            },
            {
              "astId": 238,
              "contract": "Setters.sol:Setters",
              "label": "sequences",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint64)"
            },
            {
              "astId": 242,
              "contract": "Setters.sol:Setters",
              "label": "consumedGovernanceActions",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_bool)"
            },
            {
              "astId": 246,
              "contract": "Setters.sol:Setters",
              "label": "initializedImplementations",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)"
            },
            {
              "astId": 248,
              "contract": "Setters.sol:Setters",
              "label": "messageFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256"
            },
            {
              "astId": 250,
              "contract": "Setters.sol:Setters",
              "label": "evmChainId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256"
            }
          ],
          "numberOfBytes": "288"
        },
        "t_uint16": {
          "encoding": "inplace",
          "label": "uint16",
          "numberOfBytes": "2"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        },
        "t_uint32": {
          "encoding": "inplace",
          "label": "uint32",
          "numberOfBytes": "4"
        },
        "t_uint64": {
          "encoding": "inplace",
          "label": "uint64",
          "numberOfBytes": "8"
        }
      }
    },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// contracts/Setters.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"./State.sol\";\n\ncontract Setters is State {\n    function updateGuardianSetIndex(uint32 newIndex) internal {\n        _state.guardianSetIndex = newIndex;\n    }\n\n    function expireGuardianSet(uint32 index) internal {\n        _state.guardianSets[index].expirationTime = uint32(block.timestamp) + 86400;\n    }\n\n    function storeGuardianSet(Structs.GuardianSet memory set, uint32 index) internal {\n        uint setLength = set.keys.length;\n        for (uint i = 0; i < setLength; i++) {\n            require(set.keys[i] != address(0), \"Invalid key\");\n        }\n        _state.guardianSets[index] = set;\n    }\n\n    function setInitialized(address implementatiom) internal {\n        _state.initializedImplementations[implementatiom] = true;\n    }\n\n    function setGovernanceActionConsumed(bytes32 hash) internal {\n        _state.consumedGovernanceActions[hash] = true;\n    }\n\n    function setChainId(uint16 chainId) internal {\n        _state.provider.chainId = chainId;\n    }\n\n    function setGovernanceChainId(uint16 chainId) internal {\n        _state.provider.governanceChainId = chainId;\n    }\n\n    function setGovernanceContract(bytes32 governanceContract) internal {\n        _state.provider.governanceContract = governanceContract;\n    }\n\n    function setMessageFee(uint256 newFee) internal {\n        _state.messageFee = newFee;\n    }\n\n    function setNextSequence(address emitter, uint64 sequence) internal {\n        _state.sequences[emitter] = sequence;\n    }\n\n    function setEvmChainId(uint256 evmChainId) internal {\n        require(evmChainId == block.chainid, \"invalid evmChainId\");\n        _state.evmChainId = evmChainId;\n    }\n}"
}
