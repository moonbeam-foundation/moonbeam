{
  "byteCode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a82bd390dd9975038c3da7e140f59c4de1ea5072d49f49f619aca1537e45a48564736f6c63430008130033",
  "contract": {
    "abi": [],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"main.sol\":88:3431  contract BridgeStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":88:3431  contract BridgeStructs {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a82bd390dd9975038c3da7e140f59c4de1ea5072d49f49f619aca1537e45a48564736f6c63430008130033\n}\n",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a82bd390dd9975038c3da7e140f59c4de1ea5072d49f49f619aca1537e45a48564736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0x2B 0xD3 SWAP1 0xDD SWAP10 PUSH22 0x38C3DA7E140F59C4DE1EA5072D49F49F619ACA1537E GASLIMIT LOG4 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
        "sourceMap": "88:3343:0:-:0;;;;;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "6080604052600080fdfea2646970667358221220a82bd390dd9975038c3da7e140f59c4de1ea5072d49f49f619aca1537e45a48564736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0x2B 0xD3 SWAP1 0xDD SWAP10 PUSH22 0x38C3DA7E140F59C4DE1EA5072D49F49F619ACA1537E GASLIMIT LOG4 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
        "sourceMap": "88:3343:0:-:0;;;;;"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "12600",
          "executionCost": "66",
          "totalCost": "12666"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH",
            "source": 0,
            "value": "80"
          },
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH",
            "source": 0,
            "value": "40"
          },
          { "begin": 88, "end": 3431, "name": "MSTORE", "source": 0 },
          { "begin": 88, "end": 3431, "name": "CALLVALUE", "source": 0 },
          { "begin": 88, "end": 3431, "name": "DUP1", "source": 0 },
          { "begin": 88, "end": 3431, "name": "ISZERO", "source": 0 },
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH [tag]",
            "source": 0,
            "value": "1"
          },
          { "begin": 88, "end": 3431, "name": "JUMPI", "source": 0 },
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 88, "end": 3431, "name": "DUP1", "source": 0 },
          { "begin": 88, "end": 3431, "name": "REVERT", "source": 0 },
          {
            "begin": 88,
            "end": 3431,
            "name": "tag",
            "source": 0,
            "value": "1"
          },
          { "begin": 88, "end": 3431, "name": "JUMPDEST", "source": 0 },
          { "begin": 88, "end": 3431, "name": "POP", "source": 0 },
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH #[$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 88, "end": 3431, "name": "DUP1", "source": 0 },
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH [$]",
            "source": 0,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 88, "end": 3431, "name": "CODECOPY", "source": 0 },
          {
            "begin": 88,
            "end": 3431,
            "name": "PUSH",
            "source": 0,
            "value": "0"
          },
          { "begin": 88, "end": 3431, "name": "RETURN", "source": 0 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a2646970667358221220a82bd390dd9975038c3da7e140f59c4de1ea5072d49f49f619aca1537e45a48564736f6c63430008130033",
            ".code": [
              {
                "begin": 88,
                "end": 3431,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 88,
                "end": 3431,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 88, "end": 3431, "name": "MSTORE", "source": 0 },
              {
                "begin": 88,
                "end": 3431,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 88, "end": 3431, "name": "DUP1", "source": 0 },
              { "begin": 88, "end": 3431, "name": "REVERT", "source": 0 }
            ]
          }
        },
        "sourceList": ["main.sol", "#utility.yul"]
      },
      "methodIdentifiers": {}
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"BridgeStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x04a96ffde0bb54bcd6e28b77eb96ab8aa910761e5c84796bcd875d606e8dcf56\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://95f4f00fcaeb0879b9df203446e5d8140ce20cf6f99881a73bdda15831e561be\",\"dweb:/ipfs/QmNxYubia69TV8wr3DTHQ8PHSjE4P6GqBM9jTp3NgsB31o\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// contracts/Structs.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\ncontract BridgeStructs {\n    struct Transfer {\n        // PayloadID uint8 = 1\n        uint8 payloadID;\n        // Amount being transferred (big-endian uint256)\n        uint256 amount;\n        // Address of the token. Left-zero-padded if shorter than 32 bytes\n        bytes32 tokenAddress;\n        // Chain ID of the token\n        uint16 tokenChain;\n        // Address of the recipient. Left-zero-padded if shorter than 32 bytes\n        bytes32 to;\n        // Chain ID of the recipient\n        uint16 toChain;\n        // Amount of tokens (big-endian uint256) that the user is willing to pay as relayer fee. Must be <= Amount.\n        uint256 fee;\n    }\n\n    struct TransferWithPayload {\n        // PayloadID uint8 = 3\n        uint8 payloadID;\n        // Amount being transferred (big-endian uint256)\n        uint256 amount;\n        // Address of the token. Left-zero-padded if shorter than 32 bytes\n        bytes32 tokenAddress;\n        // Chain ID of the token\n        uint16 tokenChain;\n        // Address of the recipient. Left-zero-padded if shorter than 32 bytes\n        bytes32 to;\n        // Chain ID of the recipient\n        uint16 toChain;\n        // Address of the message sender. Left-zero-padded if shorter than 32 bytes\n        bytes32 fromAddress;\n        // An arbitrary payload\n        bytes payload;\n    }\n\n    struct TransferResult {\n        // Chain ID of the token\n        uint16  tokenChain;\n        // Address of the token. Left-zero-padded if shorter than 32 bytes\n        bytes32 tokenAddress;\n        // Amount being transferred (big-endian uint256)\n        uint256 normalizedAmount;\n        // Amount of tokens (big-endian uint256) that the user is willing to pay as relayer fee. Must be <= Amount.\n        uint256 normalizedArbiterFee;\n        // Portion of msg.value to be paid as the core bridge fee\n        uint wormholeFee;\n    }\n\n    struct AssetMeta {\n        // PayloadID uint8 = 2\n        uint8 payloadID;\n        // Address of the token. Left-zero-padded if shorter than 32 bytes\n        bytes32 tokenAddress;\n        // Chain ID of the token\n        uint16 tokenChain;\n        // Number of decimals of the token (big-endian uint256)\n        uint8 decimals;\n        // Symbol of the token (UTF-8)\n        bytes32 symbol;\n        // Name of the token (UTF-8)\n        bytes32 name;\n    }\n\n    struct RegisterChain {\n        // Governance Header\n        // module: \"TokenBridge\" left-padded\n        bytes32 module;\n        // governance action: 1\n        uint8 action;\n        // governance paket chain id: this or 0\n        uint16 chainId;\n\n        // Chain ID\n        uint16 emitterChainID;\n        // Emitter address. Left-zero-padded if shorter than 32 bytes\n        bytes32 emitterAddress;\n    }\n\n    struct UpgradeContract {\n        // Governance Header\n        // module: \"TokenBridge\" left-padded\n        bytes32 module;\n        // governance action: 2\n        uint8 action;\n        // governance paket chain id\n        uint16 chainId;\n\n        // Address of the new contract\n        bytes32 newContract;\n    }\n\n    struct RecoverChainId {\n        // Governance Header\n        // module: \"TokenBridge\" left-padded\n        bytes32 module;\n        // governance action: 3\n        uint8 action;\n\n        // EIP-155 Chain ID\n        uint256 evmChainId;\n        // Chain ID\n        uint16 newChainId;\n    }\n}\n"
}
