{
  "byteCode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f17557941894dfe271ed336efcae14f71bbec5033b6a2307f37746e45da62d6964736f6c63430008130033",
  "contract": {
    "abi": [],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"main.sol\":140:1014  contract TokenStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":140:1014  contract TokenStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f17557941894dfe271ed336efcae14f71bbec5033b6a2307f37746e45da62d6964736f6c63430008130033\n}\n",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f17557941894dfe271ed336efcae14f71bbec5033b6a2307f37746e45da62d6964736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL PUSH22 0x57941894DFE271ED336EFCAE14F71BBEC5033B6A2307 RETURN PUSH24 0x46E45DA62D6964736F6C6343000813003300000000000000 ",
        "sourceMap": "140:874:1:-:0;;;;;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "6080604052600080fdfea2646970667358221220f17557941894dfe271ed336efcae14f71bbec5033b6a2307f37746e45da62d6964736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL PUSH22 0x57941894DFE271ED336EFCAE14F71BBEC5033B6A2307 RETURN PUSH24 0x46E45DA62D6964736F6C6343000813003300000000000000 ",
        "sourceMap": "140:874:1:-:0;;;;;"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "12600",
          "executionCost": "66",
          "totalCost": "12666"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH",
            "source": 1,
            "value": "80"
          },
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH",
            "source": 1,
            "value": "40"
          },
          { "begin": 140, "end": 1014, "name": "MSTORE", "source": 1 },
          { "begin": 140, "end": 1014, "name": "CALLVALUE", "source": 1 },
          { "begin": 140, "end": 1014, "name": "DUP1", "source": 1 },
          { "begin": 140, "end": 1014, "name": "ISZERO", "source": 1 },
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH [tag]",
            "source": 1,
            "value": "1"
          },
          { "begin": 140, "end": 1014, "name": "JUMPI", "source": 1 },
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 140, "end": 1014, "name": "DUP1", "source": 1 },
          { "begin": 140, "end": 1014, "name": "REVERT", "source": 1 },
          {
            "begin": 140,
            "end": 1014,
            "name": "tag",
            "source": 1,
            "value": "1"
          },
          { "begin": 140, "end": 1014, "name": "JUMPDEST", "source": 1 },
          { "begin": 140, "end": 1014, "name": "POP", "source": 1 },
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH #[$]",
            "source": 1,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 140, "end": 1014, "name": "DUP1", "source": 1 },
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH [$]",
            "source": 1,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 140, "end": 1014, "name": "CODECOPY", "source": 1 },
          {
            "begin": 140,
            "end": 1014,
            "name": "PUSH",
            "source": 1,
            "value": "0"
          },
          { "begin": 140, "end": 1014, "name": "RETURN", "source": 1 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a2646970667358221220f17557941894dfe271ed336efcae14f71bbec5033b6a2307f37746e45da62d6964736f6c63430008130033",
            ".code": [
              {
                "begin": 140,
                "end": 1014,
                "name": "PUSH",
                "source": 1,
                "value": "80"
              },
              {
                "begin": 140,
                "end": 1014,
                "name": "PUSH",
                "source": 1,
                "value": "40"
              },
              { "begin": 140, "end": 1014, "name": "MSTORE", "source": 1 },
              {
                "begin": 140,
                "end": 1014,
                "name": "PUSH",
                "source": 1,
                "value": "0"
              },
              { "begin": 140, "end": 1014, "name": "DUP1", "source": 1 },
              { "begin": 140, "end": 1014, "name": "REVERT", "source": 1 }
            ]
          }
        },
        "sourceList": [
          "@openzeppelin/contracts/utils/Counters.sol",
          "main.sol",
          "#utility.yul"
        ]
      },
      "methodIdentifiers": {}
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"TokenStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"main.sol\":{\"keccak256\":\"0xe444aebad2f73d9db9ea48561eddd7692c585085b229db11c774747d337e0bff\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://181bb18b4cdd9105272410ece5e007ececb2e597f0b8cc166d517cdf0206df63\",\"dweb:/ipfs/QmPQ1QFXSwPvs36GPPEuYUcutj5kpjDUGjQwJCNY7H17ZK\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// contracts/State.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract TokenStorage {\n    struct State {\n        string name;\n        string symbol;\n\n        uint64 metaLastUpdatedSequence;\n\n        uint256 totalSupply;\n        uint8 decimals;\n\n        mapping(address => uint256) balances;\n\n        mapping(address => mapping(address => uint256)) allowances;\n\n        address owner;\n\n        bool initialized;\n\n        uint16 chainId;\n        bytes32 nativeContract;\n\n        // EIP712\n        // Cache the domain separator and salt, but also store the chain id that \n        // it corresponds to, in order to invalidate the cached domain separator\n        // if the chain id changes.\n        bytes32 cachedDomainSeparator;\n        uint256 cachedChainId;\n        address cachedThis;\n        bytes32 cachedSalt;\n        bytes32 cachedHashedName;\n\n        // ERC20Permit draft\n        mapping(address => Counters.Counter) nonces;\n    }\n}\n\ncontract TokenState {\n    using Counters for Counters.Counter;\n\n    TokenStorage.State _state;\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner_) public view returns (uint256) {\n        return _state.nonces[owner_].current();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     */\n    function _useNonce(address owner_) internal returns (uint256 current) {\n        Counters.Counter storage nonce = _state.nonces[owner_];\n        current = nonce.current();\n        nonce.increment();\n    }\n}"
}
