{
  "byteCode": "0x608060405234801561001057600080fd5b50610409806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806384acd1bb11610097578063b172b22211610066578063b172b222146102cd578063d60b347f146102d5578063e039f22414610301578063fbe3c2cd1461030957600080fd5b806384acd1bb1461025a5780639a8a05921461026b578063aa4efa5b14610286578063ad66a5f1146102a957600080fd5b80632f3a3d5d116100d35780632f3a3d5d146101b05780633ca64826146101c157806364d42b1714610228578063739fc8d11461023a57600080fd5b80631a2be4da146100fa5780631ff1e2861461013b5780632c3c02a41461018d575b600080fd5b61012661010836600461032e565b6001600160a01b031660009081526008602052604090205460ff1690565b60405190151581526020015b60405180910390f35b610175610149366004610375565b61ffff91909116600090815260076020908152604080832093835292905220546001600160a01b031690565b6040516001600160a01b039091168152602001610132565b61012661019b36600461039f565b60009081526004602052604090205460ff1690565b6001546001600160a01b0316610175565b61020d6101cf36600461039f565b6040805180820190915260008082526020820152506000908152600a6020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201610132565b600b545b604051908152602001610132565b600254640100000000900460ff1660405160ff9091168152602001610132565b6000546001600160a01b0316610175565b60025461ffff165b60405161ffff9091168152602001610132565b61012661029436600461039f565b60009081526005602052604090205460ff1690565b61022c6102b73660046103b8565b61ffff1660009081526009602052604090205490565b60035461022c565b6101266102e336600461032e565b6001600160a01b031660009081526006602052604090205460ff1690565b61012661031b565b60025462010000900461ffff16610273565b600046610327600b5490565b1415905090565b60006020828403121561034057600080fd5b81356001600160a01b038116811461035757600080fd5b9392505050565b803561ffff8116811461037057600080fd5b919050565b6000806040838503121561038857600080fd5b6103918361035e565b946020939093013593505050565b6000602082840312156103b157600080fd5b5035919050565b6000602082840312156103ca57600080fd5b6103578261035e56fea264697066735822122003e7620dcc43284fd6359864bb8c1e7aeaa19e3ab1efde927c7045fc7109c8c064736f6c63430008130033",
  "contract": {
    "abi": [
      {
        "inputs": [
          { "internalType": "uint16", "name": "chainId_", "type": "uint16" }
        ],
        "name": "bridgeContracts",
        "outputs": [
          { "internalType": "bytes32", "name": "", "type": "bytes32" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "chainId",
        "outputs": [{ "internalType": "uint16", "name": "", "type": "uint16" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "evmChainId",
        "outputs": [
          { "internalType": "uint256", "name": "", "type": "uint256" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "finality",
        "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
        ],
        "name": "governanceActionIsConsumed",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "governanceChainId",
        "outputs": [{ "internalType": "uint16", "name": "", "type": "uint16" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "governanceContract",
        "outputs": [
          { "internalType": "bytes32", "name": "", "type": "bytes32" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "isFork",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "impl", "type": "address" }
        ],
        "name": "isInitialized",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
        ],
        "name": "isTransferCompleted",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "address", "name": "token", "type": "address" }
        ],
        "name": "isWrappedAsset",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
        ],
        "name": "splCache",
        "outputs": [
          {
            "components": [
              { "internalType": "bytes32", "name": "name", "type": "bytes32" },
              { "internalType": "bytes32", "name": "symbol", "type": "bytes32" }
            ],
            "internalType": "struct NFTBridgeStorage.SPLCache",
            "name": "",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "tokenImplementation",
        "outputs": [
          { "internalType": "address", "name": "", "type": "address" }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "wormhole",
        "outputs": [
          {
            "internalType": "contract IWormhole",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint16",
            "name": "tokenChainId",
            "type": "uint16"
          },
          {
            "internalType": "bytes32",
            "name": "tokenAddress",
            "type": "bytes32"
          }
        ],
        "name": "wrappedAsset",
        "outputs": [
          { "internalType": "address", "name": "", "type": "address" }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
    "evm": {
      "assembly": "    /* \"main.sol\":226:2131  contract NFTBridgeGetters is NFTBridgeState {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":226:2131  contract NFTBridgeGetters is NFTBridgeState {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x84acd1bb\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb172b222\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb172b222\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd60b347f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe039f224\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfbe3c2cd\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x84acd1bb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9a8a0592\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaa4efa5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xad66a5f1\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x2f3a3d5d\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x2f3a3d5d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3ca64826\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x64d42b17\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x739fc8d1\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x1a2be4da\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ff1e286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c3c02a4\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"main.sol\":1766:1883  function isWrappedAsset(address token) public view returns (bool){... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"main.sol\":1848:1876  _state.isWrappedAsset[token] */\n      and\n        /* \"main.sol\":1826:1830  bool */\n      0x00\n        /* \"main.sol\":1848:1876  _state.isWrappedAsset[token] */\n      swap1\n      dup2\n      mstore\n        /* \"main.sol\":1848:1869  _state.isWrappedAsset */\n      0x08\n        /* \"main.sol\":1848:1876  _state.isWrappedAsset[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"main.sol\":1766:1883  function isWrappedAsset(address token) public view returns (bool){... */\n      jump\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"main.sol\":1766:1883  function isWrappedAsset(address token) public view returns (bool){... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":1339:1505  function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) public view returns (address){... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"main.sol\":1450:1484  _state.wrappedAssets[tokenChainId] */\n      0xffff\n      swap2\n      swap1\n      swap2\n      and\n        /* \"main.sol\":1425:1432  address */\n      0x00\n        /* \"main.sol\":1450:1484  _state.wrappedAssets[tokenChainId] */\n      swap1\n      dup2\n      mstore\n        /* \"main.sol\":1450:1470  _state.wrappedAssets */\n      0x07\n        /* \"main.sol\":1450:1484  _state.wrappedAssets[tokenChainId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"main.sol\":1450:1498  _state.wrappedAssets[tokenChainId][tokenAddress] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"main.sol\":1339:1505  function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) public view returns (address){... */\n      jump\n    tag_27:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1082:1114   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1064:1115   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1052:1054   */\n      0x20\n        /* \"#utility.yul\":1037:1055   */\n      add\n        /* \"main.sol\":1339:1505  function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) public view returns (address){... */\n      tag_25\n        /* \"#utility.yul\":918:1121   */\n      jump\n        /* \"main.sol\":276:415  function governanceActionIsConsumed(bytes32 hash) public view returns (bool) {... */\n    tag_5:\n      tag_21\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"main.sol\":347:351  bool */\n      0x00\n        /* \"main.sol\":370:408  _state.consumedGovernanceActions[hash] */\n      swap1\n      dup2\n      mstore\n        /* \"main.sol\":370:402  _state.consumedGovernanceActions */\n      0x04\n        /* \"main.sol\":370:408  _state.consumedGovernanceActions[hash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"main.sol\":276:415  function governanceActionIsConsumed(bytes32 hash) public view returns (bool) {... */\n      jump\n        /* \"main.sol\":1650:1760  function tokenImplementation() public view returns (address){... */\n    tag_6:\n        /* \"main.sol\":1727:1753  _state.tokenImplementation */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"main.sol\":1650:1760  function tokenImplementation() public view returns (address){... */\n      jump(tag_27)\n        /* \"main.sol\":1889:2027  function splCache(uint256 tokenId) public view returns (NFTBridgeStorage.SPLCache memory) {... */\n    tag_7:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      pop\n        /* \"main.sol\":1996:2002  _state */\n      0x00\n        /* \"main.sol\":1996:2020  _state.splCache[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"main.sol\":1996:2011  _state.splCache */\n      0x0a\n        /* \"main.sol\":1996:2020  _state.splCache[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"main.sol\":1989:2020  return _state.splCache[tokenId] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      add\n      sload\n      swap1\n      dup3\n      add\n      mstore\n      swap1\n        /* \"main.sol\":1889:2027  function splCache(uint256 tokenId) public view returns (NFTBridgeStorage.SPLCache memory) {... */\n      jump\n    tag_41:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1710:1723   */\n      dup3\n      mload\n        /* \"#utility.yul\":1692:1724   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1780:1784   */\n      0x20\n        /* \"#utility.yul\":1768:1785   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":1762:1786   */\n      mload\n        /* \"#utility.yul\":1740:1760   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1733:1787   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1665:1683   */\n      add\n        /* \"main.sol\":1889:2027  function splCache(uint256 tokenId) public view returns (NFTBridgeStorage.SPLCache memory) {... */\n      tag_25\n        /* \"#utility.yul\":1496:1793   */\n      jump\n        /* \"main.sol\":893:986  function evmChainId() public view returns (uint256) {... */\n    tag_8:\n        /* \"main.sol\":962:979  _state.evmChainId */\n      sload(0x0b)\n        /* \"main.sol\":893:986  function evmChainId() public view returns (uint256) {... */\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1944:1969   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"main.sol\":893:986  function evmChainId() public view returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":1798:1975   */\n      jump\n        /* \"main.sol\":2033:2129  function finality() public view returns (uint8) {... */\n    tag_9:\n        /* \"main.sol\":2098:2113  _state.provider */\n      0x02\n        /* \"main.sol\":2098:2122  _state.provider.finality */\n      sload\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":2033:2129  function finality() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"#utility.yul\":2152:2156   */\n      0xff\n        /* \"#utility.yul\":2140:2157   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2122:2158   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2110:2112   */\n      0x20\n        /* \"#utility.yul\":2095:2113   */\n      add\n        /* \"main.sol\":2033:2129  function finality() public view returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":1980:2164   */\n      jump\n        /* \"main.sol\":685:787  function wormhole() public view returns (IWormhole) {... */\n    tag_10:\n        /* \"main.sol\":726:735  IWormhole */\n      0x00\n        /* \"main.sol\":764:779  _state.wormhole */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"main.sol\":685:787  function wormhole() public view returns (IWormhole) {... */\n      jump(tag_27)\n        /* \"main.sol\":793:887  function chainId() public view returns (uint16){... */\n    tag_11:\n        /* \"main.sol\":857:872  _state.provider */\n      0x02\n        /* \"main.sol\":857:880  _state.provider.chainId */\n      sload\n      0xffff\n      and\n        /* \"main.sol\":793:887  function chainId() public view returns (uint16){... */\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":2568:2574   */\n      0xffff\n        /* \"#utility.yul\":2556:2575   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2538:2576   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2526:2528   */\n      0x20\n        /* \"#utility.yul\":2511:2529   */\n      add\n        /* \"main.sol\":793:887  function chainId() public view returns (uint16){... */\n      tag_25\n        /* \"#utility.yul\":2394:2582   */\n      jump\n        /* \"main.sol\":554:679  function isTransferCompleted(bytes32 hash) public view returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_64\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_64:\n        /* \"main.sol\":618:622  bool */\n      0x00\n        /* \"main.sol\":641:672  _state.completedTransfers[hash] */\n      swap1\n      dup2\n      mstore\n        /* \"main.sol\":641:666  _state.completedTransfers */\n      0x05\n        /* \"main.sol\":641:672  _state.completedTransfers[hash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"main.sol\":554:679  function isTransferCompleted(bytes32 hash) public view returns (bool) {... */\n      jump\n        /* \"main.sol\":1511:1644  function bridgeContracts(uint16 chainId_) public view returns (bytes32){... */\n    tag_13:\n      tag_47\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"main.sol\":1599:1637  _state.bridgeImplementations[chainId_] */\n      0xffff\n      and\n        /* \"main.sol\":1574:1581  bytes32 */\n      0x00\n        /* \"main.sol\":1599:1637  _state.bridgeImplementations[chainId_] */\n      swap1\n      dup2\n      mstore\n        /* \"main.sol\":1599:1627  _state.bridgeImplementations */\n      0x09\n        /* \"main.sol\":1599:1637  _state.bridgeImplementations[chainId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"main.sol\":1511:1644  function bridgeContracts(uint16 chainId_) public view returns (bytes32){... */\n      jump\n        /* \"main.sol\":1216:1333  function governanceContract() public view returns (bytes32){... */\n    tag_14:\n        /* \"main.sol\":1292:1326  _state.provider.governanceContract */\n      sload(0x03)\n        /* \"main.sol\":1216:1333  function governanceContract() public view returns (bytes32){... */\n      jump(tag_47)\n        /* \"main.sol\":421:548  function isInitialized(address impl) public view returns (bool) {... */\n    tag_15:\n      tag_21\n      tag_77\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"main.sol\":502:541  _state.initializedImplementations[impl] */\n      and\n        /* \"main.sol\":479:483  bool */\n      0x00\n        /* \"main.sol\":502:541  _state.initializedImplementations[impl] */\n      swap1\n      dup2\n      mstore\n        /* \"main.sol\":502:535  _state.initializedImplementations */\n      0x06\n        /* \"main.sol\":502:541  _state.initializedImplementations[impl] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"main.sol\":421:548  function isInitialized(address impl) public view returns (bool) {... */\n      jump\n        /* \"main.sol\":992:1090  function isFork() public view returns (bool) {... */\n    tag_16:\n      tag_21\n      tag_81\n      jump\t// in\n        /* \"main.sol\":1096:1210  function governanceChainId() public view returns (uint16){... */\n    tag_17:\n        /* \"main.sol\":1170:1185  _state.provider */\n      0x02\n        /* \"main.sol\":1170:1203  _state.provider.governanceChainId */\n      sload\n      0x010000\n      swap1\n      div\n      0xffff\n      and\n        /* \"main.sol\":1096:1210  function governanceChainId() public view returns (uint16){... */\n      jump(tag_59)\n        /* \"main.sol\":992:1090  function isFork() public view returns (bool) {... */\n    tag_81:\n        /* \"main.sol\":1031:1035  bool */\n      0x00\n        /* \"main.sol\":1070:1083  block.chainid */\n      chainid\n        /* \"main.sol\":1054:1066  evmChainId() */\n      tag_102\n        /* \"main.sol\":962:979  _state.evmChainId */\n      sload(0x0b)\n      swap1\n        /* \"main.sol\":893:986  function evmChainId() public view returns (uint256) {... */\n      jump\n        /* \"main.sol\":1054:1066  evmChainId() */\n    tag_102:\n        /* \"main.sol\":1054:1083  evmChainId() != block.chainid */\n      eq\n      iszero\n        /* \"main.sol\":1047:1083  return evmChainId() != block.chainid */\n      swap1\n      pop\n        /* \"main.sol\":992:1090  function isFork() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_23:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_107:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_108:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:656   */\n    tag_104:\n        /* \"#utility.yul\":564:584   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":624:630   */\n      0xffff\n        /* \"#utility.yul\":613:631   */\n      dup2\n      and\n        /* \"#utility.yul\":603:632   */\n      dup2\n      eq\n        /* \"#utility.yul\":593:650   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":646:647   */\n      0x00\n        /* \"#utility.yul\":643:644   */\n      dup1\n        /* \"#utility.yul\":636:648   */\n      revert\n        /* \"#utility.yul\":593:650   */\n    tag_111:\n        /* \"#utility.yul\":497:656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":661:913   */\n    tag_29:\n        /* \"#utility.yul\":728:734   */\n      0x00\n        /* \"#utility.yul\":736:742   */\n      dup1\n        /* \"#utility.yul\":789:791   */\n      0x40\n        /* \"#utility.yul\":777:786   */\n      dup4\n        /* \"#utility.yul\":768:775   */\n      dup6\n        /* \"#utility.yul\":764:787   */\n      sub\n        /* \"#utility.yul\":760:792   */\n      slt\n        /* \"#utility.yul\":757:809   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":805:806   */\n      0x00\n        /* \"#utility.yul\":802:803   */\n      dup1\n        /* \"#utility.yul\":795:807   */\n      revert\n        /* \"#utility.yul\":757:809   */\n    tag_113:\n        /* \"#utility.yul\":828:856   */\n      tag_114\n        /* \"#utility.yul\":846:855   */\n      dup4\n        /* \"#utility.yul\":828:856   */\n      tag_104\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":818:856   */\n      swap5\n        /* \"#utility.yul\":903:905   */\n      0x20\n        /* \"#utility.yul\":888:906   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":875:907   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":661:913   */\n      jump\t// out\n        /* \"#utility.yul\":1126:1306   */\n    tag_35:\n        /* \"#utility.yul\":1185:1191   */\n      0x00\n        /* \"#utility.yul\":1238:1240   */\n      0x20\n        /* \"#utility.yul\":1226:1235   */\n      dup3\n        /* \"#utility.yul\":1217:1224   */\n      dup5\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1241   */\n      slt\n        /* \"#utility.yul\":1206:1258   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1254:1255   */\n      0x00\n        /* \"#utility.yul\":1251:1252   */\n      dup1\n        /* \"#utility.yul\":1244:1256   */\n      revert\n        /* \"#utility.yul\":1206:1258   */\n    tag_117:\n      pop\n        /* \"#utility.yul\":1277:1300   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1126:1306   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:2771   */\n    tag_69:\n        /* \"#utility.yul\":2645:2651   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2686:2695   */\n      dup3\n        /* \"#utility.yul\":2677:2684   */\n      dup5\n        /* \"#utility.yul\":2673:2696   */\n      sub\n        /* \"#utility.yul\":2669:2701   */\n      slt\n        /* \"#utility.yul\":2666:2718   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2714:2715   */\n      0x00\n        /* \"#utility.yul\":2711:2712   */\n      dup1\n        /* \"#utility.yul\":2704:2716   */\n      revert\n        /* \"#utility.yul\":2666:2718   */\n    tag_126:\n        /* \"#utility.yul\":2737:2765   */\n      tag_108\n        /* \"#utility.yul\":2755:2764   */\n      dup3\n        /* \"#utility.yul\":2737:2765   */\n      tag_104\n      jump\t// in\n\n    auxdata: 0xa264697066735822122003e7620dcc43284fd6359864bb8c1e7aeaa19e3ab1efde927c7045fc7109c8c064736f6c63430008130033\n}\n",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b50610409806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806384acd1bb11610097578063b172b22211610066578063b172b222146102cd578063d60b347f146102d5578063e039f22414610301578063fbe3c2cd1461030957600080fd5b806384acd1bb1461025a5780639a8a05921461026b578063aa4efa5b14610286578063ad66a5f1146102a957600080fd5b80632f3a3d5d116100d35780632f3a3d5d146101b05780633ca64826146101c157806364d42b1714610228578063739fc8d11461023a57600080fd5b80631a2be4da146100fa5780631ff1e2861461013b5780632c3c02a41461018d575b600080fd5b61012661010836600461032e565b6001600160a01b031660009081526008602052604090205460ff1690565b60405190151581526020015b60405180910390f35b610175610149366004610375565b61ffff91909116600090815260076020908152604080832093835292905220546001600160a01b031690565b6040516001600160a01b039091168152602001610132565b61012661019b36600461039f565b60009081526004602052604090205460ff1690565b6001546001600160a01b0316610175565b61020d6101cf36600461039f565b6040805180820190915260008082526020820152506000908152600a6020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201610132565b600b545b604051908152602001610132565b600254640100000000900460ff1660405160ff9091168152602001610132565b6000546001600160a01b0316610175565b60025461ffff165b60405161ffff9091168152602001610132565b61012661029436600461039f565b60009081526005602052604090205460ff1690565b61022c6102b73660046103b8565b61ffff1660009081526009602052604090205490565b60035461022c565b6101266102e336600461032e565b6001600160a01b031660009081526006602052604090205460ff1690565b61012661031b565b60025462010000900461ffff16610273565b600046610327600b5490565b1415905090565b60006020828403121561034057600080fd5b81356001600160a01b038116811461035757600080fd5b9392505050565b803561ffff8116811461037057600080fd5b919050565b6000806040838503121561038857600080fd5b6103918361035e565b946020939093013593505050565b6000602082840312156103b157600080fd5b5035919050565b6000602082840312156103ca57600080fd5b6103578261035e56fea264697066735822122003e7620dcc43284fd6359864bb8c1e7aeaa19e3ab1efde927c7045fc7109c8c064736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84ACD1BB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB172B222 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB172B222 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD60B347F EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xE039F224 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xFBE3C2CD EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84ACD1BB EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xAA4EFA5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xAD66A5F1 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F3A3D5D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2F3A3D5D EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x3CA64826 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x64D42B17 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x739FC8D1 EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A2BE4DA EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1FF1E286 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2C3C02A4 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x375 JUMP JUMPDEST PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x175 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x132 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x175 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x126 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x31B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x273 JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH2 0x327 PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x391 DUP4 PUSH2 0x35E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x357 DUP3 PUSH2 0x35E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xE7 PUSH3 0xDCC43 0x28 0x4F 0xD6 CALLDATALOAD SWAP9 PUSH5 0xBB8C1E7AEA LOG1 SWAP15 GASPRICE 0xB1 0xEF 0xDE SWAP3 PUSH29 0x7045FC7109C8C064736F6C634300081300330000000000000000000000 ",
        "sourceMap": "226:1905:4:-:0;;;;;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "functionDebugData": {
          "@bridgeContracts_138": {
            "entryPoint": null,
            "id": 138,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@chainId_67": {
            "entryPoint": null,
            "id": 67,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@evmChainId_76": {
            "entryPoint": null,
            "id": 76,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@finality_184": {
            "entryPoint": null,
            "id": 184,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@governanceActionIsConsumed_19": {
            "entryPoint": null,
            "id": 19,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@governanceChainId_98": {
            "entryPoint": null,
            "id": 98,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@governanceContract_108": {
            "entryPoint": null,
            "id": 108,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@isFork_88": {
            "entryPoint": 795,
            "id": 88,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@isInitialized_32": {
            "entryPoint": null,
            "id": 32,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@isTransferCompleted_45": {
            "entryPoint": null,
            "id": 45,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@isWrappedAsset_160": {
            "entryPoint": null,
            "id": 160,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@splCache_174": {
            "entryPoint": null,
            "id": 174,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "@tokenImplementation_147": {
            "entryPoint": null,
            "id": 147,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@wormhole_57": {
            "entryPoint": null,
            "id": 57,
            "parameterSlots": 0,
            "returnSlots": 1
          },
          "@wrappedAsset_125": {
            "entryPoint": null,
            "id": 125,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_address": {
            "entryPoint": 814,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_bytes32": {
            "entryPoint": 927,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_uint16": {
            "entryPoint": 952,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_tuple_t_uint16t_bytes32": {
            "entryPoint": 885,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 2
          },
          "abi_decode_tuple_t_uint256": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_decode_uint16": {
            "entryPoint": 862,
            "id": null,
            "parameterSlots": 1,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_contract$_IWormhole_$647__to_t_address__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_struct$_SPLCache_$285_memory_ptr__to_t_struct$_SPLCache_$285_memory_ptr__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          },
          "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
            "entryPoint": null,
            "id": null,
            "parameterSlots": 2,
            "returnSlots": 1
          }
        },
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:2955:5",
              "statements": [
                { "nodeType": "YulBlock", "src": "6:3:5", "statements": [] },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "84:216:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "130:16:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "139:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "142:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "132:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "132:12:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "132:12:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "105:7:5"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:9:5"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "101:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "101:23:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "126:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "97:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "97:32:5"
                        },
                        "nodeType": "YulIf",
                        "src": "94:52:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "155:36:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "181:9:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "168:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "168:23:5"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "159:5:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "254:16:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "263:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "266:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "256:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "256:12:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "256:12:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "213:5:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "224:5:5"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "239:3:5",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "244:1:5",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "235:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "235:11:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "248:1:5",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "231:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "231:19:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "220:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "220:31:5"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "210:2:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "210:42:5"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "203:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "203:50:5"
                        },
                        "nodeType": "YulIf",
                        "src": "200:70:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "279:15:5",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "289:5:5"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "50:9:5",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "61:7:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "73:6:5",
                      "type": ""
                    }
                  ],
                  "src": "14:286:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "400:92:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "410:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "422:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "418:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "418:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "410:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "452:9:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "477:6:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "470:6:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "470:14:5"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "463:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "463:22:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "445:41:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "445:41:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "369:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "380:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "391:4:5",
                      "type": ""
                    }
                  ],
                  "src": "305:187:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "545:111:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "555:29:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "577:6:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "564:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "564:20:5"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "555:5:5"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "634:16:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "643:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "646:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "636:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "636:12:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "636:12:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "606:5:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "617:5:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "624:6:5",
                                      "type": "",
                                      "value": "0xffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "613:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "613:18:5"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "603:2:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "603:29:5"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "596:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "596:37:5"
                        },
                        "nodeType": "YulIf",
                        "src": "593:57:5"
                      }
                    ]
                  },
                  "name": "abi_decode_uint16",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "524:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "535:5:5",
                      "type": ""
                    }
                  ],
                  "src": "497:159:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "747:166:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "793:16:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "802:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "805:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "795:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "795:12:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "795:12:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "768:7:5"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "777:9:5"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "764:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "764:23:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:2:5",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "760:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "760:32:5"
                        },
                        "nodeType": "YulIf",
                        "src": "757:52:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "818:38:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "846:9:5"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_uint16",
                            "nodeType": "YulIdentifier",
                            "src": "828:17:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:28:5"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "865:42:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "892:9:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "903:2:5",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "888:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "888:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "875:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "875:32:5"
                        },
                        "variableNames": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "865:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_uint16t_bytes32",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "705:9:5",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "716:7:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "728:6:5",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "736:6:5",
                      "type": ""
                    }
                  ],
                  "src": "661:252:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1019:102:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1029:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1041:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1052:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1037:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1037:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1029:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1071:9:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1086:6:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1102:3:5",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1107:1:5",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "1098:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1098:11:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1111:1:5",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1094:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1094:19:5"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1082:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1082:32:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1064:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1064:51:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1064:51:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "988:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "999:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1010:4:5",
                      "type": ""
                    }
                  ],
                  "src": "918:203:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1196:110:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1242:16:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1251:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1254:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1244:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1244:12:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1244:12:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1217:7:5"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1226:9:5"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1213:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1213:23:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1238:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1209:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1209:32:5"
                        },
                        "nodeType": "YulIf",
                        "src": "1206:52:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1267:33:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1290:9:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "1277:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1277:23:5"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1267:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_bytes32",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1162:9:5",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "1173:7:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1185:6:5",
                      "type": ""
                    }
                  ],
                  "src": "1126:180:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1381:110:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1427:16:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1436:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1439:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1429:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1429:12:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1429:12:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1402:7:5"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1411:9:5"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1398:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1398:23:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1423:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1394:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1394:32:5"
                        },
                        "nodeType": "YulIf",
                        "src": "1391:52:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1452:33:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1475:9:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "1462:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1462:23:5"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1452:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1347:9:5",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "1358:7:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1370:6:5",
                      "type": ""
                    }
                  ],
                  "src": "1311:180:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1647:146:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1657:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1669:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1680:2:5",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1665:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1665:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1657:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1699:9:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1716:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1710:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1710:13:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1692:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1692:32:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1692:32:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1744:9:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1755:4:5",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1740:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1740:20:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1772:6:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1780:4:5",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1768:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1768:17:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1762:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1762:24:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1733:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1733:54:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1733:54:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_struct$_SPLCache_$285_memory_ptr__to_t_struct$_SPLCache_$285_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1616:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1627:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1638:4:5",
                      "type": ""
                    }
                  ],
                  "src": "1496:297:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1899:76:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1909:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1921:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1917:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1917:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1909:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1951:9:5"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1962:6:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1944:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1944:25:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1944:25:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1868:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1879:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1890:4:5",
                      "type": ""
                    }
                  ],
                  "src": "1798:177:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2077:87:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2087:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2099:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2110:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2095:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2095:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2087:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2129:9:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2144:6:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2152:4:5",
                                  "type": "",
                                  "value": "0xff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2140:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2140:17:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2122:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2122:36:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2122:36:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2046:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2057:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2068:4:5",
                      "type": ""
                    }
                  ],
                  "src": "1980:184:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2287:102:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2297:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2309:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2320:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2305:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2305:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2297:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2339:9:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2354:6:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2370:3:5",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2375:1:5",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "2366:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2366:11:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2379:1:5",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "2362:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2362:19:5"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2350:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2350:32:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2332:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2332:51:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2332:51:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_contract$_IWormhole_$647__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2256:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2267:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2278:4:5",
                      "type": ""
                    }
                  ],
                  "src": "2169:220:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2493:89:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2503:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2515:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2526:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2511:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2511:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2503:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2545:9:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2560:6:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2568:6:5",
                                  "type": "",
                                  "value": "0xffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2556:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2556:19:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2538:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2538:38:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2538:38:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2462:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2473:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2484:4:5",
                      "type": ""
                    }
                  ],
                  "src": "2394:188:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2656:115:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2702:16:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2711:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2714:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2704:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2704:12:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2704:12:5"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2677:7:5"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2686:9:5"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "2673:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2673:23:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2698:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "2669:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2669:32:5"
                        },
                        "nodeType": "YulIf",
                        "src": "2666:52:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2727:38:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2755:9:5"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_uint16",
                            "nodeType": "YulIdentifier",
                            "src": "2737:17:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2737:28:5"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2727:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_uint16",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2622:9:5",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "2633:7:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2645:6:5",
                      "type": ""
                    }
                  ],
                  "src": "2587:184:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2877:76:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2887:26:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2899:9:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2910:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2895:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2895:18:5"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2887:4:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2929:9:5"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2940:6:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2922:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2922:25:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2922:25:5"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2846:9:5",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2857:6:5",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2868:4:5",
                      "type": ""
                    }
                  ],
                  "src": "2776:177:5"
                }
              ]
            },
            "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_SPLCache_$285_memory_ptr__to_t_struct$_SPLCache_$285_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_IWormhole_$647__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
            "id": 5,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806384acd1bb11610097578063b172b22211610066578063b172b222146102cd578063d60b347f146102d5578063e039f22414610301578063fbe3c2cd1461030957600080fd5b806384acd1bb1461025a5780639a8a05921461026b578063aa4efa5b14610286578063ad66a5f1146102a957600080fd5b80632f3a3d5d116100d35780632f3a3d5d146101b05780633ca64826146101c157806364d42b1714610228578063739fc8d11461023a57600080fd5b80631a2be4da146100fa5780631ff1e2861461013b5780632c3c02a41461018d575b600080fd5b61012661010836600461032e565b6001600160a01b031660009081526008602052604090205460ff1690565b60405190151581526020015b60405180910390f35b610175610149366004610375565b61ffff91909116600090815260076020908152604080832093835292905220546001600160a01b031690565b6040516001600160a01b039091168152602001610132565b61012661019b36600461039f565b60009081526004602052604090205460ff1690565b6001546001600160a01b0316610175565b61020d6101cf36600461039f565b6040805180820190915260008082526020820152506000908152600a6020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201610132565b600b545b604051908152602001610132565b600254640100000000900460ff1660405160ff9091168152602001610132565b6000546001600160a01b0316610175565b60025461ffff165b60405161ffff9091168152602001610132565b61012661029436600461039f565b60009081526005602052604090205460ff1690565b61022c6102b73660046103b8565b61ffff1660009081526009602052604090205490565b60035461022c565b6101266102e336600461032e565b6001600160a01b031660009081526006602052604090205460ff1690565b61012661031b565b60025462010000900461ffff16610273565b600046610327600b5490565b1415905090565b60006020828403121561034057600080fd5b81356001600160a01b038116811461035757600080fd5b9392505050565b803561ffff8116811461037057600080fd5b919050565b6000806040838503121561038857600080fd5b6103918361035e565b946020939093013593505050565b6000602082840312156103b157600080fd5b5035919050565b6000602082840312156103ca57600080fd5b6103578261035e56fea264697066735822122003e7620dcc43284fd6359864bb8c1e7aeaa19e3ab1efde927c7045fc7109c8c064736f6c63430008130033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84ACD1BB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB172B222 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB172B222 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD60B347F EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xE039F224 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xFBE3C2CD EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84ACD1BB EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xAA4EFA5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xAD66A5F1 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F3A3D5D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2F3A3D5D EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x3CA64826 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x64D42B17 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x739FC8D1 EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A2BE4DA EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1FF1E286 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2C3C02A4 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x375 JUMP JUMPDEST PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x175 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x132 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x175 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x126 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x31B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x273 JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH2 0x327 PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x391 DUP4 PUSH2 0x35E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x357 DUP3 PUSH2 0x35E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xE7 PUSH3 0xDCC43 0x28 0x4F 0xD6 CALLDATALOAD SWAP9 PUSH5 0xBB8C1E7AEA LOG1 SWAP15 GASPRICE 0xB1 0xEF 0xDE SWAP3 PUSH29 0x7045FC7109C8C064736F6C634300081300330000000000000000000000 ",
        "sourceMap": "226:1905:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:117;;;;;;:::i;:::-;-1:-1:-1;;;;;1848:28:4;1826:4;1848:28;;;:21;:28;;;;;;;;;1766:117;;;;470:14:5;;463:22;445:41;;433:2;418:18;1766:117:4;;;;;;;;1339:166;;;;;;:::i;:::-;1450:34;;;;;1425:7;1450:34;;;:20;:34;;;;;;;;:48;;;;;;;;-1:-1:-1;;;;;1450:48:4;;1339:166;;;;-1:-1:-1;;;;;1082:32:5;;;1064:51;;1052:2;1037:18;1339:166:4;918:203:5;276:139:4;;;;;;:::i;:::-;347:4;370:38;;;:32;:38;;;;;;;;;276:139;1650:110;1727:26;;-1:-1:-1;;;;;1727:26:4;1650:110;;1889:138;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;1996:6:4;:24;;;:15;:24;;;;;;;;;1989:31;;;;;;;;;;;;;;;;;;;;1889:138;;;;;1710:13:5;;1692:32;;1780:4;1768:17;;;1762:24;1740:20;;;1733:54;;;;1665:18;1889:138:4;1496:297:5;893:93:4;962:17;;893:93;;;1944:25:5;;;1932:2;1917:18;893:93:4;1798:177:5;2033:96:4;2098:15;:24;;;;;;2033:96;;2152:4:5;2140:17;;;2122:36;;2110:2;2095:18;2033:96:4;1980:184:5;685:102:4;726:9;764:15;-1:-1:-1;;;;;764:15:4;685:102;;793:94;857:15;:23;;;793:94;;;2568:6:5;2556:19;;;2538:38;;2526:2;2511:18;793:94:4;2394:188:5;554:125:4;;;;;;:::i;:::-;618:4;641:31;;;:25;:31;;;;;;;;;554:125;1511:133;;;;;;:::i;:::-;1599:38;;1574:7;1599:38;;;:28;:38;;;;;;;1511:133;1216:117;1292:34;;1216:117;;421:127;;;;;;:::i;:::-;-1:-1:-1;;;;;502:39:4;479:4;502:39;;;:33;:39;;;;;;;;;421:127;992:98;;;:::i;1096:114::-;1170:15;:33;;;;;;1096:114;;992:98;1031:4;1070:13;1054:12;962:17;;;893:93;1054:12;:29;;1047:36;;992:98;:::o;14:286:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:5;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:5:o;497:159::-;564:20;;624:6;613:18;;603:29;;593:57;;646:1;643;636:12;593:57;497:159;;;:::o;661:252::-;728:6;736;789:2;777:9;768:7;764:23;760:32;757:52;;;805:1;802;795:12;757:52;828:28;846:9;828:28;:::i;:::-;818:38;903:2;888:18;;;;875:32;;-1:-1:-1;;;661:252:5:o;1126:180::-;1185:6;1238:2;1226:9;1217:7;1213:23;1209:32;1206:52;;;1254:1;1251;1244:12;1206:52;-1:-1:-1;1277:23:5;;1126:180;-1:-1:-1;1126:180:5:o;2587:184::-;2645:6;2698:2;2686:9;2677:7;2673:23;2669:32;2666:52;;;2714:1;2711;2704:12;2666:52;2737:28;2755:9;2737:28;:::i"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "206600",
          "executionCost": "251",
          "totalCost": "206851"
        },
        "external": {
          "bridgeContracts(uint16)": "2602",
          "chainId()": "2341",
          "evmChainId()": "2348",
          "finality()": "2395",
          "governanceActionIsConsumed(bytes32)": "2507",
          "governanceChainId()": "2406",
          "governanceContract()": "2314",
          "isFork()": "2399",
          "isInitialized(address)": "2547",
          "isTransferCompleted(bytes32)": "2506",
          "isWrappedAsset(address)": "2527",
          "splCache(uint256)": "4753",
          "tokenImplementation()": "2354",
          "wormhole()": "2354",
          "wrappedAsset(uint16,bytes32)": "2697"
        }
      },
      "legacyAssembly": {
        ".code": [
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH",
            "source": 4,
            "value": "80"
          },
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH",
            "source": 4,
            "value": "40"
          },
          { "begin": 226, "end": 2131, "name": "MSTORE", "source": 4 },
          { "begin": 226, "end": 2131, "name": "CALLVALUE", "source": 4 },
          { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
          { "begin": 226, "end": 2131, "name": "ISZERO", "source": 4 },
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH [tag]",
            "source": 4,
            "value": "1"
          },
          { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH",
            "source": 4,
            "value": "0"
          },
          { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
          { "begin": 226, "end": 2131, "name": "REVERT", "source": 4 },
          {
            "begin": 226,
            "end": 2131,
            "name": "tag",
            "source": 4,
            "value": "1"
          },
          { "begin": 226, "end": 2131, "name": "JUMPDEST", "source": 4 },
          { "begin": 226, "end": 2131, "name": "POP", "source": 4 },
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH #[$]",
            "source": 4,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH [$]",
            "source": 4,
            "value": "0000000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH",
            "source": 4,
            "value": "0"
          },
          { "begin": 226, "end": 2131, "name": "CODECOPY", "source": 4 },
          {
            "begin": 226,
            "end": 2131,
            "name": "PUSH",
            "source": 4,
            "value": "0"
          },
          { "begin": 226, "end": 2131, "name": "RETURN", "source": 4 }
        ],
        ".data": {
          "0": {
            ".auxdata": "a264697066735822122003e7620dcc43284fd6359864bb8c1e7aeaa19e3ab1efde927c7045fc7109c8c064736f6c63430008130033",
            ".code": [
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "80"
              },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 226, "end": 2131, "name": "MSTORE", "source": 4 },
              { "begin": 226, "end": 2131, "name": "CALLVALUE", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              { "begin": 226, "end": 2131, "name": "ISZERO", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "1"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              { "begin": 226, "end": 2131, "name": "REVERT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "tag",
                "source": 4,
                "value": "1"
              },
              { "begin": 226, "end": 2131, "name": "JUMPDEST", "source": 4 },
              { "begin": 226, "end": 2131, "name": "POP", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 226,
                "end": 2131,
                "name": "CALLDATASIZE",
                "source": 4
              },
              { "begin": 226, "end": 2131, "name": "LT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "2"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              {
                "begin": 226,
                "end": 2131,
                "name": "CALLDATALOAD",
                "source": 4
              },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "E0"
              },
              { "begin": 226, "end": 2131, "name": "SHR", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "84ACD1BB"
              },
              { "begin": 226, "end": 2131, "name": "GT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "18"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "B172B222"
              },
              { "begin": 226, "end": 2131, "name": "GT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "19"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "B172B222"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "14"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "D60B347F"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "15"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "E039F224"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "16"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "FBE3C2CD"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "17"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              { "begin": 226, "end": 2131, "name": "REVERT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "tag",
                "source": 4,
                "value": "19"
              },
              { "begin": 226, "end": 2131, "name": "JUMPDEST", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "84ACD1BB"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "10"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "9A8A0592"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "11"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "AA4EFA5B"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "12"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "AD66A5F1"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "13"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              { "begin": 226, "end": 2131, "name": "REVERT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "tag",
                "source": 4,
                "value": "18"
              },
              { "begin": 226, "end": 2131, "name": "JUMPDEST", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "2F3A3D5D"
              },
              { "begin": 226, "end": 2131, "name": "GT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "20"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "2F3A3D5D"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "6"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "3CA64826"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "7"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "64D42B17"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "8"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "739FC8D1"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "9"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              { "begin": 226, "end": 2131, "name": "REVERT", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "tag",
                "source": 4,
                "value": "20"
              },
              { "begin": 226, "end": 2131, "name": "JUMPDEST", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "1A2BE4DA"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "3"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "1FF1E286"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "4"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "2C3C02A4"
              },
              { "begin": 226, "end": 2131, "name": "EQ", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "5"
              },
              { "begin": 226, "end": 2131, "name": "JUMPI", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "tag",
                "source": 4,
                "value": "2"
              },
              { "begin": 226, "end": 2131, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 226,
                "end": 2131,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 226, "end": 2131, "name": "DUP1", "source": 4 },
              { "begin": 226, "end": 2131, "name": "REVERT", "source": 4 },
              {
                "begin": 1766,
                "end": 1883,
                "name": "tag",
                "source": 4,
                "value": "3"
              },
              { "begin": 1766, "end": 1883, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1766,
                "end": 1883,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "21"
              },
              {
                "begin": 1766,
                "end": 1883,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "22"
              },
              {
                "begin": 1766,
                "end": 1883,
                "name": "CALLDATASIZE",
                "source": 4
              },
              {
                "begin": 1766,
                "end": 1883,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 1766,
                "end": 1883,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "23"
              },
              {
                "begin": 1766,
                "end": 1883,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 1766,
                "end": 1883,
                "name": "tag",
                "source": 4,
                "value": "22"
              },
              { "begin": 1766, "end": 1883, "name": "JUMPDEST", "source": 4 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 1848, "end": 1876, "name": "AND", "source": 4 },
              {
                "begin": 1826,
                "end": 1830,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 1848, "end": 1876, "name": "SWAP1", "source": 4 },
              { "begin": 1848, "end": 1876, "name": "DUP2", "source": 4 },
              { "begin": 1848, "end": 1876, "name": "MSTORE", "source": 4 },
              {
                "begin": 1848,
                "end": 1869,
                "name": "PUSH",
                "source": 4,
                "value": "8"
              },
              {
                "begin": 1848,
                "end": 1876,
                "name": "PUSH",
                "source": 4,
                "value": "20"
              },
              { "begin": 1848, "end": 1876, "name": "MSTORE", "source": 4 },
              {
                "begin": 1848,
                "end": 1876,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1848, "end": 1876, "name": "SWAP1", "source": 4 },
              { "begin": 1848, "end": 1876, "name": "KECCAK256", "source": 4 },
              { "begin": 1848, "end": 1876, "name": "SLOAD", "source": 4 },
              {
                "begin": 1848,
                "end": 1876,
                "name": "PUSH",
                "source": 4,
                "value": "FF"
              },
              { "begin": 1848, "end": 1876, "name": "AND", "source": 4 },
              { "begin": 1848, "end": 1876, "name": "SWAP1", "source": 4 },
              { "begin": 1766, "end": 1883, "name": "JUMP", "source": 4 },
              {
                "begin": 1766,
                "end": 1883,
                "name": "tag",
                "source": 4,
                "value": "21"
              },
              { "begin": 1766, "end": 1883, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1766,
                "end": 1883,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1766, "end": 1883, "name": "MLOAD", "source": 4 },
              { "begin": 470, "end": 484, "name": "SWAP1", "source": 5 },
              { "begin": 470, "end": 484, "name": "ISZERO", "source": 5 },
              { "begin": 463, "end": 485, "name": "ISZERO", "source": 5 },
              { "begin": 445, "end": 486, "name": "DUP2", "source": 5 },
              { "begin": 445, "end": 486, "name": "MSTORE", "source": 5 },
              {
                "begin": 433,
                "end": 435,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 418, "end": 436, "name": "ADD", "source": 5 },
              {
                "begin": 1766,
                "end": 1883,
                "name": "tag",
                "source": 4,
                "value": "25"
              },
              { "begin": 1766, "end": 1883, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1766,
                "end": 1883,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1766, "end": 1883, "name": "MLOAD", "source": 4 },
              { "begin": 1766, "end": 1883, "name": "DUP1", "source": 4 },
              { "begin": 1766, "end": 1883, "name": "SWAP2", "source": 4 },
              { "begin": 1766, "end": 1883, "name": "SUB", "source": 4 },
              { "begin": 1766, "end": 1883, "name": "SWAP1", "source": 4 },
              { "begin": 1766, "end": 1883, "name": "RETURN", "source": 4 },
              {
                "begin": 1339,
                "end": 1505,
                "name": "tag",
                "source": 4,
                "value": "4"
              },
              { "begin": 1339, "end": 1505, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1339,
                "end": 1505,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "27"
              },
              {
                "begin": 1339,
                "end": 1505,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "28"
              },
              {
                "begin": 1339,
                "end": 1505,
                "name": "CALLDATASIZE",
                "source": 4
              },
              {
                "begin": 1339,
                "end": 1505,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 1339,
                "end": 1505,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "29"
              },
              {
                "begin": 1339,
                "end": 1505,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 1339,
                "end": 1505,
                "name": "tag",
                "source": 4,
                "value": "28"
              },
              { "begin": 1339, "end": 1505, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1450,
                "end": 1484,
                "name": "PUSH",
                "source": 4,
                "value": "FFFF"
              },
              { "begin": 1450, "end": 1484, "name": "SWAP2", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "SWAP1", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "SWAP2", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "AND", "source": 4 },
              {
                "begin": 1425,
                "end": 1432,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 1450, "end": 1484, "name": "SWAP1", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "DUP2", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "MSTORE", "source": 4 },
              {
                "begin": 1450,
                "end": 1470,
                "name": "PUSH",
                "source": 4,
                "value": "7"
              },
              {
                "begin": 1450,
                "end": 1484,
                "name": "PUSH",
                "source": 4,
                "value": "20"
              },
              { "begin": 1450, "end": 1484, "name": "SWAP1", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "DUP2", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "MSTORE", "source": 4 },
              {
                "begin": 1450,
                "end": 1484,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1450, "end": 1484, "name": "DUP1", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "DUP4", "source": 4 },
              { "begin": 1450, "end": 1484, "name": "KECCAK256", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "SWAP4", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "DUP4", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "MSTORE", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "SWAP3", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "SWAP1", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "MSTORE", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "KECCAK256", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "SLOAD", "source": 4 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 1450, "end": 1498, "name": "AND", "source": 4 },
              { "begin": 1450, "end": 1498, "name": "SWAP1", "source": 4 },
              { "begin": 1339, "end": 1505, "name": "JUMP", "source": 4 },
              {
                "begin": 1339,
                "end": 1505,
                "name": "tag",
                "source": 4,
                "value": "27"
              },
              { "begin": 1339, "end": 1505, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1339,
                "end": 1505,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1339, "end": 1505, "name": "MLOAD", "source": 4 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 1082, "end": 1114, "name": "SWAP1", "source": 5 },
              { "begin": 1082, "end": 1114, "name": "SWAP2", "source": 5 },
              { "begin": 1082, "end": 1114, "name": "AND", "source": 5 },
              { "begin": 1064, "end": 1115, "name": "DUP2", "source": 5 },
              { "begin": 1064, "end": 1115, "name": "MSTORE", "source": 5 },
              {
                "begin": 1052,
                "end": 1054,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 1037, "end": 1055, "name": "ADD", "source": 5 },
              {
                "begin": 1339,
                "end": 1505,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "25"
              },
              { "begin": 918, "end": 1121, "name": "JUMP", "source": 5 },
              {
                "begin": 276,
                "end": 415,
                "name": "tag",
                "source": 4,
                "value": "5"
              },
              { "begin": 276, "end": 415, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 276,
                "end": 415,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "21"
              },
              {
                "begin": 276,
                "end": 415,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "34"
              },
              { "begin": 276, "end": 415, "name": "CALLDATASIZE", "source": 4 },
              {
                "begin": 276,
                "end": 415,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 276,
                "end": 415,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "35"
              },
              {
                "begin": 276,
                "end": 415,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 276,
                "end": 415,
                "name": "tag",
                "source": 4,
                "value": "34"
              },
              { "begin": 276, "end": 415, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 347,
                "end": 351,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 370, "end": 408, "name": "SWAP1", "source": 4 },
              { "begin": 370, "end": 408, "name": "DUP2", "source": 4 },
              { "begin": 370, "end": 408, "name": "MSTORE", "source": 4 },
              {
                "begin": 370,
                "end": 402,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 370,
                "end": 408,
                "name": "PUSH",
                "source": 4,
                "value": "20"
              },
              { "begin": 370, "end": 408, "name": "MSTORE", "source": 4 },
              {
                "begin": 370,
                "end": 408,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 370, "end": 408, "name": "SWAP1", "source": 4 },
              { "begin": 370, "end": 408, "name": "KECCAK256", "source": 4 },
              { "begin": 370, "end": 408, "name": "SLOAD", "source": 4 },
              {
                "begin": 370,
                "end": 408,
                "name": "PUSH",
                "source": 4,
                "value": "FF"
              },
              { "begin": 370, "end": 408, "name": "AND", "source": 4 },
              { "begin": 370, "end": 408, "name": "SWAP1", "source": 4 },
              { "begin": 276, "end": 415, "name": "JUMP", "source": 4 },
              {
                "begin": 1650,
                "end": 1760,
                "name": "tag",
                "source": 4,
                "value": "6"
              },
              { "begin": 1650, "end": 1760, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1727,
                "end": 1753,
                "name": "PUSH",
                "source": 4,
                "value": "1"
              },
              { "begin": 1727, "end": 1753, "name": "SLOAD", "source": 4 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 1727, "end": 1753, "name": "AND", "source": 4 },
              {
                "begin": 1650,
                "end": 1760,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "27"
              },
              { "begin": 1650, "end": 1760, "name": "JUMP", "source": 4 },
              {
                "begin": 1889,
                "end": 2027,
                "name": "tag",
                "source": 4,
                "value": "7"
              },
              { "begin": 1889, "end": 2027, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1889,
                "end": 2027,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "41"
              },
              {
                "begin": 1889,
                "end": 2027,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "42"
              },
              {
                "begin": 1889,
                "end": 2027,
                "name": "CALLDATASIZE",
                "source": 4
              },
              {
                "begin": 1889,
                "end": 2027,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 1889,
                "end": 2027,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "35"
              },
              {
                "begin": 1889,
                "end": 2027,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 1889,
                "end": 2027,
                "name": "tag",
                "source": 4,
                "value": "42"
              },
              { "begin": 1889, "end": 2027, "name": "JUMPDEST", "source": 4 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "40"
              },
              { "begin": -1, "end": -1, "name": "DUP1", "source": -1 },
              { "begin": -1, "end": -1, "name": "MLOAD", "source": -1 },
              { "begin": -1, "end": -1, "name": "DUP1", "source": -1 },
              { "begin": -1, "end": -1, "name": "DUP3", "source": -1 },
              { "begin": -1, "end": -1, "name": "ADD", "source": -1 },
              { "begin": -1, "end": -1, "name": "SWAP1", "source": -1 },
              { "begin": -1, "end": -1, "name": "SWAP2", "source": -1 },
              { "begin": -1, "end": -1, "name": "MSTORE", "source": -1 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "0"
              },
              { "begin": -1, "end": -1, "name": "DUP1", "source": -1 },
              { "begin": -1, "end": -1, "name": "DUP3", "source": -1 },
              { "begin": -1, "end": -1, "name": "MSTORE", "source": -1 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "20"
              },
              { "begin": -1, "end": -1, "name": "DUP3", "source": -1 },
              { "begin": -1, "end": -1, "name": "ADD", "source": -1 },
              { "begin": -1, "end": -1, "name": "MSTORE", "source": -1 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              {
                "begin": 1996,
                "end": 2002,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 1996, "end": 2020, "name": "SWAP1", "source": 4 },
              { "begin": 1996, "end": 2020, "name": "DUP2", "source": 4 },
              { "begin": 1996, "end": 2020, "name": "MSTORE", "source": 4 },
              {
                "begin": 1996,
                "end": 2011,
                "name": "PUSH",
                "source": 4,
                "value": "A"
              },
              {
                "begin": 1996,
                "end": 2020,
                "name": "PUSH",
                "source": 4,
                "value": "20"
              },
              { "begin": 1996, "end": 2020, "name": "SWAP1", "source": 4 },
              { "begin": 1996, "end": 2020, "name": "DUP2", "source": 4 },
              { "begin": 1996, "end": 2020, "name": "MSTORE", "source": 4 },
              {
                "begin": 1996,
                "end": 2020,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1996, "end": 2020, "name": "SWAP2", "source": 4 },
              { "begin": 1996, "end": 2020, "name": "DUP3", "source": 4 },
              { "begin": 1996, "end": 2020, "name": "SWAP1", "source": 4 },
              { "begin": 1996, "end": 2020, "name": "KECCAK256", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "DUP3", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "MLOAD", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "DUP1", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "DUP5", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "ADD", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "SWAP1", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "SWAP4", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "MSTORE", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "DUP1", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "SLOAD", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "DUP4", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "MSTORE", "source": 4 },
              {
                "begin": 1989,
                "end": 2020,
                "name": "PUSH",
                "source": 4,
                "value": "1"
              },
              { "begin": 1989, "end": 2020, "name": "ADD", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "SLOAD", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "SWAP1", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "DUP3", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "ADD", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "MSTORE", "source": 4 },
              { "begin": 1989, "end": 2020, "name": "SWAP1", "source": 4 },
              { "begin": 1889, "end": 2027, "name": "JUMP", "source": 4 },
              {
                "begin": 1889,
                "end": 2027,
                "name": "tag",
                "source": 4,
                "value": "41"
              },
              { "begin": 1889, "end": 2027, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1889,
                "end": 2027,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1889, "end": 2027, "name": "DUP1", "source": 4 },
              { "begin": 1889, "end": 2027, "name": "MLOAD", "source": 4 },
              { "begin": 1710, "end": 1723, "name": "DUP3", "source": 5 },
              { "begin": 1710, "end": 1723, "name": "MLOAD", "source": 5 },
              { "begin": 1692, "end": 1724, "name": "DUP2", "source": 5 },
              { "begin": 1692, "end": 1724, "name": "MSTORE", "source": 5 },
              {
                "begin": 1780,
                "end": 1784,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 1768, "end": 1785, "name": "SWAP3", "source": 5 },
              { "begin": 1768, "end": 1785, "name": "DUP4", "source": 5 },
              { "begin": 1768, "end": 1785, "name": "ADD", "source": 5 },
              { "begin": 1762, "end": 1786, "name": "MLOAD", "source": 5 },
              { "begin": 1740, "end": 1760, "name": "SWAP3", "source": 5 },
              { "begin": 1740, "end": 1760, "name": "DUP2", "source": 5 },
              { "begin": 1740, "end": 1760, "name": "ADD", "source": 5 },
              { "begin": 1733, "end": 1787, "name": "SWAP3", "source": 5 },
              { "begin": 1733, "end": 1787, "name": "SWAP1", "source": 5 },
              { "begin": 1733, "end": 1787, "name": "SWAP3", "source": 5 },
              { "begin": 1733, "end": 1787, "name": "MSTORE", "source": 5 },
              { "begin": 1665, "end": 1683, "name": "ADD", "source": 5 },
              {
                "begin": 1889,
                "end": 2027,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "25"
              },
              { "begin": 1496, "end": 1793, "name": "JUMP", "source": 5 },
              {
                "begin": 893,
                "end": 986,
                "name": "tag",
                "source": 4,
                "value": "8"
              },
              { "begin": 893, "end": 986, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 962,
                "end": 979,
                "name": "PUSH",
                "source": 4,
                "value": "B"
              },
              { "begin": 962, "end": 979, "name": "SLOAD", "source": 4 },
              {
                "begin": 893,
                "end": 986,
                "name": "tag",
                "source": 4,
                "value": "47"
              },
              { "begin": 893, "end": 986, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 893,
                "end": 986,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 893, "end": 986, "name": "MLOAD", "source": 4 },
              { "begin": 1944, "end": 1969, "name": "SWAP1", "source": 5 },
              { "begin": 1944, "end": 1969, "name": "DUP2", "source": 5 },
              { "begin": 1944, "end": 1969, "name": "MSTORE", "source": 5 },
              {
                "begin": 1932,
                "end": 1934,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 1917, "end": 1935, "name": "ADD", "source": 5 },
              {
                "begin": 893,
                "end": 986,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "25"
              },
              { "begin": 1798, "end": 1975, "name": "JUMP", "source": 5 },
              {
                "begin": 2033,
                "end": 2129,
                "name": "tag",
                "source": 4,
                "value": "9"
              },
              { "begin": 2033, "end": 2129, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 2098,
                "end": 2113,
                "name": "PUSH",
                "source": 4,
                "value": "2"
              },
              { "begin": 2098, "end": 2122, "name": "SLOAD", "source": 4 },
              {
                "begin": 2098,
                "end": 2122,
                "name": "PUSH",
                "source": 4,
                "value": "100000000"
              },
              { "begin": 2098, "end": 2122, "name": "SWAP1", "source": 4 },
              { "begin": 2098, "end": 2122, "name": "DIV", "source": 4 },
              {
                "begin": 2098,
                "end": 2122,
                "name": "PUSH",
                "source": 4,
                "value": "FF"
              },
              { "begin": 2098, "end": 2122, "name": "AND", "source": 4 },
              {
                "begin": 2033,
                "end": 2129,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 2033, "end": 2129, "name": "MLOAD", "source": 4 },
              {
                "begin": 2152,
                "end": 2156,
                "name": "PUSH",
                "source": 5,
                "value": "FF"
              },
              { "begin": 2140, "end": 2157, "name": "SWAP1", "source": 5 },
              { "begin": 2140, "end": 2157, "name": "SWAP2", "source": 5 },
              { "begin": 2140, "end": 2157, "name": "AND", "source": 5 },
              { "begin": 2122, "end": 2158, "name": "DUP2", "source": 5 },
              { "begin": 2122, "end": 2158, "name": "MSTORE", "source": 5 },
              {
                "begin": 2110,
                "end": 2112,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 2095, "end": 2113, "name": "ADD", "source": 5 },
              {
                "begin": 2033,
                "end": 2129,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "25"
              },
              { "begin": 1980, "end": 2164, "name": "JUMP", "source": 5 },
              {
                "begin": 685,
                "end": 787,
                "name": "tag",
                "source": 4,
                "value": "10"
              },
              { "begin": 685, "end": 787, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 726,
                "end": 735,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 764, "end": 779, "name": "SLOAD", "source": 4 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 764, "end": 779, "name": "AND", "source": 4 },
              {
                "begin": 685,
                "end": 787,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "27"
              },
              { "begin": 685, "end": 787, "name": "JUMP", "source": 4 },
              {
                "begin": 793,
                "end": 887,
                "name": "tag",
                "source": 4,
                "value": "11"
              },
              { "begin": 793, "end": 887, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 857,
                "end": 872,
                "name": "PUSH",
                "source": 4,
                "value": "2"
              },
              { "begin": 857, "end": 880, "name": "SLOAD", "source": 4 },
              {
                "begin": 857,
                "end": 880,
                "name": "PUSH",
                "source": 4,
                "value": "FFFF"
              },
              { "begin": 857, "end": 880, "name": "AND", "source": 4 },
              {
                "begin": 793,
                "end": 887,
                "name": "tag",
                "source": 4,
                "value": "59"
              },
              { "begin": 793, "end": 887, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 793,
                "end": 887,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 793, "end": 887, "name": "MLOAD", "source": 4 },
              {
                "begin": 2568,
                "end": 2574,
                "name": "PUSH",
                "source": 5,
                "value": "FFFF"
              },
              { "begin": 2556, "end": 2575, "name": "SWAP1", "source": 5 },
              { "begin": 2556, "end": 2575, "name": "SWAP2", "source": 5 },
              { "begin": 2556, "end": 2575, "name": "AND", "source": 5 },
              { "begin": 2538, "end": 2576, "name": "DUP2", "source": 5 },
              { "begin": 2538, "end": 2576, "name": "MSTORE", "source": 5 },
              {
                "begin": 2526,
                "end": 2528,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 2511, "end": 2529, "name": "ADD", "source": 5 },
              {
                "begin": 793,
                "end": 887,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "25"
              },
              { "begin": 2394, "end": 2582, "name": "JUMP", "source": 5 },
              {
                "begin": 554,
                "end": 679,
                "name": "tag",
                "source": 4,
                "value": "12"
              },
              { "begin": 554, "end": 679, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 554,
                "end": 679,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "21"
              },
              {
                "begin": 554,
                "end": 679,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "64"
              },
              { "begin": 554, "end": 679, "name": "CALLDATASIZE", "source": 4 },
              {
                "begin": 554,
                "end": 679,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 554,
                "end": 679,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "35"
              },
              {
                "begin": 554,
                "end": 679,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 554,
                "end": 679,
                "name": "tag",
                "source": 4,
                "value": "64"
              },
              { "begin": 554, "end": 679, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 618,
                "end": 622,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 641, "end": 672, "name": "SWAP1", "source": 4 },
              { "begin": 641, "end": 672, "name": "DUP2", "source": 4 },
              { "begin": 641, "end": 672, "name": "MSTORE", "source": 4 },
              {
                "begin": 641,
                "end": 666,
                "name": "PUSH",
                "source": 4,
                "value": "5"
              },
              {
                "begin": 641,
                "end": 672,
                "name": "PUSH",
                "source": 4,
                "value": "20"
              },
              { "begin": 641, "end": 672, "name": "MSTORE", "source": 4 },
              {
                "begin": 641,
                "end": 672,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 641, "end": 672, "name": "SWAP1", "source": 4 },
              { "begin": 641, "end": 672, "name": "KECCAK256", "source": 4 },
              { "begin": 641, "end": 672, "name": "SLOAD", "source": 4 },
              {
                "begin": 641,
                "end": 672,
                "name": "PUSH",
                "source": 4,
                "value": "FF"
              },
              { "begin": 641, "end": 672, "name": "AND", "source": 4 },
              { "begin": 641, "end": 672, "name": "SWAP1", "source": 4 },
              { "begin": 554, "end": 679, "name": "JUMP", "source": 4 },
              {
                "begin": 1511,
                "end": 1644,
                "name": "tag",
                "source": 4,
                "value": "13"
              },
              { "begin": 1511, "end": 1644, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1511,
                "end": 1644,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "47"
              },
              {
                "begin": 1511,
                "end": 1644,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "68"
              },
              {
                "begin": 1511,
                "end": 1644,
                "name": "CALLDATASIZE",
                "source": 4
              },
              {
                "begin": 1511,
                "end": 1644,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 1511,
                "end": 1644,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "69"
              },
              {
                "begin": 1511,
                "end": 1644,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 1511,
                "end": 1644,
                "name": "tag",
                "source": 4,
                "value": "68"
              },
              { "begin": 1511, "end": 1644, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1599,
                "end": 1637,
                "name": "PUSH",
                "source": 4,
                "value": "FFFF"
              },
              { "begin": 1599, "end": 1637, "name": "AND", "source": 4 },
              {
                "begin": 1574,
                "end": 1581,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 1599, "end": 1637, "name": "SWAP1", "source": 4 },
              { "begin": 1599, "end": 1637, "name": "DUP2", "source": 4 },
              { "begin": 1599, "end": 1637, "name": "MSTORE", "source": 4 },
              {
                "begin": 1599,
                "end": 1627,
                "name": "PUSH",
                "source": 4,
                "value": "9"
              },
              {
                "begin": 1599,
                "end": 1637,
                "name": "PUSH",
                "source": 4,
                "value": "20"
              },
              { "begin": 1599, "end": 1637, "name": "MSTORE", "source": 4 },
              {
                "begin": 1599,
                "end": 1637,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 1599, "end": 1637, "name": "SWAP1", "source": 4 },
              { "begin": 1599, "end": 1637, "name": "KECCAK256", "source": 4 },
              { "begin": 1599, "end": 1637, "name": "SLOAD", "source": 4 },
              { "begin": 1599, "end": 1637, "name": "SWAP1", "source": 4 },
              { "begin": 1511, "end": 1644, "name": "JUMP", "source": 4 },
              {
                "begin": 1216,
                "end": 1333,
                "name": "tag",
                "source": 4,
                "value": "14"
              },
              { "begin": 1216, "end": 1333, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1292,
                "end": 1326,
                "name": "PUSH",
                "source": 4,
                "value": "3"
              },
              { "begin": 1292, "end": 1326, "name": "SLOAD", "source": 4 },
              {
                "begin": 1216,
                "end": 1333,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "47"
              },
              { "begin": 1216, "end": 1333, "name": "JUMP", "source": 4 },
              {
                "begin": 421,
                "end": 548,
                "name": "tag",
                "source": 4,
                "value": "15"
              },
              { "begin": 421, "end": 548, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 421,
                "end": 548,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "21"
              },
              {
                "begin": 421,
                "end": 548,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "77"
              },
              { "begin": 421, "end": 548, "name": "CALLDATASIZE", "source": 4 },
              {
                "begin": 421,
                "end": 548,
                "name": "PUSH",
                "source": 4,
                "value": "4"
              },
              {
                "begin": 421,
                "end": 548,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "23"
              },
              {
                "begin": 421,
                "end": 548,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 421,
                "end": 548,
                "name": "tag",
                "source": 4,
                "value": "77"
              },
              { "begin": 421, "end": 548, "name": "JUMPDEST", "source": 4 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 502, "end": 541, "name": "AND", "source": 4 },
              {
                "begin": 479,
                "end": 483,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 502, "end": 541, "name": "SWAP1", "source": 4 },
              { "begin": 502, "end": 541, "name": "DUP2", "source": 4 },
              { "begin": 502, "end": 541, "name": "MSTORE", "source": 4 },
              {
                "begin": 502,
                "end": 535,
                "name": "PUSH",
                "source": 4,
                "value": "6"
              },
              {
                "begin": 502,
                "end": 541,
                "name": "PUSH",
                "source": 4,
                "value": "20"
              },
              { "begin": 502, "end": 541, "name": "MSTORE", "source": 4 },
              {
                "begin": 502,
                "end": 541,
                "name": "PUSH",
                "source": 4,
                "value": "40"
              },
              { "begin": 502, "end": 541, "name": "SWAP1", "source": 4 },
              { "begin": 502, "end": 541, "name": "KECCAK256", "source": 4 },
              { "begin": 502, "end": 541, "name": "SLOAD", "source": 4 },
              {
                "begin": 502,
                "end": 541,
                "name": "PUSH",
                "source": 4,
                "value": "FF"
              },
              { "begin": 502, "end": 541, "name": "AND", "source": 4 },
              { "begin": 502, "end": 541, "name": "SWAP1", "source": 4 },
              { "begin": 421, "end": 548, "name": "JUMP", "source": 4 },
              {
                "begin": 992,
                "end": 1090,
                "name": "tag",
                "source": 4,
                "value": "16"
              },
              { "begin": 992, "end": 1090, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 992,
                "end": 1090,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "21"
              },
              {
                "begin": 992,
                "end": 1090,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "81"
              },
              {
                "begin": 992,
                "end": 1090,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 1096,
                "end": 1210,
                "name": "tag",
                "source": 4,
                "value": "17"
              },
              { "begin": 1096, "end": 1210, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1170,
                "end": 1185,
                "name": "PUSH",
                "source": 4,
                "value": "2"
              },
              { "begin": 1170, "end": 1203, "name": "SLOAD", "source": 4 },
              {
                "begin": 1170,
                "end": 1203,
                "name": "PUSH",
                "source": 4,
                "value": "10000"
              },
              { "begin": 1170, "end": 1203, "name": "SWAP1", "source": 4 },
              { "begin": 1170, "end": 1203, "name": "DIV", "source": 4 },
              {
                "begin": 1170,
                "end": 1203,
                "name": "PUSH",
                "source": 4,
                "value": "FFFF"
              },
              { "begin": 1170, "end": 1203, "name": "AND", "source": 4 },
              {
                "begin": 1096,
                "end": 1210,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "59"
              },
              { "begin": 1096, "end": 1210, "name": "JUMP", "source": 4 },
              {
                "begin": 992,
                "end": 1090,
                "name": "tag",
                "source": 4,
                "value": "81"
              },
              { "begin": 992, "end": 1090, "name": "JUMPDEST", "source": 4 },
              {
                "begin": 1031,
                "end": 1035,
                "name": "PUSH",
                "source": 4,
                "value": "0"
              },
              { "begin": 1070, "end": 1083, "name": "CHAINID", "source": 4 },
              {
                "begin": 1054,
                "end": 1066,
                "name": "PUSH [tag]",
                "source": 4,
                "value": "102"
              },
              {
                "begin": 962,
                "end": 979,
                "name": "PUSH",
                "source": 4,
                "value": "B"
              },
              { "begin": 962, "end": 979, "name": "SLOAD", "source": 4 },
              { "begin": 962, "end": 979, "name": "SWAP1", "source": 4 },
              { "begin": 893, "end": 986, "name": "JUMP", "source": 4 },
              {
                "begin": 1054,
                "end": 1066,
                "name": "tag",
                "source": 4,
                "value": "102"
              },
              { "begin": 1054, "end": 1066, "name": "JUMPDEST", "source": 4 },
              { "begin": 1054, "end": 1083, "name": "EQ", "source": 4 },
              { "begin": 1054, "end": 1083, "name": "ISZERO", "source": 4 },
              { "begin": 1047, "end": 1083, "name": "SWAP1", "source": 4 },
              { "begin": 1047, "end": 1083, "name": "POP", "source": 4 },
              { "begin": 992, "end": 1090, "name": "SWAP1", "source": 4 },
              {
                "begin": 992,
                "end": 1090,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 4
              },
              {
                "begin": 14,
                "end": 300,
                "name": "tag",
                "source": 5,
                "value": "23"
              },
              { "begin": 14, "end": 300, "name": "JUMPDEST", "source": 5 },
              {
                "begin": 73,
                "end": 79,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              {
                "begin": 126,
                "end": 128,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 114, "end": 123, "name": "DUP3", "source": 5 },
              { "begin": 105, "end": 112, "name": "DUP5", "source": 5 },
              { "begin": 101, "end": 124, "name": "SUB", "source": 5 },
              { "begin": 97, "end": 129, "name": "SLT", "source": 5 },
              { "begin": 94, "end": 146, "name": "ISZERO", "source": 5 },
              {
                "begin": 94,
                "end": 146,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "107"
              },
              { "begin": 94, "end": 146, "name": "JUMPI", "source": 5 },
              {
                "begin": 142,
                "end": 143,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              { "begin": 139, "end": 140, "name": "DUP1", "source": 5 },
              { "begin": 132, "end": 144, "name": "REVERT", "source": 5 },
              {
                "begin": 94,
                "end": 146,
                "name": "tag",
                "source": 5,
                "value": "107"
              },
              { "begin": 94, "end": 146, "name": "JUMPDEST", "source": 5 },
              { "begin": 168, "end": 191, "name": "DUP2", "source": 5 },
              { "begin": 168, "end": 191, "name": "CALLDATALOAD", "source": 5 },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "source": -1,
                "value": "A0"
              },
              { "begin": -1, "end": -1, "name": "SHL", "source": -1 },
              { "begin": -1, "end": -1, "name": "SUB", "source": -1 },
              { "begin": 220, "end": 251, "name": "DUP2", "source": 5 },
              { "begin": 220, "end": 251, "name": "AND", "source": 5 },
              { "begin": 210, "end": 252, "name": "DUP2", "source": 5 },
              { "begin": 210, "end": 252, "name": "EQ", "source": 5 },
              {
                "begin": 200,
                "end": 270,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "108"
              },
              { "begin": 200, "end": 270, "name": "JUMPI", "source": 5 },
              {
                "begin": 266,
                "end": 267,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              { "begin": 263, "end": 264, "name": "DUP1", "source": 5 },
              { "begin": 256, "end": 268, "name": "REVERT", "source": 5 },
              {
                "begin": 200,
                "end": 270,
                "name": "tag",
                "source": 5,
                "value": "108"
              },
              { "begin": 200, "end": 270, "name": "JUMPDEST", "source": 5 },
              { "begin": 289, "end": 294, "name": "SWAP4", "source": 5 },
              { "begin": 14, "end": 300, "name": "SWAP3", "source": 5 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              {
                "begin": 14,
                "end": 300,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 5
              },
              {
                "begin": 497,
                "end": 656,
                "name": "tag",
                "source": 5,
                "value": "104"
              },
              { "begin": 497, "end": 656, "name": "JUMPDEST", "source": 5 },
              { "begin": 564, "end": 584, "name": "DUP1", "source": 5 },
              { "begin": 564, "end": 584, "name": "CALLDATALOAD", "source": 5 },
              {
                "begin": 624,
                "end": 630,
                "name": "PUSH",
                "source": 5,
                "value": "FFFF"
              },
              { "begin": 613, "end": 631, "name": "DUP2", "source": 5 },
              { "begin": 613, "end": 631, "name": "AND", "source": 5 },
              { "begin": 603, "end": 632, "name": "DUP2", "source": 5 },
              { "begin": 603, "end": 632, "name": "EQ", "source": 5 },
              {
                "begin": 593,
                "end": 650,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "111"
              },
              { "begin": 593, "end": 650, "name": "JUMPI", "source": 5 },
              {
                "begin": 646,
                "end": 647,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              { "begin": 643, "end": 644, "name": "DUP1", "source": 5 },
              { "begin": 636, "end": 648, "name": "REVERT", "source": 5 },
              {
                "begin": 593,
                "end": 650,
                "name": "tag",
                "source": 5,
                "value": "111"
              },
              { "begin": 593, "end": 650, "name": "JUMPDEST", "source": 5 },
              { "begin": 497, "end": 656, "name": "SWAP2", "source": 5 },
              { "begin": 497, "end": 656, "name": "SWAP1", "source": 5 },
              { "begin": 497, "end": 656, "name": "POP", "source": 5 },
              {
                "begin": 497,
                "end": 656,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 5
              },
              {
                "begin": 661,
                "end": 913,
                "name": "tag",
                "source": 5,
                "value": "29"
              },
              { "begin": 661, "end": 913, "name": "JUMPDEST", "source": 5 },
              {
                "begin": 728,
                "end": 734,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              { "begin": 736, "end": 742, "name": "DUP1", "source": 5 },
              {
                "begin": 789,
                "end": 791,
                "name": "PUSH",
                "source": 5,
                "value": "40"
              },
              { "begin": 777, "end": 786, "name": "DUP4", "source": 5 },
              { "begin": 768, "end": 775, "name": "DUP6", "source": 5 },
              { "begin": 764, "end": 787, "name": "SUB", "source": 5 },
              { "begin": 760, "end": 792, "name": "SLT", "source": 5 },
              { "begin": 757, "end": 809, "name": "ISZERO", "source": 5 },
              {
                "begin": 757,
                "end": 809,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "113"
              },
              { "begin": 757, "end": 809, "name": "JUMPI", "source": 5 },
              {
                "begin": 805,
                "end": 806,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              { "begin": 802, "end": 803, "name": "DUP1", "source": 5 },
              { "begin": 795, "end": 807, "name": "REVERT", "source": 5 },
              {
                "begin": 757,
                "end": 809,
                "name": "tag",
                "source": 5,
                "value": "113"
              },
              { "begin": 757, "end": 809, "name": "JUMPDEST", "source": 5 },
              {
                "begin": 828,
                "end": 856,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "114"
              },
              { "begin": 846, "end": 855, "name": "DUP4", "source": 5 },
              {
                "begin": 828,
                "end": 856,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "104"
              },
              {
                "begin": 828,
                "end": 856,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 5
              },
              {
                "begin": 828,
                "end": 856,
                "name": "tag",
                "source": 5,
                "value": "114"
              },
              { "begin": 828, "end": 856, "name": "JUMPDEST", "source": 5 },
              { "begin": 818, "end": 856, "name": "SWAP5", "source": 5 },
              {
                "begin": 903,
                "end": 905,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 888, "end": 906, "name": "SWAP4", "source": 5 },
              { "begin": 888, "end": 906, "name": "SWAP1", "source": 5 },
              { "begin": 888, "end": 906, "name": "SWAP4", "source": 5 },
              { "begin": 888, "end": 906, "name": "ADD", "source": 5 },
              { "begin": 875, "end": 907, "name": "CALLDATALOAD", "source": 5 },
              { "begin": 875, "end": 907, "name": "SWAP4", "source": 5 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              {
                "begin": 661,
                "end": 913,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 5
              },
              {
                "begin": 1126,
                "end": 1306,
                "name": "tag",
                "source": 5,
                "value": "35"
              },
              { "begin": 1126, "end": 1306, "name": "JUMPDEST", "source": 5 },
              {
                "begin": 1185,
                "end": 1191,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              {
                "begin": 1238,
                "end": 1240,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 1226, "end": 1235, "name": "DUP3", "source": 5 },
              { "begin": 1217, "end": 1224, "name": "DUP5", "source": 5 },
              { "begin": 1213, "end": 1236, "name": "SUB", "source": 5 },
              { "begin": 1209, "end": 1241, "name": "SLT", "source": 5 },
              { "begin": 1206, "end": 1258, "name": "ISZERO", "source": 5 },
              {
                "begin": 1206,
                "end": 1258,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "117"
              },
              { "begin": 1206, "end": 1258, "name": "JUMPI", "source": 5 },
              {
                "begin": 1254,
                "end": 1255,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              { "begin": 1251, "end": 1252, "name": "DUP1", "source": 5 },
              { "begin": 1244, "end": 1256, "name": "REVERT", "source": 5 },
              {
                "begin": 1206,
                "end": 1258,
                "name": "tag",
                "source": 5,
                "value": "117"
              },
              { "begin": 1206, "end": 1258, "name": "JUMPDEST", "source": 5 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              {
                "begin": 1277,
                "end": 1300,
                "name": "CALLDATALOAD",
                "source": 5
              },
              { "begin": 1277, "end": 1300, "name": "SWAP2", "source": 5 },
              { "begin": 1126, "end": 1306, "name": "SWAP1", "source": 5 },
              { "begin": -1, "end": -1, "name": "POP", "source": -1 },
              {
                "begin": 1126,
                "end": 1306,
                "jumpType": "[out]",
                "name": "JUMP",
                "source": 5
              },
              {
                "begin": 2587,
                "end": 2771,
                "name": "tag",
                "source": 5,
                "value": "69"
              },
              { "begin": 2587, "end": 2771, "name": "JUMPDEST", "source": 5 },
              {
                "begin": 2645,
                "end": 2651,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              {
                "begin": 2698,
                "end": 2700,
                "name": "PUSH",
                "source": 5,
                "value": "20"
              },
              { "begin": 2686, "end": 2695, "name": "DUP3", "source": 5 },
              { "begin": 2677, "end": 2684, "name": "DUP5", "source": 5 },
              { "begin": 2673, "end": 2696, "name": "SUB", "source": 5 },
              { "begin": 2669, "end": 2701, "name": "SLT", "source": 5 },
              { "begin": 2666, "end": 2718, "name": "ISZERO", "source": 5 },
              {
                "begin": 2666,
                "end": 2718,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "126"
              },
              { "begin": 2666, "end": 2718, "name": "JUMPI", "source": 5 },
              {
                "begin": 2714,
                "end": 2715,
                "name": "PUSH",
                "source": 5,
                "value": "0"
              },
              { "begin": 2711, "end": 2712, "name": "DUP1", "source": 5 },
              { "begin": 2704, "end": 2716, "name": "REVERT", "source": 5 },
              {
                "begin": 2666,
                "end": 2718,
                "name": "tag",
                "source": 5,
                "value": "126"
              },
              { "begin": 2666, "end": 2718, "name": "JUMPDEST", "source": 5 },
              {
                "begin": 2737,
                "end": 2765,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "108"
              },
              { "begin": 2755, "end": 2764, "name": "DUP3", "source": 5 },
              {
                "begin": 2737,
                "end": 2765,
                "name": "PUSH [tag]",
                "source": 5,
                "value": "104"
              },
              {
                "begin": 2737,
                "end": 2765,
                "jumpType": "[in]",
                "name": "JUMP",
                "source": 5
              }
            ]
          }
        },
        "sourceList": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "NFTBridgeState.sol",
          "NFTBridgeStructs.sol",
          "interfaces/IWormhole.sol",
          "main.sol",
          "#utility.yul"
        ]
      },
      "methodIdentifiers": {
        "bridgeContracts(uint16)": "ad66a5f1",
        "chainId()": "9a8a0592",
        "evmChainId()": "64d42b17",
        "finality()": "739fc8d1",
        "governanceActionIsConsumed(bytes32)": "2c3c02a4",
        "governanceChainId()": "fbe3c2cd",
        "governanceContract()": "b172b222",
        "isFork()": "e039f224",
        "isInitialized(address)": "d60b347f",
        "isTransferCompleted(bytes32)": "aa4efa5b",
        "isWrappedAsset(address)": "1a2be4da",
        "splCache(uint256)": "3ca64826",
        "tokenImplementation()": "2f3a3d5d",
        "wormhole()": "84acd1bb",
        "wrappedAsset(uint16,bytes32)": "1ff1e286"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"}],\"name\":\"bridgeContracts\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finality\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isTransferCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWrappedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"splCache\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"internalType\":\"struct NFTBridgeStorage.SPLCache\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"NFTBridgeGetters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"NFTBridgeState.sol\":{\"keccak256\":\"0x42200d27a01e9ab320c7e5efb14ef727b8b9bd2abb29dc8d6ff7815c837cd5bd\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://05f66185f59e41651511104e500274505763ed84c26d196e9e1c6f84497f02bb\",\"dweb:/ipfs/QmUEwQbFEE3zHwhb14xfEYHF8BNcn4ZRSjpjUJN6fHkLL9\"]},\"NFTBridgeStructs.sol\":{\"keccak256\":\"0xe540036df98387c9b206ce06917e2b726028f5921131552727e7f70a7a364d36\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1fabca4e3aa74d7c25dafefabc09dc38989e8c5c84088fefde29b2a58c98920a\",\"dweb:/ipfs/QmQaB2z2yi6qRAWACtTL7TSujFDFEdjmmRNwaWcubCo2Dd\"]},\"interfaces/IWormhole.sol\":{\"keccak256\":\"0xcec575c17dbabf583141d53f773f818b8753b471b610d2d8ac969ad08009b93e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1d82189597a3ef9993e106e108610398006fcf6d383e745c38769ad9f8a1706e\",\"dweb:/ipfs/QmSLkYxwrNzaLbdQNQCDJ7uZUgTGYyQVsTB8iotR3XQH3K\"]},\"main.sol\":{\"keccak256\":\"0x87d7d013f333c36d6394ef7db136e192233e95ffc633fca4db4881274897b09e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65a87eb3043aa6facb7447a95e11e43f0dc3c58b7911e7d467bad4ca6904b141\",\"dweb:/ipfs/QmcX35wUGKpEUG6g7ayAnu1hKqaXPBZvD62yn4AioztvMP\"]}},\"version\":1}",
    "storageLayout": {
      "storage": [
        {
          "astId": 330,
          "contract": "main.sol:NFTBridgeGetters",
          "label": "_state",
          "offset": 0,
          "slot": "0",
          "type": "t_struct(State)326_storage"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_address_payable": {
          "encoding": "inplace",
          "label": "address payable",
          "numberOfBytes": "20"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_bytes32": {
          "encoding": "inplace",
          "label": "bytes32",
          "numberOfBytes": "32"
        },
        "t_mapping(t_address,t_bool)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => bool)",
          "numberOfBytes": "32",
          "value": "t_bool"
        },
        "t_mapping(t_bytes32,t_address)": {
          "encoding": "mapping",
          "key": "t_bytes32",
          "label": "mapping(bytes32 => address)",
          "numberOfBytes": "32",
          "value": "t_address"
        },
        "t_mapping(t_bytes32,t_bool)": {
          "encoding": "mapping",
          "key": "t_bytes32",
          "label": "mapping(bytes32 => bool)",
          "numberOfBytes": "32",
          "value": "t_bool"
        },
        "t_mapping(t_uint16,t_bytes32)": {
          "encoding": "mapping",
          "key": "t_uint16",
          "label": "mapping(uint16 => bytes32)",
          "numberOfBytes": "32",
          "value": "t_bytes32"
        },
        "t_mapping(t_uint16,t_mapping(t_bytes32,t_address))": {
          "encoding": "mapping",
          "key": "t_uint16",
          "label": "mapping(uint16 => mapping(bytes32 => address))",
          "numberOfBytes": "32",
          "value": "t_mapping(t_bytes32,t_address)"
        },
        "t_mapping(t_uint256,t_struct(SPLCache)285_storage)": {
          "encoding": "mapping",
          "key": "t_uint256",
          "label": "mapping(uint256 => struct NFTBridgeStorage.SPLCache)",
          "numberOfBytes": "32",
          "value": "t_struct(SPLCache)285_storage"
        },
        "t_struct(Provider)275_storage": {
          "encoding": "inplace",
          "label": "struct NFTBridgeStorage.Provider",
          "members": [
            {
              "astId": 268,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "chainId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint16"
            },
            {
              "astId": 270,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "governanceChainId",
              "offset": 2,
              "slot": "0",
              "type": "t_uint16"
            },
            {
              "astId": 272,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "finality",
              "offset": 4,
              "slot": "0",
              "type": "t_uint8"
            },
            {
              "astId": 274,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "governanceContract",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_struct(SPLCache)285_storage": {
          "encoding": "inplace",
          "label": "struct NFTBridgeStorage.SPLCache",
          "members": [
            {
              "astId": 282,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32"
            },
            {
              "astId": 284,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_struct(State)326_storage": {
          "encoding": "inplace",
          "label": "struct NFTBridgeStorage.State",
          "members": [
            {
              "astId": 287,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "wormhole",
              "offset": 0,
              "slot": "0",
              "type": "t_address_payable"
            },
            {
              "astId": 289,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "tokenImplementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address"
            },
            {
              "astId": 292,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "provider",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Provider)275_storage"
            },
            {
              "astId": 296,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "consumedGovernanceActions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)"
            },
            {
              "astId": 300,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "completedTransfers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_bool)"
            },
            {
              "astId": 304,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "initializedImplementations",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)"
            },
            {
              "astId": 310,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "wrappedAssets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes32,t_address))"
            },
            {
              "astId": 314,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "isWrappedAsset",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)"
            },
            {
              "astId": 318,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "bridgeImplementations",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint16,t_bytes32)"
            },
            {
              "astId": 323,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "splCache",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(SPLCache)285_storage)"
            },
            {
              "astId": 325,
              "contract": "main.sol:NFTBridgeGetters",
              "label": "evmChainId",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256"
            }
          ],
          "numberOfBytes": "384"
        },
        "t_uint16": {
          "encoding": "inplace",
          "label": "uint16",
          "numberOfBytes": "2"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        },
        "t_uint8": {
          "encoding": "inplace",
          "label": "uint8",
          "numberOfBytes": "1"
        }
      }
    },
    "userdoc": { "kind": "user", "methods": {}, "version": 1 }
  },
  "sourceCode": "// contracts/NFTBridgeGetters.sol\n// SPDX-License-Identifier: Apache 2\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"../interfaces/IWormhole.sol\";\n\nimport \"./NFTBridgeState.sol\";\n\ncontract NFTBridgeGetters is NFTBridgeState {\n    function governanceActionIsConsumed(bytes32 hash) public view returns (bool) {\n        return _state.consumedGovernanceActions[hash];\n    }\n\n    function isInitialized(address impl) public view returns (bool) {\n        return _state.initializedImplementations[impl];\n    }\n\n    function isTransferCompleted(bytes32 hash) public view returns (bool) {\n        return _state.completedTransfers[hash];\n    }\n\n    function wormhole() public view returns (IWormhole) {\n        return IWormhole(_state.wormhole);\n    }\n\n    function chainId() public view returns (uint16){\n        return _state.provider.chainId;\n    }\n\n    function evmChainId() public view returns (uint256) {\n        return _state.evmChainId;\n    }\n\n    function isFork() public view returns (bool) {\n        return evmChainId() != block.chainid;\n    }\n\n    function governanceChainId() public view returns (uint16){\n        return _state.provider.governanceChainId;\n    }\n\n    function governanceContract() public view returns (bytes32){\n        return _state.provider.governanceContract;\n    }\n\n    function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) public view returns (address){\n        return _state.wrappedAssets[tokenChainId][tokenAddress];\n    }\n\n    function bridgeContracts(uint16 chainId_) public view returns (bytes32){\n        return _state.bridgeImplementations[chainId_];\n    }\n\n    function tokenImplementation() public view returns (address){\n        return _state.tokenImplementation;\n    }\n\n    function isWrappedAsset(address token) public view returns (bool){\n        return _state.isWrappedAsset[token];\n    }\n\n    function splCache(uint256 tokenId) public view returns (NFTBridgeStorage.SPLCache memory) {\n        return _state.splCache[tokenId];\n    }\n\n    function finality() public view returns (uint8) {\n        return _state.provider.finality;\n    }\n}\n"
}
