(function() {
    var type_impls = Object.fromEntries([["moonbase_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnsureOrigin%3COuterOrigin%3E-for-EitherOf%3CL,+R%3E\" class=\"impl\"><a href=\"#impl-EnsureOrigin%3COuterOrigin%3E-for-EitherOf%3CL,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;OuterOrigin, L, R&gt; EnsureOrigin&lt;OuterOrigin&gt; for EitherOf&lt;L, R&gt;<div class=\"where\">where\n    L: EnsureOrigin&lt;OuterOrigin&gt;,\n    R: EnsureOrigin&lt;OuterOrigin, Success = &lt;L as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Success\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Success\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Success</a> = &lt;L as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success</h4></section></summary><div class='docblock'>A return type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin\" class=\"method trait-impl\"><a href=\"#method.try_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;EitherOf&lt;L, R&gt; as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success, OuterOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin\" class=\"method trait-impl\"><a href=\"#method.ensure_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin</a>(o: OuterOrigin) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Success, BadOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin_or_root\" class=\"method trait-impl\"><a href=\"#method.ensure_origin_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin_or_root</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::Success&gt;, BadOrigin&gt;<div class=\"where\">where\n    OuterOrigin: OriginTrait,</div></h4></section></summary><div class='docblock'>The same as <code>ensure_origin</code> except that Root origin will always pass. This can only be\nused if <code>Success</code> has a sensible impl of <code>Default</code> since that will be used in the result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin_or_root\" class=\"method trait-impl\"><a href=\"#method.try_origin_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin_or_root</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::Success&gt;, OuterOrigin&gt;<div class=\"where\">where\n    OuterOrigin: OriginTrait,</div></h4></section></summary><div class='docblock'>The same as <code>try_origin</code> except that Root origin will always pass. This can only be\nused if <code>Success</code> has a sensible impl of <code>Default</code> since that will be used in the result.</div></details></div></details>","EnsureOrigin<OuterOrigin>","moonbase_runtime::governance::referenda::GeneralAdminOrRoot","moonbase_runtime::governance::referenda::FastGeneralAdminOrRoot","moonbase_runtime::xcm_config::ForeignAssetManagerOrigin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnsureOriginWithArg%3COuterOrigin,+Argument%3E-for-EitherOf%3CL,+R%3E\" class=\"impl\"><a href=\"#impl-EnsureOriginWithArg%3COuterOrigin,+Argument%3E-for-EitherOf%3CL,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;OuterOrigin, L, R, Argument&gt; EnsureOriginWithArg&lt;OuterOrigin, Argument&gt; for EitherOf&lt;L, R&gt;<div class=\"where\">where\n    L: EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;,\n    R: EnsureOriginWithArg&lt;OuterOrigin, Argument, Success = &lt;L as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Success\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Success\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Success</a> = &lt;L as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success</h4></section></summary><div class='docblock'>A return type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin\" class=\"method trait-impl\"><a href=\"#method.try_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin</a>(\n    o: OuterOrigin,\n    a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Argument</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;EitherOf&lt;L, R&gt; as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success, OuterOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check, returning the origin value if unsuccessful. This allows chaining.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin\" class=\"method trait-impl\"><a href=\"#method.ensure_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin</a>(\n    o: OuterOrigin,\n    a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Argument</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Success, BadOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details></div></details>","EnsureOriginWithArg<OuterOrigin, Argument>","moonbase_runtime::governance::referenda::GeneralAdminOrRoot","moonbase_runtime::governance::referenda::FastGeneralAdminOrRoot","moonbase_runtime::xcm_config::ForeignAssetManagerOrigin"]]],["moonbeam_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnsureOrigin%3COuterOrigin%3E-for-EitherOf%3CL,+R%3E\" class=\"impl\"><a href=\"#impl-EnsureOrigin%3COuterOrigin%3E-for-EitherOf%3CL,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;OuterOrigin, L, R&gt; EnsureOrigin&lt;OuterOrigin&gt; for EitherOf&lt;L, R&gt;<div class=\"where\">where\n    L: EnsureOrigin&lt;OuterOrigin&gt;,\n    R: EnsureOrigin&lt;OuterOrigin, Success = &lt;L as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Success\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Success\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Success</a> = &lt;L as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success</h4></section></summary><div class='docblock'>A return type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin\" class=\"method trait-impl\"><a href=\"#method.try_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;EitherOf&lt;L, R&gt; as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success, OuterOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin\" class=\"method trait-impl\"><a href=\"#method.ensure_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin</a>(o: OuterOrigin) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Success, BadOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin_or_root\" class=\"method trait-impl\"><a href=\"#method.ensure_origin_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin_or_root</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::Success&gt;, BadOrigin&gt;<div class=\"where\">where\n    OuterOrigin: OriginTrait,</div></h4></section></summary><div class='docblock'>The same as <code>ensure_origin</code> except that Root origin will always pass. This can only be\nused if <code>Success</code> has a sensible impl of <code>Default</code> since that will be used in the result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin_or_root\" class=\"method trait-impl\"><a href=\"#method.try_origin_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin_or_root</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::Success&gt;, OuterOrigin&gt;<div class=\"where\">where\n    OuterOrigin: OriginTrait,</div></h4></section></summary><div class='docblock'>The same as <code>try_origin</code> except that Root origin will always pass. This can only be\nused if <code>Success</code> has a sensible impl of <code>Default</code> since that will be used in the result.</div></details></div></details>","EnsureOrigin<OuterOrigin>","moonbeam_runtime::governance::referenda::GeneralAdminOrRoot","moonbeam_runtime::governance::referenda::FastGeneralAdminOrRoot","moonbeam_runtime::xcm_config::ForeignAssetManagerOrigin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnsureOriginWithArg%3COuterOrigin,+Argument%3E-for-EitherOf%3CL,+R%3E\" class=\"impl\"><a href=\"#impl-EnsureOriginWithArg%3COuterOrigin,+Argument%3E-for-EitherOf%3CL,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;OuterOrigin, L, R, Argument&gt; EnsureOriginWithArg&lt;OuterOrigin, Argument&gt; for EitherOf&lt;L, R&gt;<div class=\"where\">where\n    L: EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;,\n    R: EnsureOriginWithArg&lt;OuterOrigin, Argument, Success = &lt;L as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Success\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Success\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Success</a> = &lt;L as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success</h4></section></summary><div class='docblock'>A return type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin\" class=\"method trait-impl\"><a href=\"#method.try_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin</a>(\n    o: OuterOrigin,\n    a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Argument</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;EitherOf&lt;L, R&gt; as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success, OuterOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check, returning the origin value if unsuccessful. This allows chaining.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin\" class=\"method trait-impl\"><a href=\"#method.ensure_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin</a>(\n    o: OuterOrigin,\n    a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Argument</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Success, BadOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details></div></details>","EnsureOriginWithArg<OuterOrigin, Argument>","moonbeam_runtime::governance::referenda::GeneralAdminOrRoot","moonbeam_runtime::governance::referenda::FastGeneralAdminOrRoot","moonbeam_runtime::xcm_config::ForeignAssetManagerOrigin"]]],["moonriver_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnsureOrigin%3COuterOrigin%3E-for-EitherOf%3CL,+R%3E\" class=\"impl\"><a href=\"#impl-EnsureOrigin%3COuterOrigin%3E-for-EitherOf%3CL,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;OuterOrigin, L, R&gt; EnsureOrigin&lt;OuterOrigin&gt; for EitherOf&lt;L, R&gt;<div class=\"where\">where\n    L: EnsureOrigin&lt;OuterOrigin&gt;,\n    R: EnsureOrigin&lt;OuterOrigin, Success = &lt;L as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Success\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Success\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Success</a> = &lt;L as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success</h4></section></summary><div class='docblock'>A return type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin\" class=\"method trait-impl\"><a href=\"#method.try_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;EitherOf&lt;L, R&gt; as EnsureOrigin&lt;OuterOrigin&gt;&gt;::Success, OuterOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin\" class=\"method trait-impl\"><a href=\"#method.ensure_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin</a>(o: OuterOrigin) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Success, BadOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin_or_root\" class=\"method trait-impl\"><a href=\"#method.ensure_origin_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin_or_root</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::Success&gt;, BadOrigin&gt;<div class=\"where\">where\n    OuterOrigin: OriginTrait,</div></h4></section></summary><div class='docblock'>The same as <code>ensure_origin</code> except that Root origin will always pass. This can only be\nused if <code>Success</code> has a sensible impl of <code>Default</code> since that will be used in the result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin_or_root\" class=\"method trait-impl\"><a href=\"#method.try_origin_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin_or_root</a>(\n    o: OuterOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::Success&gt;, OuterOrigin&gt;<div class=\"where\">where\n    OuterOrigin: OriginTrait,</div></h4></section></summary><div class='docblock'>The same as <code>try_origin</code> except that Root origin will always pass. This can only be\nused if <code>Success</code> has a sensible impl of <code>Default</code> since that will be used in the result.</div></details></div></details>","EnsureOrigin<OuterOrigin>","moonriver_runtime::governance::referenda::GeneralAdminOrRoot","moonriver_runtime::governance::referenda::FastGeneralAdminOrRoot","moonriver_runtime::xcm_config::ForeignAssetManagerOrigin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnsureOriginWithArg%3COuterOrigin,+Argument%3E-for-EitherOf%3CL,+R%3E\" class=\"impl\"><a href=\"#impl-EnsureOriginWithArg%3COuterOrigin,+Argument%3E-for-EitherOf%3CL,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;OuterOrigin, L, R, Argument&gt; EnsureOriginWithArg&lt;OuterOrigin, Argument&gt; for EitherOf&lt;L, R&gt;<div class=\"where\">where\n    L: EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;,\n    R: EnsureOriginWithArg&lt;OuterOrigin, Argument, Success = &lt;L as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Success\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Success\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Success</a> = &lt;L as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success</h4></section></summary><div class='docblock'>A return type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_origin\" class=\"method trait-impl\"><a href=\"#method.try_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_origin</a>(\n    o: OuterOrigin,\n    a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Argument</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;EitherOf&lt;L, R&gt; as EnsureOriginWithArg&lt;OuterOrigin, Argument&gt;&gt;::Success, OuterOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check, returning the origin value if unsuccessful. This allows chaining.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_origin\" class=\"method trait-impl\"><a href=\"#method.ensure_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_origin</a>(\n    o: OuterOrigin,\n    a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Argument</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::Success, BadOrigin&gt;</h4></section></summary><div class='docblock'>Perform the origin check.</div></details></div></details>","EnsureOriginWithArg<OuterOrigin, Argument>","moonriver_runtime::governance::referenda::GeneralAdminOrRoot","moonriver_runtime::governance::referenda::FastGeneralAdminOrRoot","moonriver_runtime::xcm_config::ForeignAssetManagerOrigin"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6952,6953,6960]}