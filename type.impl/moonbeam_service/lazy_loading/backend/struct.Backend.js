(function() {var type_impls = {
"moonbeam_service":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AuxStore-for-Backend%3CBlock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1214-1232\">source</a><a href=\"#impl-AuxStore-for-Backend%3CBlock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block: BlockT + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>&gt; AuxStore for <a class=\"struct\" href=\"moonbeam_service/lazy_loading/backend/struct.Backend.html\" title=\"struct moonbeam_service::lazy_loading::backend::Backend\">Backend</a>&lt;Block&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_aux\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1215-1227\">source</a><a href=\"#method.insert_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">insert_aux</a>&lt;'a, 'b: 'a, 'c: 'a, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>], &amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>])&gt;, D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]&gt;&gt;(\n    &amp;self,\n    _insert: I,\n    _delete: D,\n) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Insert auxiliary data into key-value store. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_aux\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1229-1231\">source</a><a href=\"#method.get_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_aux</a>(&amp;self, _key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; Result&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Query auxiliary data from key-value store.</div></details></div></details>","AuxStore","moonbeam_service::lazy_loading::TLazyLoadingBackend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Backend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1234-1434\">source</a><a href=\"#impl-Backend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block: BlockT + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>&gt; Backend&lt;Block&gt; for <a class=\"struct\" href=\"moonbeam_service/lazy_loading/backend/struct.Backend.html\" title=\"struct moonbeam_service::lazy_loading::backend::Backend\">Backend</a>&lt;Block&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BlockImportOperation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockImportOperation\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockImportOperation</a> = <a class=\"struct\" href=\"moonbeam_service/lazy_loading/backend/struct.BlockImportOperation.html\" title=\"struct moonbeam_service::lazy_loading::backend::BlockImportOperation\">BlockImportOperation</a>&lt;Block&gt;</h4></section></summary><div class='docblock'>Associated block insertion operation type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Blockchain\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Blockchain\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Blockchain</a> = <a class=\"struct\" href=\"moonbeam_service/lazy_loading/backend/struct.Blockchain.html\" title=\"struct moonbeam_service::lazy_loading::backend::Blockchain\">Blockchain</a>&lt;Block&gt;</h4></section></summary><div class='docblock'>Associated blockchain backend type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">State</a> = <a class=\"struct\" href=\"moonbeam_service/lazy_loading/backend/struct.ForkedLazyBackend.html\" title=\"struct moonbeam_service::lazy_loading::backend::ForkedLazyBackend\">ForkedLazyBackend</a>&lt;Block&gt;</h4></section></summary><div class='docblock'>Associated state backend type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OffchainStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OffchainStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OffchainStorage</a> = InMemOffchainStorage</h4></section></summary><div class='docblock'>Offchain workers local storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.begin_operation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1240-1252\">source</a><a href=\"#method.begin_operation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">begin_operation</a>(&amp;self) -&gt; Result&lt;Self::BlockImportOperation&gt;</h4></section></summary><div class='docblock'>Begin a new block insertion transaction with given parent block id. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.begin_state_operation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1254-1261\">source</a><a href=\"#method.begin_state_operation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">begin_state_operation</a>(\n    &amp;self,\n    operation: &amp;mut Self::BlockImportOperation,\n    block: Block::Hash,\n) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Note an operation to contain state transition.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_operation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1263-1310\">source</a><a href=\"#method.commit_operation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_operation</a>(&amp;self, operation: Self::BlockImportOperation) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Commit block insertion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1312-1318\">source</a><a href=\"#method.finalize_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_block</a>(\n    &amp;self,\n    hash: Block::Hash,\n    justification: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Justification&gt;,\n) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Finalize block with given <code>hash</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_justification\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1320-1326\">source</a><a href=\"#method.append_justification\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">append_justification</a>(\n    &amp;self,\n    hash: Block::Hash,\n    justification: Justification,\n) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Append justification to the block with the given <code>hash</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blockchain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1328-1330\">source</a><a href=\"#method.blockchain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">blockchain</a>(&amp;self) -&gt; &amp;Self::Blockchain</h4></section></summary><div class='docblock'>Returns reference to blockchain backend.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.usage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1332-1334\">source</a><a href=\"#method.usage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">usage_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;UsageInfo&gt;</h4></section></summary><div class='docblock'>Returns current usage statistics.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_storage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1336-1338\">source</a><a href=\"#method.offchain_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_storage</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::OffchainStorage&gt;</h4></section></summary><div class='docblock'>Returns a handle to offchain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.state_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1340-1399\">source</a><a href=\"#method.state_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">state_at</a>(&amp;self, hash: Block::Hash) -&gt; Result&lt;Self::State&gt;</h4></section></summary><div class='docblock'>Returns state backend with post-state of given block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.revert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1401-1407\">source</a><a href=\"#method.revert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">revert</a>(\n    &amp;self,\n    _n: NumberFor&lt;Block&gt;,\n    _revert_finalized: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; Result&lt;(NumberFor&lt;Block&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Block::Hash&gt;)&gt;</h4></section></summary><div class='docblock'>Attempts to revert the chain by <code>n</code> blocks. If <code>revert_finalized</code> is set it will attempt to\nrevert past any finalized block, this is unsafe and can potentially leave the node in an\ninconsistent state. All blocks higher than the best block are also reverted and not counting\ntowards <code>n</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_leaf_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1409-1411\">source</a><a href=\"#method.remove_leaf_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_leaf_block</a>(&amp;self, _hash: Block::Hash) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Discard non-best, unfinalized leaf block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_import_lock\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1413-1415\">source</a><a href=\"#method.get_import_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_import_lock</a>(&amp;self) -&gt; &amp;RwLock&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Gain access to the import lock around this backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.requires_full_sync\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1417-1419\">source</a><a href=\"#method.requires_full_sync\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">requires_full_sync</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tells whether the backend requires full-sync mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1421-1425\">source</a><a href=\"#method.pin_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pin_block</a>(&amp;self, hash: &lt;Block as BlockT&gt;::Hash) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Pin the block to keep body, justification and state available after pruning.\nNumber of pins are reference counted. Users need to make sure to perform\none call to [<code>Self::unpin_block</code>] per call to [<code>Self::pin_block</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpin_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1427-1433\">source</a><a href=\"#method.unpin_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpin_block</a>(&amp;self, hash: &lt;Block as BlockT&gt;::Hash)</h4></section></summary><div class='docblock'>Unpin the block to allow pruning.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.have_state_at\" class=\"method trait-impl\"><a href=\"#method.have_state_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">have_state_at</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    _number: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if state for given block is available.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_aux\" class=\"method trait-impl\"><a href=\"#method.insert_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">insert_aux</a>&lt;'a, 'b, 'c, I, D&gt;(\n    &amp;self,\n    insert: I,\n    delete: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    'b: 'a,\n    'c: 'a,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>], &amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>])&gt;,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Insert auxiliary data into key-value store.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_aux\" class=\"method trait-impl\"><a href=\"#method.get_aux\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_aux</a>(&amp;self, key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Query auxiliary data from key-value store.</div></details></div></details>","Backend<Block>","moonbeam_service::lazy_loading::TLazyLoadingBackend"],["<section id=\"impl-LocalBackend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/moonbeam_service/lazy_loading/backend.rs.html#1436\">source</a><a href=\"#impl-LocalBackend%3CBlock%3E-for-Backend%3CBlock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Block: BlockT + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>&gt; LocalBackend&lt;Block&gt; for <a class=\"struct\" href=\"moonbeam_service/lazy_loading/backend/struct.Backend.html\" title=\"struct moonbeam_service::lazy_loading::backend::Backend\">Backend</a>&lt;Block&gt;</h3></section>","LocalBackend<Block>","moonbeam_service::lazy_loading::TLazyLoadingBackend"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()