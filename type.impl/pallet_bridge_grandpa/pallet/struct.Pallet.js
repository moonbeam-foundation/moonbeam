(function() {
    var type_impls = Object.fromEntries([["moonbeam_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; BeforeAllRuntimeMigrations for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BridgeRuntimeFilterCall%3C%3CT+as+Config%3E::AccountId,+%3CT+as+Config%3E::RuntimeCall%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-BridgeRuntimeFilterCall%3C%3CT+as+Config%3E::AccountId,+%3CT+as+Config%3E::RuntimeCall%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; BridgeRuntimeFilterCall&lt;&lt;T as Config&gt;::AccountId, &lt;T as Config&gt;::RuntimeCall&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    I: 'static,\n    T: Config&lt;I&gt;,\n    &lt;T as Config&gt;::RuntimeCall: CallSubType&lt;T, I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ToPostDispatch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ToPostDispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ToPostDispatch</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Data that may be passed from the validate to <code>post_dispatch</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate</a>(\n    _who: &amp;&lt;T as Config&gt;::AccountId,\n    call: &amp;&lt;T as Config&gt;::RuntimeCall,\n) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ValidTransaction, TransactionValidityError&gt;)</h4></section></summary><div class='docblock'>Called during validation. Needs to checks whether a runtime call, submitted\nby the <code>who</code> is valid. Transactions not signed are not validated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_dispatch\" class=\"method trait-impl\"><a href=\"#method.post_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">post_dispatch</a>(\n    _who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;AccountId</a>,\n    _has_failed: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n    _to_post_dispatch: Self::ToPostDispatch,\n)</h4></section></summary><div class='docblock'>Called after transaction is dispatched.</div></details></div></details>","BridgeRuntimeFilterCall<<T as Config>::AccountId, <T as Config>::RuntimeCall>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; DispatchViewFunction for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = NoStorageVersionSet</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HeaderChain%3C%3CT+as+Config%3CI%3E%3E::BridgedChain%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-HeaderChain%3C%3CT+as+Config%3CI%3E%3E::BridgedChain%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; HeaderChain&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalized_header_state_root\" class=\"method trait-impl\"><a href=\"#method.finalized_header_state_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalized_header_state_root</a>(\n    header_hash: &lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Hash&gt;</h4></section></summary><div class='docblock'>Returns state (storage) root of given finalized header.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_storage_proof\" class=\"method trait-impl\"><a href=\"#method.verify_storage_proof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_storage_proof</a>(\n    header_hash: &lt;C as Chain&gt;::Hash,\n    storage_proof: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StorageProofChecker&lt;&lt;C as Chain&gt;::Hasher&gt;, HeaderChainError&gt;</h4></section></summary><div class='docblock'>Get storage proof checker using finalized header.</div></details></div></details>","HeaderChain<<T as Config<I>>::BridgedChain>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OwnedBridgeModule%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OwnedBridgeModule%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OwnedBridgeModule&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG_TARGET\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.LOG_TARGET\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">LOG_TARGET</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a> = LOG_TARGET</h4></section></summary><div class='docblock'>The target that will be used when publishing logs related to this module.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnerStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnerStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnerStorage</a> = StorageValue&lt;_GeneratedPrefixForStoragePalletOwner&lt;T, I&gt;, &lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>A storage entry that holds the module <code>Owner</code> account.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OperatingMode\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OperatingMode\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OperatingMode</a> = BasicOperatingMode</h4></section></summary><div class='docblock'>Operating mode type of the pallet.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OperatingModeStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OperatingModeStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OperatingModeStorage</a> = StorageValue&lt;_GeneratedPrefixForStoragePalletOperatingMode&lt;T, I&gt;, BasicOperatingMode, ValueQuery&gt;</h4></section></summary><div class='docblock'>A storage value that holds the pallet operating mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_halted\" class=\"method trait-impl\"><a href=\"#method.is_halted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_halted</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check if the module is halted.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_owner_or_root\" class=\"method trait-impl\"><a href=\"#method.ensure_owner_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_owner_or_root</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, BadOrigin&gt;</h4></section></summary><div class='docblock'>Ensure that the origin is either root, or <code>PalletOwner</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_not_halted\" class=\"method trait-impl\"><a href=\"#method.ensure_not_halted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_not_halted</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, OwnedBridgeModuleError&gt;</h4></section></summary><div class='docblock'>Ensure that the module is not halted.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_owner\" class=\"method trait-impl\"><a href=\"#method.set_owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Change the owner of the module.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_operating_mode\" class=\"method trait-impl\"><a href=\"#method.set_operating_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_operating_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    operating_mode: Self::OperatingMode,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Halt or resume all/some module operations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_owner\" class=\"method trait-impl\"><a href=\"#method.module_owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_owner</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Pallet owner has a right to halt all module operations and then resume it. If it is <code>None</code>,\nthen there are no direct ways to halt/resume module operations, but other runtime methods\nmay still be used to do that (i.e. democracy::referendum to update halt flag directly\nor call the <code>set_operating_mode</code>).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.operating_mode\" class=\"method trait-impl\"><a href=\"#method.operating_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">operating_mode</a>() -&gt; Self::OperatingMode</h4></section></summary><div class='docblock'>The current operating mode of the module.\nDepending on the mode either all, some, or no transactions will be allowed.</div></details></div></details>","OwnedBridgeModule<T>","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.best_finalized\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">best_finalized</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;HeaderId&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Hash, &lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::BlockNumber&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the hash of the best finalized header.</p>\n</div></details></div></details>",0,"moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_finality_proof\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">submit_finality_proof</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    finality_target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n    justification: GrandpaJustification&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>submit_finality_proof</code> will be removed in May 2024. Use <code>submit_finality_proof_ex</code> instead.</span></div></span></summary><div class=\"docblock\"><p>This call is deprecated and will be removed around May 2024. Use the\n<code>submit_finality_proof_ex</code> instead. Semantically, this call is an equivalent of the\n<code>submit_finality_proof_ex</code> call without current authority set id check.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">initialize</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    init_data: InitializationData&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Bootstrap the bridge pallet with an initial header and authority set from which to sync.</p>\n<p>The initial configuration provided does not need to be the genesis header of the bridged\nchain, it can be any arbitrary header. You can also provide the next scheduled set\nchange if it is already know.</p>\n<p>This function is only allowed to be called from a trusted origin and writes to storage\nwith practically no checks in terms of the validity of the data. It is important that\nyou ensure that valid data is being passed in.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    new_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change <code>PalletOwner</code>.</p>\n<p>May only be called either by root, or by <code>PalletOwner</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_operating_mode\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_operating_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    operating_mode: BasicOperatingMode,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Halt or resume all pallet operations.</p>\n<p>May only be called either by root, or by <code>PalletOwner</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_finality_proof_ex\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">submit_finality_proof_ex</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    finality_target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n    justification: GrandpaJustification&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n    current_set_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n    _is_free_execution_expected: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Verify a target header is finalized according to the given finality proof. The proof\nis assumed to be signed by GRANDPA authorities set with <code>current_set_id</code> id.</p>\n<p>It will use the underlying storage pallet to fetch information about the current\nauthorities and best finalized header in order to verify that the header is finalized.</p>\n<p>If successful in verification, it will write the target header to the underlying storage\npallet.</p>\n<p>The call fails if:</p>\n<ul>\n<li>\n<p>the pallet is halted;</p>\n</li>\n<li>\n<p>the pallet knows better header than the <code>finality_target</code>;</p>\n</li>\n<li>\n<p>the id of best GRANDPA authority set, known to the pallet is not equal to the\n<code>current_set_id</code>;</p>\n</li>\n<li>\n<p>verification is not optimized or invalid;</p>\n</li>\n<li>\n<p>header contains forced authorities set change or change with non-zero delay.</p>\n</li>\n</ul>\n<p>The <code>is_free_execution_expected</code> parameter is not really used inside the call. It is\nused by the transaction extension, which should be registered at the runtime level. If\nthis parameter is <code>true</code>, the transaction will be treated as invalid, if the call won’t\nbe executed for free. If transaction extension is not used by the runtime, this\nparameter is not used at all.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_set_pallet_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_set_pallet_state</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    new_current_set_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n    new_authorities: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(Public, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)&gt;,\n    new_best_header: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set current authorities set and best finalized bridged header to given values\n(almost) without any checks. This call can fail only if:</p>\n<ul>\n<li>\n<p>the call origin is not a root or a pallet owner;</p>\n</li>\n<li>\n<p>there are too many authorities in the new set.</p>\n</li>\n</ul>\n<p>No other checks are made. Previously imported headers stay in the storage and\nare still accessible after the call.</p>\n</div></details></div></details>",0,"moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,\n    &lt;T as Config&gt;::RuntimeEvent: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;Event&lt;T, I&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.synced_headers_grandpa_info\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">synced_headers_grandpa_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;HeaderFinalityInfo&lt;GrandpaJustification&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;, AuthoritySet&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the GRANDPA justifications accepted in the current block.</p>\n</div></details></div></details>",0,"moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ViewFunctionIdPrefix for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","moonbeam_runtime::BridgeKusamaGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","moonbeam_runtime::BridgeKusamaGrandpa"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","moonbeam_runtime::BridgeKusamaGrandpa"]]],["moonriver_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; BeforeAllRuntimeMigrations for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BridgeRuntimeFilterCall%3C%3CT+as+Config%3E::AccountId,+%3CT+as+Config%3E::RuntimeCall%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-BridgeRuntimeFilterCall%3C%3CT+as+Config%3E::AccountId,+%3CT+as+Config%3E::RuntimeCall%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; BridgeRuntimeFilterCall&lt;&lt;T as Config&gt;::AccountId, &lt;T as Config&gt;::RuntimeCall&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    I: 'static,\n    T: Config&lt;I&gt;,\n    &lt;T as Config&gt;::RuntimeCall: CallSubType&lt;T, I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ToPostDispatch\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ToPostDispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ToPostDispatch</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Data that may be passed from the validate to <code>post_dispatch</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate</a>(\n    _who: &amp;&lt;T as Config&gt;::AccountId,\n    call: &amp;&lt;T as Config&gt;::RuntimeCall,\n) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ValidTransaction, TransactionValidityError&gt;)</h4></section></summary><div class='docblock'>Called during validation. Needs to checks whether a runtime call, submitted\nby the <code>who</code> is valid. Transactions not signed are not validated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_dispatch\" class=\"method trait-impl\"><a href=\"#method.post_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">post_dispatch</a>(\n    _who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;AccountId</a>,\n    _has_failed: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n    _to_post_dispatch: Self::ToPostDispatch,\n)</h4></section></summary><div class='docblock'>Called after transaction is dispatched.</div></details></div></details>","BridgeRuntimeFilterCall<<T as Config>::AccountId, <T as Config>::RuntimeCall>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; DispatchViewFunction for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = NoStorageVersionSet</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HeaderChain%3C%3CT+as+Config%3CI%3E%3E::BridgedChain%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-HeaderChain%3C%3CT+as+Config%3CI%3E%3E::BridgedChain%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; HeaderChain&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalized_header_state_root\" class=\"method trait-impl\"><a href=\"#method.finalized_header_state_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalized_header_state_root</a>(\n    header_hash: &lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Hash,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Hash&gt;</h4></section></summary><div class='docblock'>Returns state (storage) root of given finalized header.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_storage_proof\" class=\"method trait-impl\"><a href=\"#method.verify_storage_proof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_storage_proof</a>(\n    header_hash: &lt;C as Chain&gt;::Hash,\n    storage_proof: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StorageProofChecker&lt;&lt;C as Chain&gt;::Hasher&gt;, HeaderChainError&gt;</h4></section></summary><div class='docblock'>Get storage proof checker using finalized header.</div></details></div></details>","HeaderChain<<T as Config<I>>::BridgedChain>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    _n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OwnedBridgeModule%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OwnedBridgeModule%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OwnedBridgeModule&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG_TARGET\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.LOG_TARGET\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">LOG_TARGET</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a> = LOG_TARGET</h4></section></summary><div class='docblock'>The target that will be used when publishing logs related to this module.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnerStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnerStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnerStorage</a> = StorageValue&lt;_GeneratedPrefixForStoragePalletOwner&lt;T, I&gt;, &lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>A storage entry that holds the module <code>Owner</code> account.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OperatingMode\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OperatingMode\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OperatingMode</a> = BasicOperatingMode</h4></section></summary><div class='docblock'>Operating mode type of the pallet.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OperatingModeStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OperatingModeStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OperatingModeStorage</a> = StorageValue&lt;_GeneratedPrefixForStoragePalletOperatingMode&lt;T, I&gt;, BasicOperatingMode, ValueQuery&gt;</h4></section></summary><div class='docblock'>A storage value that holds the pallet operating mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_halted\" class=\"method trait-impl\"><a href=\"#method.is_halted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_halted</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check if the module is halted.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_owner_or_root\" class=\"method trait-impl\"><a href=\"#method.ensure_owner_or_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_owner_or_root</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, BadOrigin&gt;</h4></section></summary><div class='docblock'>Ensure that the origin is either root, or <code>PalletOwner</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_not_halted\" class=\"method trait-impl\"><a href=\"#method.ensure_not_halted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ensure_not_halted</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, OwnedBridgeModuleError&gt;</h4></section></summary><div class='docblock'>Ensure that the module is not halted.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_owner\" class=\"method trait-impl\"><a href=\"#method.set_owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    maybe_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Change the owner of the module.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_operating_mode\" class=\"method trait-impl\"><a href=\"#method.set_operating_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_operating_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    operating_mode: Self::OperatingMode,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Halt or resume all/some module operations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_owner\" class=\"method trait-impl\"><a href=\"#method.module_owner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_owner</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;</h4></section></summary><div class='docblock'>Pallet owner has a right to halt all module operations and then resume it. If it is <code>None</code>,\nthen there are no direct ways to halt/resume module operations, but other runtime methods\nmay still be used to do that (i.e. democracy::referendum to update halt flag directly\nor call the <code>set_operating_mode</code>).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.operating_mode\" class=\"method trait-impl\"><a href=\"#method.operating_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">operating_mode</a>() -&gt; Self::OperatingMode</h4></section></summary><div class='docblock'>The current operating mode of the module.\nDepending on the mode either all, some, or no transactions will be allowed.</div></details></div></details>","OwnedBridgeModule<T>","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.best_finalized\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">best_finalized</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;HeaderId&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Hash, &lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::BlockNumber&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the hash of the best finalized header.</p>\n</div></details></div></details>",0,"moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_finality_proof\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">submit_finality_proof</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    finality_target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n    justification: GrandpaJustification&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: <code>submit_finality_proof</code> will be removed in May 2024. Use <code>submit_finality_proof_ex</code> instead.</span></div></span></summary><div class=\"docblock\"><p>This call is deprecated and will be removed around May 2024. Use the\n<code>submit_finality_proof_ex</code> instead. Semantically, this call is an equivalent of the\n<code>submit_finality_proof_ex</code> call without current authority set id check.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">initialize</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    init_data: InitializationData&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Bootstrap the bridge pallet with an initial header and authority set from which to sync.</p>\n<p>The initial configuration provided does not need to be the genesis header of the bridged\nchain, it can be any arbitrary header. You can also provide the next scheduled set\nchange if it is already know.</p>\n<p>This function is only allowed to be called from a trusted origin and writes to storage\nwith practically no checks in terms of the validity of the data. It is important that\nyou ensure that valid data is being passed in.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    new_owner: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Change <code>PalletOwner</code>.</p>\n<p>May only be called either by root, or by <code>PalletOwner</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_operating_mode\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_operating_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    operating_mode: BasicOperatingMode,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Halt or resume all pallet operations.</p>\n<p>May only be called either by root, or by <code>PalletOwner</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.submit_finality_proof_ex\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">submit_finality_proof_ex</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    finality_target: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n    justification: GrandpaJustification&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n    current_set_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n    _is_free_execution_expected: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Verify a target header is finalized according to the given finality proof. The proof\nis assumed to be signed by GRANDPA authorities set with <code>current_set_id</code> id.</p>\n<p>It will use the underlying storage pallet to fetch information about the current\nauthorities and best finalized header in order to verify that the header is finalized.</p>\n<p>If successful in verification, it will write the target header to the underlying storage\npallet.</p>\n<p>The call fails if:</p>\n<ul>\n<li>\n<p>the pallet is halted;</p>\n</li>\n<li>\n<p>the pallet knows better header than the <code>finality_target</code>;</p>\n</li>\n<li>\n<p>the id of best GRANDPA authority set, known to the pallet is not equal to the\n<code>current_set_id</code>;</p>\n</li>\n<li>\n<p>verification is not optimized or invalid;</p>\n</li>\n<li>\n<p>header contains forced authorities set change or change with non-zero delay.</p>\n</li>\n</ul>\n<p>The <code>is_free_execution_expected</code> parameter is not really used inside the call. It is\nused by the transaction extension, which should be registered at the runtime level. If\nthis parameter is <code>true</code>, the transaction will be treated as invalid, if the call won’t\nbe executed for free. If transaction extension is not used by the runtime, this\nparameter is not used at all.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_set_pallet_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">force_set_pallet_state</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    new_current_set_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n    new_authorities: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(Public, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>)&gt;,\n    new_best_header: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set current authorities set and best finalized bridged header to given values\n(almost) without any checks. This call can fail only if:</p>\n<ul>\n<li>\n<p>the call origin is not a root or a pallet owner;</p>\n</li>\n<li>\n<p>there are too many authorities in the new set.</p>\n</li>\n</ul>\n<p>No other checks are made. Previously imported headers stay in the storage and\nare still accessible after the call.</p>\n</div></details></div></details>",0,"moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,\n    &lt;T as Config&gt;::RuntimeEvent: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;Event&lt;T, I&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.synced_headers_grandpa_info\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">synced_headers_grandpa_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;HeaderFinalityInfo&lt;GrandpaJustification&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::BridgedChain as Chain&gt;::Header&gt;, AuthoritySet&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the GRANDPA justifications accepted in the current block.</p>\n</div></details></div></details>",0,"moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ViewFunctionIdPrefix for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","moonriver_runtime::BridgePolkadotGrandpa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","moonriver_runtime::BridgePolkadotGrandpa"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","moonriver_runtime::BridgePolkadotGrandpa"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[54936,55022]}