(function() {var type_impls = {
"moonbase_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Anonymously schedule a task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel an anonymously scheduled task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Schedule a named task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel a named scheduled task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_after\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_after</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    after: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Anonymously schedule a task after a delay.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named_after\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_named_after</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    after: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Schedule a named task after a delay.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_retry\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_retry</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    task: (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>),\n    retries: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    period: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a retry configuration for a task so that, in case its scheduled run fails, it will\nbe retried after <code>period</code> blocks, for a total amount of <code>retries</code> retries or until it\nsucceeds.</p>\n<p>Tasks which need to be scheduled for a retry are still subject to weight metering and\nagenda space, same as a regular task. If a periodic task fails, it will be scheduled\nnormally while the task is retrying.</p>\n<p>Tasks scheduled as a result of a retry for a periodic task are unnamed, non-periodic\nclones of the original task. Their retry configuration will be derived from the\noriginal task’s configuration, but will have a lower value for <code>remaining</code> than the\noriginal <code>total_retries</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_retry_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_retry_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    retries: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    period: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a retry configuration for a named task so that, in case its scheduled run fails, it\nwill be retried after <code>period</code> blocks, for a total amount of <code>retries</code> retries or until\nit succeeds.</p>\n<p>Tasks which need to be scheduled for a retry are still subject to weight metering and\nagenda space, same as a regular task. If a periodic task fails, it will be scheduled\nnormally while the task is retrying.</p>\n<p>Tasks scheduled as a result of a retry for a periodic task are unnamed, non-periodic\nclones of the original task. Their retry configuration will be derived from the\noriginal task’s configuration, but will have a lower value for <code>remaining</code> than the\noriginal <code>total_retries</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_retry\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_retry</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    task: (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the retry configuration of a task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_retry_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_retry_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel the retry configuration of a named task.</p>\n</div></details></div></details>",0,"moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v1_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v1_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V1 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v2_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v2_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V2 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v3_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v3_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V3 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details></div></details>",0,"moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_origin</a>&lt;OldOrigin&gt;()<div class=\"where\">where\n    OldOrigin: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::PalletsOrigin&gt; + Decode,</div></h4></section></summary><div class=\"docblock\"><p>Helper to migrate scheduler when the pallet origin type has changed.</p>\n</div></details></div></details>",0,"moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hasher</a> = &lt;T as Config&gt;::Hashing</h4></section></summary><div class='docblock'>The hasher used in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method trait-impl\"><a href=\"#method.schedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule_named</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: Bounded&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hashing&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method trait-impl\"><a href=\"#method.cancel_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel_named</a>(id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Cancel a scheduled, named task. If periodic, then it will cancel all further instances\nof that, also. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule_named\" class=\"method trait-impl\"><a href=\"#method.reschedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule_named</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, DispatchError&gt;</h4></section></summary><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Named<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hasher</a> = &lt;T as Config&gt;::Hashing</h4></section></summary><div class='docblock'>The hasher used in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method trait-impl\"><a href=\"#method.schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule</a>(\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: Bounded&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hashing&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method trait-impl\"><a href=\"#method.cancel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Cancel a scheduled task. If periodic, then it will cancel all further instances of that,\nalso. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule\" class=\"method trait-impl\"><a href=\"#method.reschedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule</a>(\n    address: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. For periodic tasks,\nthis dispatch is guaranteed to succeed only before the <em>initial</em> execution; for\nothers, use <code>reschedule_named</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, DispatchError&gt;</h4></section></summary><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Anon<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;T as Config&gt;::Hash</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>A means of expressing a call by the hash of its encoded data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method trait-impl\"><a href=\"#method.schedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule_named</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: MaybeHashed&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hash&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method trait-impl\"><a href=\"#method.cancel_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel_named</a>(id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Cancel a scheduled, named task. If periodic, then it will cancel all further instances\nof that, also. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule_named\" class=\"method trait-impl\"><a href=\"#method.reschedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule_named</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Named<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    now: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Execute the scheduled calls</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;T as Config&gt;::Hash</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>A means of expressing a call by the hash of its encoded data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method trait-impl\"><a href=\"#method.schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule</a>(\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: MaybeHashed&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hash&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method trait-impl\"><a href=\"#method.cancel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Cancel a scheduled task. If periodic, then it will cancel all further instances of that,\nalso. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule\" class=\"method trait-impl\"><a href=\"#method.reschedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule</a>(\n    address: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. For periodic tasks,\nthis dispatch is guaranteed to succeed only before the <em>initial</em> execution; for\nothers, use <code>reschedule_named</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Anon<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","moonbase_runtime::Scheduler"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","moonbase_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","moonbase_runtime::Scheduler"]],
"moonbeam_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Anonymously schedule a task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel an anonymously scheduled task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Schedule a named task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel a named scheduled task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_after\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_after</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    after: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Anonymously schedule a task after a delay.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named_after\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_named_after</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    after: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Schedule a named task after a delay.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_retry\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_retry</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    task: (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>),\n    retries: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    period: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a retry configuration for a task so that, in case its scheduled run fails, it will\nbe retried after <code>period</code> blocks, for a total amount of <code>retries</code> retries or until it\nsucceeds.</p>\n<p>Tasks which need to be scheduled for a retry are still subject to weight metering and\nagenda space, same as a regular task. If a periodic task fails, it will be scheduled\nnormally while the task is retrying.</p>\n<p>Tasks scheduled as a result of a retry for a periodic task are unnamed, non-periodic\nclones of the original task. Their retry configuration will be derived from the\noriginal task’s configuration, but will have a lower value for <code>remaining</code> than the\noriginal <code>total_retries</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_retry_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_retry_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    retries: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    period: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a retry configuration for a named task so that, in case its scheduled run fails, it\nwill be retried after <code>period</code> blocks, for a total amount of <code>retries</code> retries or until\nit succeeds.</p>\n<p>Tasks which need to be scheduled for a retry are still subject to weight metering and\nagenda space, same as a regular task. If a periodic task fails, it will be scheduled\nnormally while the task is retrying.</p>\n<p>Tasks scheduled as a result of a retry for a periodic task are unnamed, non-periodic\nclones of the original task. Their retry configuration will be derived from the\noriginal task’s configuration, but will have a lower value for <code>remaining</code> than the\noriginal <code>total_retries</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_retry\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_retry</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    task: (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the retry configuration of a task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_retry_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_retry_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel the retry configuration of a named task.</p>\n</div></details></div></details>",0,"moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v1_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v1_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V1 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v2_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v2_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V2 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v3_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v3_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V3 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details></div></details>",0,"moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_origin</a>&lt;OldOrigin&gt;()<div class=\"where\">where\n    OldOrigin: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::PalletsOrigin&gt; + Decode,</div></h4></section></summary><div class=\"docblock\"><p>Helper to migrate scheduler when the pallet origin type has changed.</p>\n</div></details></div></details>",0,"moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hasher</a> = &lt;T as Config&gt;::Hashing</h4></section></summary><div class='docblock'>The hasher used in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method trait-impl\"><a href=\"#method.schedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule_named</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: Bounded&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hashing&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method trait-impl\"><a href=\"#method.cancel_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel_named</a>(id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Cancel a scheduled, named task. If periodic, then it will cancel all further instances\nof that, also. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule_named\" class=\"method trait-impl\"><a href=\"#method.reschedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule_named</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, DispatchError&gt;</h4></section></summary><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Named<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hasher</a> = &lt;T as Config&gt;::Hashing</h4></section></summary><div class='docblock'>The hasher used in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method trait-impl\"><a href=\"#method.schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule</a>(\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: Bounded&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hashing&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method trait-impl\"><a href=\"#method.cancel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Cancel a scheduled task. If periodic, then it will cancel all further instances of that,\nalso. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule\" class=\"method trait-impl\"><a href=\"#method.reschedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule</a>(\n    address: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. For periodic tasks,\nthis dispatch is guaranteed to succeed only before the <em>initial</em> execution; for\nothers, use <code>reschedule_named</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, DispatchError&gt;</h4></section></summary><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Anon<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;T as Config&gt;::Hash</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>A means of expressing a call by the hash of its encoded data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method trait-impl\"><a href=\"#method.schedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule_named</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: MaybeHashed&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hash&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method trait-impl\"><a href=\"#method.cancel_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel_named</a>(id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Cancel a scheduled, named task. If periodic, then it will cancel all further instances\nof that, also. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule_named\" class=\"method trait-impl\"><a href=\"#method.reschedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule_named</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Named<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    now: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Execute the scheduled calls</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;T as Config&gt;::Hash</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>A means of expressing a call by the hash of its encoded data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method trait-impl\"><a href=\"#method.schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule</a>(\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: MaybeHashed&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hash&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method trait-impl\"><a href=\"#method.cancel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Cancel a scheduled task. If periodic, then it will cancel all further instances of that,\nalso. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule\" class=\"method trait-impl\"><a href=\"#method.reschedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule</a>(\n    address: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. For periodic tasks,\nthis dispatch is guaranteed to succeed only before the <em>initial</em> execution; for\nothers, use <code>reschedule_named</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Anon<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","moonbeam_runtime::Scheduler"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","moonbeam_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","moonbeam_runtime::Scheduler"]],
"moonriver_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Anonymously schedule a task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel an anonymously scheduled task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Schedule a named task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel a named scheduled task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_after\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_after</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    after: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Anonymously schedule a task after a delay.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named_after\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">schedule_named_after</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    after: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    call: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;&lt;T as Config&gt;::RuntimeCall&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Schedule a named task after a delay.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_retry\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_retry</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    task: (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>),\n    retries: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    period: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a retry configuration for a task so that, in case its scheduled run fails, it will\nbe retried after <code>period</code> blocks, for a total amount of <code>retries</code> retries or until it\nsucceeds.</p>\n<p>Tasks which need to be scheduled for a retry are still subject to weight metering and\nagenda space, same as a regular task. If a periodic task fails, it will be scheduled\nnormally while the task is retrying.</p>\n<p>Tasks scheduled as a result of a retry for a periodic task are unnamed, non-periodic\nclones of the original task. Their retry configuration will be derived from the\noriginal task’s configuration, but will have a lower value for <code>remaining</code> than the\noriginal <code>total_retries</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_retry_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_retry_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    retries: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    period: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Set a retry configuration for a named task so that, in case its scheduled run fails, it\nwill be retried after <code>period</code> blocks, for a total amount of <code>retries</code> retries or until\nit succeeds.</p>\n<p>Tasks which need to be scheduled for a retry are still subject to weight metering and\nagenda space, same as a regular task. If a periodic task fails, it will be scheduled\nnormally while the task is retrying.</p>\n<p>Tasks scheduled as a result of a retry for a periodic task are unnamed, non-periodic\nclones of the original task. Their retry configuration will be derived from the\noriginal task’s configuration, but will have a lower value for <code>remaining</code> than the\noriginal <code>total_retries</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_retry\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_retry</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    task: (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the retry configuration of a task.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_retry_named\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_retry_named</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Cancel the retry configuration of a named task.</p>\n</div></details></div></details>",0,"moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v1_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v1_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V1 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v2_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v2_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V2 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_v3_to_v4\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_v3_to_v4</a>() -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Migrate storage format from V3 to V4.</p>\n<p>Returns the weight consumed by this migration.</p>\n</div></details></div></details>",0,"moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_origin</a>&lt;OldOrigin&gt;()<div class=\"where\">where\n    OldOrigin: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;T as Config&gt;::PalletsOrigin&gt; + Decode,</div></h4></section></summary><div class=\"docblock\"><p>Helper to migrate scheduler when the pallet origin type has changed.</p>\n</div></details></div></details>",0,"moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hasher</a> = &lt;T as Config&gt;::Hashing</h4></section></summary><div class='docblock'>The hasher used in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method trait-impl\"><a href=\"#method.schedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule_named</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: Bounded&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hashing&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method trait-impl\"><a href=\"#method.cancel_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel_named</a>(id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Cancel a scheduled, named task. If periodic, then it will cancel all further instances\nof that, also. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule_named\" class=\"method trait-impl\"><a href=\"#method.reschedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule_named</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>],\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    id: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, DispatchError&gt;</h4></section></summary><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Named<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>(\n) -&gt; &lt;Pallet&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hasher</a> = &lt;T as Config&gt;::Hashing</h4></section></summary><div class='docblock'>The hasher used in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method trait-impl\"><a href=\"#method.schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule</a>(\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: Bounded&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hashing&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method trait-impl\"><a href=\"#method.cancel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class='docblock'>Cancel a scheduled task. If periodic, then it will cancel all further instances of that,\nalso. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule\" class=\"method trait-impl\"><a href=\"#method.reschedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule</a>(\n    address: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. For periodic tasks,\nthis dispatch is guaranteed to succeed only before the <em>initial</em> execution; for\nothers, use <code>reschedule_named</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, DispatchError&gt;</h4></section></summary><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Anon<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Named%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;T as Config&gt;::Hash</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>A means of expressing a call by the hash of its encoded data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule_named\" class=\"method trait-impl\"><a href=\"#method.schedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule_named</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: MaybeHashed&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hash&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_named\" class=\"method trait-impl\"><a href=\"#method.cancel_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel_named</a>(id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Cancel a scheduled, named task. If periodic, then it will cancel all further instances\nof that, also. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule_named\" class=\"method trait-impl\"><a href=\"#method.reschedule_named\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule_named</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Named&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Named<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    now: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Execute the scheduled calls</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Anon%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number,+%3CT+as+Config%3E::RuntimeCall,+%3CT+as+Config%3E::PalletsOrigin%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Address\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Address\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Address</a> = (&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>An address which can be used for removing a scheduled task.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Hash\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Hash</a> = &lt;T as Config&gt;::Hash</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>A means of expressing a call by the hash of its encoded data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schedule\" class=\"method trait-impl\"><a href=\"#method.schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schedule</a>(\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;,\n    maybe_periodic: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)&gt;,\n    priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>,\n    origin: &lt;T as Config&gt;::PalletsOrigin,\n    call: MaybeHashed&lt;&lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::Hash&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Schedule a dispatch to happen at the beginning of some block in the future. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel\" class=\"method trait-impl\"><a href=\"#method.cancel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cancel</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Cancel a scheduled task. If periodic, then it will cancel all further instances of that,\nalso. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reschedule\" class=\"method trait-impl\"><a href=\"#method.reschedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reschedule</a>(\n    address: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address,\n    when: DispatchTime&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address, DispatchError&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\nonly if it is executed <em>before</em> the currently scheduled block. For periodic tasks,\nthis dispatch is guaranteed to succeed only before the <em>initial</em> execution; for\nothers, use <code>reschedule_named</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_dispatch_time\" class=\"method trait-impl\"><a href=\"#method.next_dispatch_time\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_dispatch_time</a>(\n    _: &lt;Pallet&lt;T&gt; as Anon&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, &lt;T as Config&gt;::RuntimeCall, &lt;T as Config&gt;::PalletsOrigin&gt;&gt;::Address\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>v3</code> instead. Will be removed after September 2024.</span></div></span><div class='docblock'>Return the next dispatch time for a given task. <a>Read more</a></div></details></div></details>","Anon<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number, <T as Config>::RuntimeCall, <T as Config>::PalletsOrigin>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T&gt;</h4></section></div></details>","Callable<T>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","moonriver_runtime::Scheduler"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T&gt;</h3></section>","Eq","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","moonriver_runtime::Scheduler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for Pallet&lt;T&gt;<div class=\"where\">where\n    T: Config,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","moonriver_runtime::Scheduler"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()