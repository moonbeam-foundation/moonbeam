(function() {
    var type_impls = Object.fromEntries([["moonbeam_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; BeforeAllRuntimeMigrations for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; DispatchViewFunction for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExportXcm-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ExportXcm-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ExportXcm for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I, OutboundPayload = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;&gt; + Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Ticket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Ticket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Ticket</a> = (BridgeId, Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;, &lt;Pallet&lt;T, &lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt; as MessagesBridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::OutboundPayload, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;&gt;::SendMessageArgs, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">32</a>])</h4></section></summary><div class='docblock'>Intermediate value which connects the two phases of the export operation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate</a>(\n    network: NetworkId,\n    channel: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    universal_source: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Junctions&gt;,\n    destination: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Junctions&gt;,\n    message: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;Pallet&lt;T, I&gt; as ExportXcm&gt;::Ticket, Assets), SendError&gt;</h4></section></summary><div class='docblock'>Check whether the given <code>message</code> is deliverable to the given <code>destination</code> on <code>network</code>,\nspoofing its source as <code>universal_source</code> and if so determine the cost which will be paid by\nthis chain to do so, returning a <code>Ticket</code> token which can be used to enact delivery. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deliver\" class=\"method trait-impl\"><a href=\"#method.deliver\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deliver</a>(\n    _: &lt;Pallet&lt;T, I&gt; as ExportXcm&gt;::Ticket,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class='docblock'>Actually carry out the delivery operation for a previously validated message sending. <a>Read more</a></div></details></div></details>","ExportXcm","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MessageDispatch-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-MessageDispatch-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; MessageDispatch for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I, InboundPayload = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;&gt; + Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.DispatchPayload\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.DispatchPayload\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">DispatchPayload</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Decoded message payload type. Valid message may contain invalid payload. In this case\nmessage is delivered, but dispatch fails. Therefore, two separate types of payload\n(opaque <code>MessagePayload</code> used in delivery and this <code>DispatchPayload</code> used in dispatch).</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.DispatchLevelResult\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.DispatchLevelResult\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">DispatchLevelResult</a> = XcmBlobMessageDispatchResult</h4></section></summary><div class='docblock'>Fine-grained result of single message dispatch (for better diagnostic purposes)</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.LaneId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LaneId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LaneId</a> = &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId</h4></section></summary><div class='docblock'>Lane identifier type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_active\" class=\"method trait-impl\"><a href=\"#method.is_active\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_active</a>(lane: &lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::LaneId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if dispatcher is ready to accept additional messages. The <code>false</code> should\nbe treated as a hint by both dispatcher and its consumers - i.e. dispatcher shall not\nsimply drop messages if it returns <code>false</code>. The consumer may still call the <code>dispatch</code>\nif dispatcher has returned <code>false</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dispatch_weight\" class=\"method trait-impl\"><a href=\"#method.dispatch_weight\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_weight</a>(\n    message: &amp;mut DispatchMessage&lt;&lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::DispatchPayload, &lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::LaneId&gt;,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Estimate dispatch weight. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dispatch\" class=\"method trait-impl\"><a href=\"#method.dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch</a>(\n    message: DispatchMessage&lt;&lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::DispatchPayload, &lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::LaneId&gt;,\n) -&gt; MessageDispatchResult&lt;&lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::DispatchLevelResult&gt;</h4></section></summary><div class='docblock'>Called when inbound message is received. <a>Read more</a></div></details></div></details>","MessageDispatch","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnMessagesDelivered%3C%3CT+as+Config%3C%3CT+as+Config%3CI%3E%3E::BridgeMessagesPalletInstance%3E%3E::LaneId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnMessagesDelivered%3C%3CT+as+Config%3C%3CT+as+Config%3CI%3E%3E::BridgeMessagesPalletInstance%3E%3E::LaneId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnMessagesDelivered&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_messages_delivered\" class=\"method trait-impl\"><a href=\"#method.on_messages_delivered\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_messages_delivered</a>(\n    lane_id: &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId,\n    enqueued_messages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n)</h4></section></summary><div class='docblock'>New messages delivery has been confirmed. <a>Read more</a></div></details></div></details>","OnMessagesDelivered<<T as Config<<T as Config<I>>::BridgeMessagesPalletInstance>>::LaneId>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge_locations_from_origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge_locations_from_origin</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    bridge_destination_universal_location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedInteriorLocation&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;BridgeLocations&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge endpoint locations and dedicated lane identifier. This method converts\nruntime <code>origin</code> argument to relative <code>Location</code> using the <code>T::OpenBridgeOrigin</code>\nconverter.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge_locations\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge_locations</a>(\n    bridge_origin_relative_location: Location,\n    bridge_destination_universal_location: Junctions,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;BridgeLocations&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge endpoint locations and dedicated <strong>bridge</strong> identifier (<code>BridgeId</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge</a>(\n    bridge_id: &amp;BridgeId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge metadata by bridge_id</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge_by_lane_id\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge_by_lane_id</a>(\n    lane_id: &amp;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(BridgeId, Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge metadata by lane_id</p>\n</div></details></div></details>",0,"moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_open_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_open_bridge</a>(\n    locations: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;BridgeLocations&gt;,\n    lane_id: &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId,\n    create_lanes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Open bridge for lane.</p>\n</div></details></div></details>",0,"moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_try_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_try_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ensure the correctness of the state of this pallet.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_try_state_for_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_try_state_for_bridge</a>(\n    bridge_id: BridgeId,\n    bridge: Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ensure the correctness of the state of the bridge.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_try_state_for_messages\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_try_state_for_messages</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ensure the correctness of the state of the connected <code>pallet_bridge_messages</code> instance.</p>\n</div></details></div></details>",0,"moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.open_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">open_bridge</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    bridge_destination_universal_location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedInteriorLocation&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Open a bridge between two locations.</p>\n<p>The caller must be within the <code>T::OpenBridgeOrigin</code> filter (presumably: a sibling\nparachain or a parent relay chain). The <code>bridge_destination_universal_location</code> must be\na destination within the consensus of the <code>T::BridgedNetwork</code> network.</p>\n<p>The <code>BridgeDeposit</code> amount is reserved on the caller account. This deposit\nis unreserved after bridge is closed.</p>\n<p>The states after this call: bridge is <code>Opened</code>, outbound lane is <code>Opened</code>, inbound lane\nis <code>Opened</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">close_bridge</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    bridge_destination_universal_location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedInteriorLocation&gt;,\n    may_prune_messages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Try to close the bridge.</p>\n<p>Can only be called by the “owner” of this side of the bridge, meaning that the\ninbound XCM channel with the local origin chain is working.</p>\n<p>Closed bridge is a bridge without any traces in the runtime storage. So this method\nfirst tries to prune all queued messages at the outbound lane. When there are no\noutbound messages left, outbound and inbound lanes are purged. After that, funds\nare returned back to the owner of this side of the bridge.</p>\n<p>The number of messages that we may prune in a single call is limited by the\n<code>may_prune_messages</code> argument. If there are more messages in the queue, the method\nprunes exactly <code>may_prune_messages</code> and exits early. The caller may call it again\nuntil outbound queue is depleted and get his funds back.</p>\n<p>The states after this call: everything is either <code>Closed</code>, or purged from the\nruntime storage.</p>\n</div></details></div></details>",0,"moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ViewFunctionIdPrefix for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","moonbeam_runtime::BridgeXcmOverMoonriver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","moonbeam_runtime::BridgeXcmOverMoonriver"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","moonbeam_runtime::BridgeXcmOverMoonriver"]]],["moonriver_runtime",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; BeforeAllRuntimeMigrations for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Callable&lt;T&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = Call&lt;T, I&gt;</h4></section></div></details>","Callable<T>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pallet&lt;T, I&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-DispatchViewFunction-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; DispatchViewFunction for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dispatch_view_function\" class=\"method trait-impl\"><a href=\"#method.dispatch_view_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_view_function</a>&lt;O&gt;(\n    id: &amp;ViewFunctionId,\n    input: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>],\n    output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;mut O</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, ViewFunctionDispatchError&gt;<div class=\"where\">where\n    O: Output,</div></h4></section></div></details>","DispatchViewFunction","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExportXcm-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ExportXcm-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ExportXcm for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I, OutboundPayload = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;&gt; + Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Ticket\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Ticket\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Ticket</a> = (BridgeId, Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;, &lt;Pallet&lt;T, &lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt; as MessagesBridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::OutboundPayload, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;&gt;::SendMessageArgs, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">32</a>])</h4></section></summary><div class='docblock'>Intermediate value which connects the two phases of the export operation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate</a>(\n    network: NetworkId,\n    channel: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u32.html\">u32</a>,\n    universal_source: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Junctions&gt;,\n    destination: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Junctions&gt;,\n    message: &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Xcm&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;Pallet&lt;T, I&gt; as ExportXcm&gt;::Ticket, Assets), SendError&gt;</h4></section></summary><div class='docblock'>Check whether the given <code>message</code> is deliverable to the given <code>destination</code> on <code>network</code>,\nspoofing its source as <code>universal_source</code> and if so determine the cost which will be paid by\nthis chain to do so, returning a <code>Ticket</code> token which can be used to enact delivery. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deliver\" class=\"method trait-impl\"><a href=\"#method.deliver\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deliver</a>(\n    _: &lt;Pallet&lt;T, I&gt; as ExportXcm&gt;::Ticket,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">32</a>], SendError&gt;</h4></section></summary><div class='docblock'>Actually carry out the delivery operation for a previously validated message sending. <a>Read more</a></div></details></div></details>","ExportXcm","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-GetStorageVersion-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; GetStorageVersion for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;Pallet&lt;T, I&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-IntegrityTest-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; IntegrityTest for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MessageDispatch-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-MessageDispatch-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; MessageDispatch for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I, InboundPayload = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;&gt; + Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.DispatchPayload\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.DispatchPayload\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">DispatchPayload</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Decoded message payload type. Valid message may contain invalid payload. In this case\nmessage is delivered, but dispatch fails. Therefore, two separate types of payload\n(opaque <code>MessagePayload</code> used in delivery and this <code>DispatchPayload</code> used in dispatch).</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.DispatchLevelResult\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.DispatchLevelResult\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">DispatchLevelResult</a> = XcmBlobMessageDispatchResult</h4></section></summary><div class='docblock'>Fine-grained result of single message dispatch (for better diagnostic purposes)</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.LaneId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LaneId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LaneId</a> = &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId</h4></section></summary><div class='docblock'>Lane identifier type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_active\" class=\"method trait-impl\"><a href=\"#method.is_active\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_active</a>(lane: &lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::LaneId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if dispatcher is ready to accept additional messages. The <code>false</code> should\nbe treated as a hint by both dispatcher and its consumers - i.e. dispatcher shall not\nsimply drop messages if it returns <code>false</code>. The consumer may still call the <code>dispatch</code>\nif dispatcher has returned <code>false</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dispatch_weight\" class=\"method trait-impl\"><a href=\"#method.dispatch_weight\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch_weight</a>(\n    message: &amp;mut DispatchMessage&lt;&lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::DispatchPayload, &lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::LaneId&gt;,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Estimate dispatch weight. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dispatch\" class=\"method trait-impl\"><a href=\"#method.dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dispatch</a>(\n    message: DispatchMessage&lt;&lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::DispatchPayload, &lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::LaneId&gt;,\n) -&gt; MessageDispatchResult&lt;&lt;Pallet&lt;T, I&gt; as MessageDispatch&gt;::DispatchLevelResult&gt;</h4></section></summary><div class='docblock'>Called when inbound message is received. <a>Read more</a></div></details></div></details>","MessageDispatch","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnGenesis-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnGenesis for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnMessagesDelivered%3C%3CT+as+Config%3C%3CT+as+Config%3CI%3E%3E::BridgeMessagesPalletInstance%3E%3E::LaneId%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnMessagesDelivered%3C%3CT+as+Config%3C%3CT+as+Config%3CI%3E%3E::BridgeMessagesPalletInstance%3E%3E::LaneId%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnMessagesDelivered&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_messages_delivered\" class=\"method trait-impl\"><a href=\"#method.on_messages_delivered\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_messages_delivered</a>(\n    lane_id: &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId,\n    enqueued_messages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n)</h4></section></summary><div class='docblock'>New messages delivery has been confirmed. <a>Read more</a></div></details></div></details>","OnMessagesDelivered<<T as Config<<T as Config<I>>::BridgeMessagesPalletInstance>>::LaneId>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; OnRuntimeUpgrade for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge_locations_from_origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge_locations_from_origin</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    bridge_destination_universal_location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedInteriorLocation&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;BridgeLocations&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge endpoint locations and dedicated lane identifier. This method converts\nruntime <code>origin</code> argument to relative <code>Location</code> using the <code>T::OpenBridgeOrigin</code>\nconverter.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge_locations\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge_locations</a>(\n    bridge_origin_relative_location: Location,\n    bridge_destination_universal_location: Junctions,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;BridgeLocations&gt;, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge endpoint locations and dedicated <strong>bridge</strong> identifier (<code>BridgeId</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge</a>(\n    bridge_id: &amp;BridgeId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge metadata by bridge_id</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bridge_by_lane_id\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bridge_by_lane_id</a>(\n    lane_id: &amp;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(BridgeId, Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Return bridge metadata by lane_id</p>\n</div></details></div></details>",0,"moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_open_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_open_bridge</a>(\n    locations: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;BridgeLocations&gt;,\n    lane_id: &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId,\n    create_lanes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Open bridge for lane.</p>\n</div></details></div></details>",0,"moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_try_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_try_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ensure the correctness of the state of this pallet.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_try_state_for_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_try_state_for_bridge</a>(\n    bridge_id: BridgeId,\n    bridge: Bridge&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::ThisChain, &lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;T as Config&lt;&lt;T as Config&lt;I&gt;&gt;::BridgeMessagesPalletInstance&gt;&gt;::LaneId, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ensure the correctness of the state of the bridge.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_try_state_for_messages\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">do_try_state_for_messages</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Ensure the correctness of the state of the connected <code>pallet_bridge_messages</code> instance.</p>\n</div></details></div></details>",0,"moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.open_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">open_bridge</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    bridge_destination_universal_location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedInteriorLocation&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Open a bridge between two locations.</p>\n<p>The caller must be within the <code>T::OpenBridgeOrigin</code> filter (presumably: a sibling\nparachain or a parent relay chain). The <code>bridge_destination_universal_location</code> must be\na destination within the consensus of the <code>T::BridgedNetwork</code> network.</p>\n<p>The <code>BridgeDeposit</code> amount is reserved on the caller account. This deposit\nis unreserved after bridge is closed.</p>\n<p>The states after this call: bridge is <code>Opened</code>, outbound lane is <code>Opened</code>, inbound lane\nis <code>Opened</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close_bridge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">close_bridge</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    bridge_destination_universal_location: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;VersionedInteriorLocation&gt;,\n    may_prune_messages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Try to close the bridge.</p>\n<p>Can only be called by the “owner” of this side of the bridge, meaning that the\ninbound XCM channel with the local origin chain is working.</p>\n<p>Closed bridge is a bridge without any traces in the runtime storage. So this method\nfirst tries to prune all queued messages at the outbound lane. When there are no\noutbound messages left, outbound and inbound lanes are purged. After that, funds\nare returned back to the owner of this side of the bridge.</p>\n<p>The number of messages that we may prune in a single call is limited by the\n<code>may_prune_messages</code> argument. If there are more messages in the queue, the method\nprunes exactly <code>may_prune_messages</code> and exits early. The caller may call it again\nuntil outbound queue is depleted and get his funds back.</p>\n<p>The states after this call: everything is either <code>Closed</code>, or purged from the\nruntime storage.</p>\n</div></details></div></details>",0,"moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; PalletsInfoAccess for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Pallet&lt;T, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Pallet&lt;T, I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; StorageInfoTrait for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-ViewFunctionIdPrefix-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; ViewFunctionIdPrefix for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prefix\" class=\"method trait-impl\"><a href=\"#method.prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.array.html\">16</a>]</h4></section></div></details>","ViewFunctionIdPrefix","moonriver_runtime::BridgeXcmOverMoonbeam"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; WhitelistedStorageKeys for Pallet&lt;T, I&gt;<div class=\"where\">where\n    T: Config&lt;I&gt;,\n    I: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.84.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","moonriver_runtime::BridgeXcmOverMoonbeam"],["<section id=\"impl-Eq-for-Pallet%3CT,+I%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Pallet%3CT,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Pallet&lt;T, I&gt;</h3></section>","Eq","moonriver_runtime::BridgeXcmOverMoonbeam"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[53262,53264]}