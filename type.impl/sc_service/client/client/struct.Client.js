(function() {var type_impls = {
"moonbeam_service":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,\n    &lt;Block as Block&gt;::Header: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>&lt;G&gt;(\n    backend: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;B&gt;,\n    executor: E,\n    spawn_handle: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn SpawnNamed&gt;,\n    genesis_block_builder: G,\n    fork_blocks: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number, &lt;Block as Block&gt;::Hash)&gt;&gt;,\n    bad_blocks: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;&lt;Block as Block&gt;::Hash&gt;&gt;,\n    prometheus_registry: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Registry&gt;,\n    telemetry: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;TelemetryHandle&gt;,\n    config: ClientConfig&lt;Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Client&lt;B, E, Block, RA&gt;, Error&gt;<div class=\"where\">where\n    G: BuildGenesisBlock&lt;Block, BlockImportOperation = &lt;B as Backend&lt;Block&gt;&gt;::BlockImportOperation&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Creates new Substrate Client with given blockchain and code executor.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.import_notification_sinks\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">import_notification_sinks</a>(\n    &amp;self\n) -&gt; &amp;Mutex&lt;RawMutex, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TracingUnboundedSender&lt;BlockImportNotification&lt;Block&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>returns a reference to the block import notification sinks\nuseful for test environments.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finality_notification_sinks\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">finality_notification_sinks</a>(\n    &amp;self\n) -&gt; &amp;Mutex&lt;RawMutex, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TracingUnboundedSender&lt;FinalityNotification&lt;Block&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>returns a reference to the finality notification sinks\nuseful for test environments.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.state_at\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">state_at</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;B as Backend&lt;Block&gt;&gt;::State, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get a reference to the state at a given block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.code_at\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">code_at</a>(&amp;self, hash: &lt;Block as Block&gt;::Hash) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get the code at a given block.</p>\n<p>This takes any potential substitutes into account, but ignores overrides.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.runtime_version_at\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">runtime_version_at</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RuntimeVersion, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get the RuntimeVersion at a given block.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.revert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">revert</a>(\n    &amp;self,\n    n: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to revert the chain by <code>n</code> blocks guaranteeing that no block is\nreverted past the last finalized block. Returns the number of blocks\nthat were successfully reverted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsafe_revert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unsafe_revert</a>(\n    &amp;mut self,\n    n: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number,\n    blacklist: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to revert the chain by <code>n</code> blocks disregarding finality. This method will revert\nany finalized blocks as requested and can potentially leave the node in an inconsistent\nstate. Other modules in the system that persist data and that rely on finality\n(e.g. consensus parts) will be unaffected by the revert. Use this method with caution and\nmaking sure that no other data needs to be reverted for consistency aside from the block\ndata. If <code>blacklist</code> is set to true, will also blacklist reverted blocks from finalizing\nagain. The blacklist is reset upon client restart.</p>\n<p>Returns the number of blocks that were successfully reverted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_info\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">chain_info</a>(&amp;self) -&gt; Info&lt;Block&gt;</h4></section></summary><div class=\"docblock\"><p>Get blockchain info.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_status\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_status</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BlockStatus, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get block status.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">header</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Header&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get block header by id.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.body\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">body</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;Block as Block&gt;::Extrinsic&gt;&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get block body by id.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.uncles\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">uncles</a>(\n    &amp;self,\n    target_hash: &lt;Block as Block&gt;::Hash,\n    max_generation: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the uncles of the block with <code>target_hash</code> going back <code>max_generation</code> ancestors.</p>\n</div></details></div></details>",0,"moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExecutorProvider%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-ExecutorProvider%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; ExecutorProvider&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Executor\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Executor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Executor</a> = E</h4></section></summary><div class='docblock'>executor instance</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.executor\" class=\"method trait-impl\"><a href=\"#method.executor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">executor</a>(\n    &amp;self\n) -&gt; &amp;&lt;Client&lt;B, E, Block, RA&gt; as ExecutorProvider&lt;Block&gt;&gt;::Executor</h4></section></summary><div class='docblock'>Get call executor reference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execution_extensions\" class=\"method trait-impl\"><a href=\"#method.execution_extensions\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">execution_extensions</a>(&amp;self) -&gt; &amp;ExecutionExtensions&lt;Block&gt;</h4></section></summary><div class='docblock'>Get a reference to the execution extensions.</div></details></div></details>","ExecutorProvider<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockBackend%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-BlockBackend%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; BlockBackend&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_body\" class=\"method trait-impl\"><a href=\"#method.block_body\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_body</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;Block as Block&gt;::Extrinsic&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get block body by ID. Returns <code>None</code> if the body is not stored.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block\" class=\"method trait-impl\"><a href=\"#method.block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;SignedBlock&lt;Block&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get full block by hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_status\" class=\"method trait-impl\"><a href=\"#method.block_status\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_status</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BlockStatus, Error&gt;</h4></section></summary><div class='docblock'>Get block status by block hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.justifications\" class=\"method trait-impl\"><a href=\"#method.justifications\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">justifications</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Justifications&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get block justifications for the block with the given hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_hash\" class=\"method trait-impl\"><a href=\"#method.block_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_hash</a>(\n    &amp;self,\n    number: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get block hash by number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.indexed_transaction\" class=\"method trait-impl\"><a href=\"#method.indexed_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">indexed_transaction</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get single indexed transaction by content hash. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_indexed_transaction\" class=\"method trait-impl\"><a href=\"#method.has_indexed_transaction\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">has_indexed_transaction</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Check if transaction index exists.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_indexed_body\" class=\"method trait-impl\"><a href=\"#method.block_indexed_body\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_indexed_body</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get all indexed transactions for a block,\nincluding renewed transactions. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.requires_full_sync\" class=\"method trait-impl\"><a href=\"#method.requires_full_sync\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">requires_full_sync</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tells whether the current client configuration requires full-sync mode.</div></details></div></details>","BlockBackend<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Chain%3CB%3E-for-Client%3CBE,+E,+B,+RA%3E\" class=\"impl\"><a href=\"#impl-Chain%3CB%3E-for-Client%3CBE,+E,+B,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;BE, E, B, RA&gt; Chain&lt;B&gt; for Client&lt;BE, E, B, RA&gt;<div class=\"where\">where\n    BE: Backend&lt;B&gt;,\n    E: CallExecutor&lt;B&gt;,\n    B: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_status\" class=\"method trait-impl\"><a href=\"#method.block_status\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_status</a>(\n    &amp;self,\n    hash: &lt;B as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BlockStatus, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>Retrieve the status of the block denoted by the given [<code>Block::Hash</code>].</div></details></div></details>","Chain<B>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LockImportRun%3CBlock,+B%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-LockImportRun%3CBlock,+B%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; LockImportRun&lt;Block, B&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock_import_and_run\" class=\"method trait-impl\"><a href=\"#method.lock_import_and_run\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">lock_import_and_run</a>&lt;R, Err, F&gt;(&amp;self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, Err&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut ClientImportOperation&lt;Block, B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, Err&gt;,\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt;,</div></h4></section></summary><div class='docblock'>Lock the import lock, and run operations inside.</div></details></div></details>","LockImportRun<Block, B>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProvideUncles%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-ProvideUncles%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; ProvideUncles&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.uncles\" class=\"method trait-impl\"><a href=\"#method.uncles\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">uncles</a>(\n    &amp;self,\n    target_hash: &lt;Block as Block&gt;::Hash,\n    max_generation: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;Block as Block&gt;::Header&gt;, Error&gt;</h4></section></summary><div class='docblock'>Gets the uncles of the block with <code>target_hash</code> going back <code>max_generation</code> ancestors.</div></details></div></details>","ProvideUncles<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockIdTo%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-BlockIdTo%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; BlockIdTo&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    Block: Block,\n    RA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The error type that will be returned by the functions.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_hash\" class=\"method trait-impl\"><a href=\"#method.to_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">to_hash</a>(\n    &amp;self,\n    block_id: &amp;BlockId&lt;Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class='docblock'>Convert the given <code>block_id</code> to the corresponding block hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_number\" class=\"method trait-impl\"><a href=\"#method.to_number\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">to_number</a>(\n    &amp;self,\n    block_id: &amp;BlockId&lt;Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number&gt;, Error&gt;</h4></section></summary><div class='docblock'>Convert the given <code>block_id</code> to the corresponding block number.</div></details></div></details>","BlockIdTo<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CallApiAt%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-CallApiAt%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; CallApiAt&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block, Backend = B&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    Block: Block,\n    RA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StateBackend\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.StateBackend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">StateBackend</a> = &lt;B as Backend&lt;Block&gt;&gt;::State</h4></section></summary><div class='docblock'>The state backend that is used to store the block states.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_api_at\" class=\"method trait-impl\"><a href=\"#method.call_api_at\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">call_api_at</a>(\n    &amp;self,\n    params: CallApiAtParams&lt;'_, Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, ApiError&gt;</h4></section></summary><div class='docblock'>Calls the given api function with the given encoded arguments at the given block and returns\nthe encoded result.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.runtime_version_at\" class=\"method trait-impl\"><a href=\"#method.runtime_version_at\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">runtime_version_at</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RuntimeVersion, ApiError&gt;</h4></section></summary><div class='docblock'>Returns the runtime version at the given block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.state_at\" class=\"method trait-impl\"><a href=\"#method.state_at\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">state_at</a>(\n    &amp;self,\n    at: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Client&lt;B, E, Block, RA&gt; as CallApiAt&lt;Block&gt;&gt;::StateBackend, ApiError&gt;</h4></section></summary><div class='docblock'>Get the state <code>at</code> the given block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize_extensions\" class=\"method trait-impl\"><a href=\"#method.initialize_extensions\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">initialize_extensions</a>(\n    &amp;self,\n    at: &lt;Block as Block&gt;::Hash,\n    extensions: &amp;mut Extensions\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, ApiError&gt;</h4></section></summary><div class='docblock'>Initialize the <code>extensions</code> for the given block <code>at</code> by using the global extensions factory.</div></details></div></details>","CallApiAt<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Finalizer%3CBlock,+B%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-Finalizer%3CBlock,+B%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; Finalizer&lt;Block, B&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_finality\" class=\"method trait-impl\"><a href=\"#method.apply_finality\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">apply_finality</a>(\n    &amp;self,\n    operation: &amp;mut ClientImportOperation&lt;Block, B&gt;,\n    hash: &lt;Block as Block&gt;::Hash,\n    justification: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;([<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">4</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;)&gt;,\n    notify: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Mark all blocks up to given as finalized in operation. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_block\" class=\"method trait-impl\"><a href=\"#method.finalize_block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_block</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    justification: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;([<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">4</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;)&gt;,\n    notify: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Finalize a block. <a>Read more</a></div></details></div></details>","Finalizer<Block, B>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageProvider%3CBlock,+B%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-StorageProvider%3CBlock,+B%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; StorageProvider&lt;Block, B&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_keys\" class=\"method trait-impl\"><a href=\"#method.storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_keys</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    prefix: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;StorageKey&gt;,\n    start_key: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;StorageKey&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;KeysIter&lt;&lt;B as Backend&lt;Block&gt;&gt;::State, Block&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code> and a key prefix, returns a <code>KeysIter</code> iterates matching storage\nkeys in that block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_storage_keys\" class=\"method trait-impl\"><a href=\"#method.child_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">child_storage_keys</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    child_info: ChildInfo,\n    prefix: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;StorageKey&gt;,\n    start_key: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;StorageKey&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;KeysIter&lt;&lt;B as Backend&lt;Block&gt;&gt;::State, Block&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code> and a key <code>prefix</code> and a child storage key,\nreturns a <code>KeysIter</code> that iterates matching storage keys in that block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_pairs\" class=\"method trait-impl\"><a href=\"#method.storage_pairs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_pairs</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    prefix: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;StorageKey&gt;,\n    start_key: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;StorageKey&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PairsIter&lt;&lt;B as Backend&lt;Block&gt;&gt;::State, Block&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code> and a key prefix, returns an iterator over the storage keys and\nvalues in that block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage\" class=\"method trait-impl\"><a href=\"#method.storage\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    key: &amp;StorageKey\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;StorageData&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code> and a key, return the value under the key in that block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_hash\" class=\"method trait-impl\"><a href=\"#method.storage_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_hash</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    key: &amp;StorageKey\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code> and a key, return the value under the hash in that block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_storage\" class=\"method trait-impl\"><a href=\"#method.child_storage\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">child_storage</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    child_info: &amp;ChildInfo,\n    key: &amp;StorageKey\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;StorageData&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code>, a key and a child storage key, return the value under the key in\nthat block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_storage_hash\" class=\"method trait-impl\"><a href=\"#method.child_storage_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">child_storage_hash</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    child_info: &amp;ChildInfo,\n    key: &amp;StorageKey\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code>, a key and a child storage key, return the hash under the key in that\nblock.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.closest_merkle_value\" class=\"method trait-impl\"><a href=\"#method.closest_merkle_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">closest_merkle_value</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    key: &amp;StorageKey\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MerkleValue&lt;&lt;Block as Block&gt;::Hash&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code> and a key, return the closest merkle value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_closest_merkle_value\" class=\"method trait-impl\"><a href=\"#method.child_closest_merkle_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">child_closest_merkle_value</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    child_info: &amp;ChildInfo,\n    key: &amp;StorageKey\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MerkleValue&lt;&lt;Block as Block&gt;::Hash&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a blockโs <code>Hash</code>, a key and a child storage key, return the closest merkle value.</div></details></div></details>","StorageProvider<Block, B>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HeaderBackend%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-HeaderBackend%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; HeaderBackend&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    Block: Block,\n    RA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method trait-impl\"><a href=\"#method.header\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">header</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Header&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get block header. Returns <code>None</code> if block is not found.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.info\" class=\"method trait-impl\"><a href=\"#method.info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">info</a>(&amp;self) -&gt; Info&lt;Block&gt;</h4></section></summary><div class='docblock'>Get blockchain info.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status\" class=\"method trait-impl\"><a href=\"#method.status\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">status</a>(&amp;self, hash: &lt;Block as Block&gt;::Hash) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BlockStatus, Error&gt;</h4></section></summary><div class='docblock'>Get block status.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.number\" class=\"method trait-impl\"><a href=\"#method.number\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">number</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get block number by hash. Returns <code>None</code> if the header is not in the chain.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">hash</a>(\n    &amp;self,\n    number: &lt;&lt;Block as Block&gt;::Header as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get block hash by number. Returns <code>None</code> if the header is not in the chain.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_hash_from_id\" class=\"method trait-impl\"><a href=\"#method.block_hash_from_id\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_hash_from_id</a>(\n    &amp;self,\n    id: &amp;BlockId&lt;Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class='docblock'>Convert an arbitrary block ID into a block hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_number_from_id\" class=\"method trait-impl\"><a href=\"#method.block_number_from_id\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_number_from_id</a>(\n    &amp;self,\n    id: &amp;BlockId&lt;Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number&gt;, Error&gt;</h4></section></summary><div class='docblock'>Convert an arbitrary block ID into a block hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect_header\" class=\"method trait-impl\"><a href=\"#method.expect_header\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">expect_header</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Block as Block&gt;::Header, Error&gt;</h4></section></summary><div class='docblock'>Get block header. Returns <code>UnknownBlock</code> error if block is not found.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect_block_number_from_id\" class=\"method trait-impl\"><a href=\"#method.expect_block_number_from_id\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">expect_block_number_from_id</a>(\n    &amp;self,\n    id: &amp;BlockId&lt;Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;Block as Block&gt;::Header as Header&gt;::Number, Error&gt;</h4></section></summary><div class='docblock'>Convert an arbitrary block ID into a block number. Returns <code>UnknownBlock</code> error if block is\nnot found.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect_block_hash_from_id\" class=\"method trait-impl\"><a href=\"#method.expect_block_hash_from_id\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">expect_block_hash_from_id</a>(\n    &amp;self,\n    id: &amp;BlockId&lt;Block&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Block as Block&gt;::Hash, Error&gt;</h4></section></summary><div class='docblock'>Convert an arbitrary block ID into a block hash. Returns <code>UnknownBlock</code> error if block is\nnot found.</div></details></div></details>","HeaderBackend<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AuxStore-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-AuxStore-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; AuxStore for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,\n    Client&lt;B, E, Block, RA&gt;: ProvideRuntimeApi&lt;Block&gt;,\n    &lt;Client&lt;B, E, Block, RA&gt; as ProvideRuntimeApi&lt;Block&gt;&gt;::Api: Core&lt;Block&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_aux\" class=\"method trait-impl\"><a href=\"#method.insert_aux\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">insert_aux</a>&lt;'a, 'b, 'c, I, D&gt;(\n    &amp;self,\n    insert: I,\n    delete: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    'b: 'a,\n    'c: 'a,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (&amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>], &amp;'c [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>])&gt;,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Insert auxiliary data into key-value store.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_aux\" class=\"method trait-impl\"><a href=\"#method.get_aux\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">get_aux</a>(&amp;self, key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Query auxiliary data from key-value store.</p>\n</div></details></div></details>","AuxStore","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProvideRuntimeApi%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-ProvideRuntimeApi%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; ProvideRuntimeApi&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block, Backend = B&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    Block: Block,\n    RA: ConstructRuntimeApi&lt;Block, Client&lt;B, E, Block, RA&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Api\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Api\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Api</a> = &lt;RA as ConstructRuntimeApi&lt;Block, Client&lt;B, E, Block, RA&gt;&gt;&gt;::RuntimeApi</h4></section></summary><div class='docblock'>The concrete type that provides the api.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.runtime_api\" class=\"method trait-impl\"><a href=\"#method.runtime_api\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">runtime_api</a>(\n    &amp;self\n) -&gt; ApiRef&lt;'_, &lt;Client&lt;B, E, Block, RA&gt; as ProvideRuntimeApi&lt;Block&gt;&gt;::Api&gt;</h4></section></summary><div class='docblock'>Returns the runtime api.\nThe returned instance will keep track of modifications to the storage. Any successful\ncall to an api function, will <code>commit</code> its changes to an internal buffer. Otherwise,\nthe modifications will be <code>discarded</code>. The modifications will not be applied to the\nstorage, even on a <code>commit</code>.</div></details></div></details>","ProvideRuntimeApi<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockchainEvents%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-BlockchainEvents%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; BlockchainEvents&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.import_notification_stream\" class=\"method trait-impl\"><a href=\"#method.import_notification_stream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">import_notification_stream</a>(\n    &amp;self\n) -&gt; TracingUnboundedReceiver&lt;BlockImportNotification&lt;Block&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get block import event stream.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_changes_notification_stream\" class=\"method trait-impl\"><a href=\"#method.storage_changes_notification_stream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_changes_notification_stream</a>(\n    &amp;self,\n    filter_keys: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[StorageKey]&gt;,\n    child_filter_keys: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[(StorageKey, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageKey&gt;&gt;)]&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StorageEventStream&lt;&lt;Block as Block&gt;::Hash&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Get storage changes event stream.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.every_import_notification_stream\" class=\"method trait-impl\"><a href=\"#method.every_import_notification_stream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">every_import_notification_stream</a>(\n    &amp;self\n) -&gt; TracingUnboundedReceiver&lt;BlockImportNotification&lt;Block&gt;&gt;</h4></section></summary><div class='docblock'>Get a stream of every imported block.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finality_notification_stream\" class=\"method trait-impl\"><a href=\"#method.finality_notification_stream\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">finality_notification_stream</a>(\n    &amp;self\n) -&gt; TracingUnboundedReceiver&lt;FinalityNotification&lt;Block&gt;&gt;</h4></section></summary><div class='docblock'>Get a stream of finality notifications. Not guaranteed to be fired for every\nfinalized block.</div></details></div></details>","BlockchainEvents<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProofProvider%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-ProofProvider%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; ProofProvider&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_proof\" class=\"method trait-impl\"><a href=\"#method.read_proof\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">read_proof</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    keys: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StorageProof, Error&gt;</h4></section></summary><div class='docblock'>Reads storage value at a given block + key, returning read proof.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_child_proof\" class=\"method trait-impl\"><a href=\"#method.read_child_proof\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">read_child_proof</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    child_info: &amp;ChildInfo,\n    keys: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StorageProof, Error&gt;</h4></section></summary><div class='docblock'>Reads child storage value at a given block + storage_key + key, returning\nread proof.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execution_proof\" class=\"method trait-impl\"><a href=\"#method.execution_proof\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">execution_proof</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    method: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>,\n    call_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, StorageProof), Error&gt;</h4></section></summary><div class='docblock'>Execute a call to a contract on top of state in a block of given hash\nAND returning execution proof. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_proof_collection\" class=\"method trait-impl\"><a href=\"#method.read_proof_collection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">read_proof_collection</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    start_key: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;],\n    size_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(CompactProof, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>), Error&gt;</h4></section></summary><div class='docblock'>Given a <code>Hash</code> iterate over all storage values starting at <code>start_keys</code>.\nLast <code>start_keys</code> element contains last accessed key value.\nWith multiple <code>start_keys</code>, first <code>start_keys</code> element is\nthe current storage key of of the last accessed child trie.\nat last level the value to start at exclusively.\nProofs is build until size limit is reached and always include at\nleast one key following <code>start_keys</code>.\nReturns combined proof and the numbers of collected keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_collection\" class=\"method trait-impl\"><a href=\"#method.storage_collection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_collection</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    start_key: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;],\n    size_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(KeyValueStorageLevel, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a <code>Hash</code> iterate over all storage values starting at <code>start_key</code>.\nReturns collected keys and values.\nReturns the collected keys values content of the top trie followed by the\ncollected keys values of child tries.\nOnly child tries with their root part of the collected content or\nrelated to <code>start_key</code> are attached.\nFor each collected state a boolean indicates if state reach\nend.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_range_proof\" class=\"method trait-impl\"><a href=\"#method.verify_range_proof\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_range_proof</a>(\n    &amp;self,\n    root: &lt;Block as Block&gt;::Hash,\n    proof: CompactProof,\n    start_key: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(KeyValueStates, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>), Error&gt;</h4></section></summary><div class='docblock'>Verify read storage proof for a set of keys.\nReturns collected key-value pairs and a the nested state\ndepth of current iteration or 0 if completed.</div></details></div></details>","ProofProvider<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexedBody%3CB%3E-for-Client%3CBE,+E,+B,+RA%3E\" class=\"impl\"><a href=\"#impl-IndexedBody%3CB%3E-for-Client%3CBE,+E,+B,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;BE, E, B, RA&gt; IndexedBody&lt;B&gt; for Client&lt;BE, E, B, RA&gt;<div class=\"where\">where\n    BE: Backend&lt;B&gt;,\n    E: CallExecutor&lt;B&gt;,\n    B: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_indexed_body\" class=\"method trait-impl\"><a href=\"#method.block_indexed_body\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">block_indexed_body</a>(\n    &amp;self,\n    number: &lt;&lt;B as Block&gt;::Header as Header&gt;::Number\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get all indexed transactions for a block,\nincluding renewed transactions. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.number\" class=\"method trait-impl\"><a href=\"#method.number\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">number</a>(\n    &amp;self,\n    hash: &lt;B as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;&lt;B as Block&gt;::Header as Header&gt;::Number&gt;, Error&gt;</h4></section></summary><div class='docblock'>Get block number for a block hash.</div></details></div></details>","IndexedBody<B>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UsageProvider%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-UsageProvider%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; UsageProvider&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.usage_info\" class=\"method trait-impl\"><a href=\"#method.usage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">usage_info</a>(&amp;self) -&gt; ClientInfo&lt;Block&gt;</h4></section></summary><div class=\"docblock\"><p>Get usage info about current client.</p>\n</div></details></div></details>","UsageProvider<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PreCommitActions%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-PreCommitActions%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; PreCommitActions&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_import_action\" class=\"method trait-impl\"><a href=\"#method.register_import_action\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">register_import_action</a>(\n    &amp;self,\n    action: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;BlockImportNotification&lt;Block&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;)&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;\n)</h4></section></summary><div class='docblock'>Actions to be performed on block import.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_finality_action\" class=\"method trait-impl\"><a href=\"#method.register_finality_action\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">register_finality_action</a>(\n    &amp;self,\n    action: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;FinalityNotification&lt;Block&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;)&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;\n)</h4></section></summary><div class='docblock'>Actions to be performed on block finalization.</div></details></div></details>","PreCommitActions<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockImport%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-BlockImport%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; BlockImport&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    Block: Block,\n    Client&lt;B, E, Block, RA&gt;: ProvideRuntimeApi&lt;Block&gt;,\n    &lt;Client&lt;B, E, Block, RA&gt; as ProvideRuntimeApi&lt;Block&gt;&gt;::Api: Core&lt;Block&gt; + ApiExt&lt;Block&gt;,\n    RA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The error type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_block\" class=\"method trait-impl\"><a href=\"#method.check_block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">check_block</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    block: BlockCheckParams&lt;Block&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ImportResult, &lt;Client&lt;B, E, Block, RA&gt; as BlockImport&lt;Block&gt;&gt;::Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Client&lt;B, E, Block, RA&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Check block preconditions.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.import_block\" class=\"method trait-impl\"><a href=\"#method.import_block\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">import_block</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    import_block: BlockImportParams&lt;Block&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ImportResult, &lt;Client&lt;B, E, Block, RA&gt; as BlockImport&lt;Block&gt;&gt;::Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Client&lt;B, E, Block, RA&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Import a block.</div></details></div></details>","BlockImport<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockOf-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-BlockOf-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; BlockOf for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Type\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Type\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Type</a> = Block</h4></section></summary><div class='docblock'>The type of the block.</div></details></div></details>","BlockOf","moonbeam_service::lazy_loading::TLazyLoadingClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HeaderMetadata%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"impl\"><a href=\"#impl-HeaderMetadata%3CBlock%3E-for-Client%3CB,+E,+Block,+RA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B, E, Block, RA&gt; HeaderMetadata&lt;Block&gt; for Client&lt;B, E, Block, RA&gt;<div class=\"where\">where\n    B: Backend&lt;Block&gt;,\n    E: CallExecutor&lt;Block&gt;,\n    Block: Block,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>Error used in case the header metadata is not found.</div></details><section id=\"method.header_metadata\" class=\"method trait-impl\"><a href=\"#method.header_metadata\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">header_metadata</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;CachedHeaderMetadata&lt;Block&gt;, &lt;Client&lt;B, E, Block, RA&gt; as HeaderMetadata&lt;Block&gt;&gt;::Error&gt;</h4></section><section id=\"method.insert_header_metadata\" class=\"method trait-impl\"><a href=\"#method.insert_header_metadata\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">insert_header_metadata</a>(\n    &amp;self,\n    hash: &lt;Block as Block&gt;::Hash,\n    metadata: CachedHeaderMetadata&lt;Block&gt;\n)</h4></section><section id=\"method.remove_header_metadata\" class=\"method trait-impl\"><a href=\"#method.remove_header_metadata\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_header_metadata</a>(&amp;self, hash: &lt;Block as Block&gt;::Hash)</h4></section></div></details>","HeaderMetadata<Block>","moonbeam_service::lazy_loading::TLazyLoadingClient"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()